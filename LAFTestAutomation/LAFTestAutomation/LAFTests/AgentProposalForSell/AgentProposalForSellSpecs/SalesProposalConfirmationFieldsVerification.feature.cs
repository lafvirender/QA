// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace LAFTests.AgentProposalForSell.AgentProposalForSellSpecs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("SalesProposalConfirmationFieldsVerification")]
    public partial class SalesProposalConfirmationFieldsVerificationFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "SalesProposalConfirmationFieldsVerification.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "SalesProposalConfirmationFieldsVerification", "\tAgent Sales Proposal should be submitted successfully", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentProposalForSell_ProposalConfirmation001_Verify Agent Dashboard is displayed " +
            "on clicking Go To Your Portal button on Confirm popup")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        public virtual void AgentProposalForSell_ProposalConfirmation001_VerifyAgentDashboardIsDisplayedOnClickingGoToYourPortalButtonOnConfirmPopup()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentProposalForSell_ProposalConfirmation001_Verify Agent Dashboard is displayed " +
                    "on clicking Go To Your Portal button on Confirm popup", new string[] {
                        "mytag"});
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
 testRunner.Given("User navigates to Agent_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition",
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch",
                        "PrincipalFirstName",
                        "PrincipalLastName",
                        "PrincipalPhone",
                        "PrincipalMobile",
                        "PrincipalEmail"});
            table1.AddRow(new string[] {
                        "Sales",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant",
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "testSuburb",
                        "VIC",
                        "3081",
                        "testAgency",
                        "branch",
                        "PFirst",
                        "PLast",
                        "0412213456",
                        "0412213456",
                        "a@testing167658756.com"});
#line 7
 testRunner.And("User navigates to Begin_Proposal Page after registering agent with details as bel" +
                    "ow", ((string)(null)), table1, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "SaleMethods",
                        "Languages",
                        "SaleAuthoritySize",
                        "SaleTeamSize",
                        "PostCodes",
                        "AboutYouDetails",
                        "AboutYourAgencyDetails",
                        "MarketingSellingApproach",
                        "FirstFeeStrPropertiesBetweenUB",
                        "FirstFeeStrCommissionType",
                        "FirstFeeStrCommissionPercentage",
                        "FirstFeeStrCommissionFixedFee",
                        "FirstFeeStrMarketingBudget",
                        "SecondFeeStrPropertiesBetweenUB",
                        "SecondFeeStrCommissionType",
                        "SecondFeeStrCommissionPercentage",
                        "SecondFeeStrCommissionFixedFee",
                        "SecondFeeStrMarketingBudget",
                        "ThirdFeeStrPropertiesBetweenUB",
                        "ThirdFeeStrCommissionType",
                        "ThirdFeeStrCommissionPercentage",
                        "ThirdFeeStrCommissionFixedFee",
                        "ThirdFeeStrMarketingBudget"});
            table2.AddRow(new string[] {
                        "Auctions",
                        "Arabic",
                        "1 month",
                        "4",
                        "3081",
                        "aboutyou details",
                        "about your agency details",
                        "marketing approach details",
                        "$2.5M+",
                        "percentage",
                        "3.0",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 10
 testRunner.When("Submits the Sales proposal after entering details as", ((string)(null)), table2, "When ");
#line 13
 testRunner.And("User clicks on Go To Your Portal Button on Sales Confirm popup", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
 testRunner.Then("Agent Dashboard is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
