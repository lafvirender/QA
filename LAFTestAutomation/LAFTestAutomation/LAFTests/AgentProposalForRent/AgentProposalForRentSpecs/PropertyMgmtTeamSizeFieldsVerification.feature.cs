// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace LAFTests.AgentProposalForRent.AgentProposalForRentSpecs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("PropertyMgmtTeamSizeFieldsVerification")]
    public partial class PropertyMgmtTeamSizeFieldsVerificationFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "PropertyMgmtTeamSizeFieldsVerification.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "PropertyMgmtTeamSizeFieldsVerification", "\tIn order to submit the proposal for Landlords\r\n\tAs an Agent\r\n\tI want to be able " +
                    "to select Property Management Team Size", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentProposalForRent_PropMgmtTeam001_Verify the Question for Property Managment T" +
            "eam Size selection")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        public virtual void AgentProposalForRent_PropMgmtTeam001_VerifyTheQuestionForPropertyManagmentTeamSizeSelection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentProposalForRent_PropMgmtTeam001_Verify the Question for Property Managment T" +
                    "eam Size selection", new string[] {
                        "mytag"});
#line 7
 this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("User goes to Agent_Reg_Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition",
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch",
                        "PrincipalFirstName",
                        "PrincipalLastName",
                        "PrincipalPhone",
                        "PrincipalMobile",
                        "PrincipalEmail"});
            table1.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant",
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "testSuburb",
                        "VIC",
                        "3081",
                        "testAgency",
                        "branch",
                        "PFirst",
                        "PLast",
                        "0412213456",
                        "0412213456",
                        "a@testing167658756.com"});
#line 9
 testRunner.And("User goes to BeginProposal after registering agent with", ((string)(null)), table1, "And ");
#line 12
 testRunner.When("User navigates to Property Management Team Size Selection page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 13
 testRunner.Then("Question \"How many people are in your property management team?\" is displayed for" +
                    " Property Managment Team Size selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentProposalForRent_PropMgmtTeam002_Verify that Property Per Property Manager se" +
            "lection question is displayed when user clicks Next after selecting Property Man" +
            "agment Team Size")]
        public virtual void AgentProposalForRent_PropMgmtTeam002_VerifyThatPropertyPerPropertyManagerSelectionQuestionIsDisplayedWhenUserClicksNextAfterSelectingPropertyManagmentTeamSize()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentProposalForRent_PropMgmtTeam002_Verify that Property Per Property Manager se" +
                    "lection question is displayed when user clicks Next after selecting Property Man" +
                    "agment Team Size", ((string[])(null)));
#line 16
 this.ScenarioSetup(scenarioInfo);
#line 17
 testRunner.Given("User goes to Agent_Reg_Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition",
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch",
                        "PrincipalFirstName",
                        "PrincipalLastName",
                        "PrincipalPhone",
                        "PrincipalMobile",
                        "PrincipalEmail"});
            table2.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant",
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "testSuburb",
                        "VIC",
                        "3081",
                        "testAgency",
                        "branch",
                        "PFirst",
                        "PLast",
                        "0412213456",
                        "0412213456",
                        "a@testing167658756.com"});
#line 18
 testRunner.And("User goes to BeginProposal after registering agent with", ((string)(null)), table2, "And ");
#line 21
 testRunner.When("User navigates to Property Management Team Size Selection page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "PropertyMgmtTeamSize"});
            table3.AddRow(new string[] {
                        "5"});
#line 22
 testRunner.When("User clicks Next after selecting Property Management Team Size As", ((string)(null)), table3, "When ");
#line 25
 testRunner.Then("Property Per Property Manager selection question is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentProposalForRent_PropMgmtTeam003_Verify that error message is displayed when " +
            "user clicks Next without entering Property Managment Team Size")]
        public virtual void AgentProposalForRent_PropMgmtTeam003_VerifyThatErrorMessageIsDisplayedWhenUserClicksNextWithoutEnteringPropertyManagmentTeamSize()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentProposalForRent_PropMgmtTeam003_Verify that error message is displayed when " +
                    "user clicks Next without entering Property Managment Team Size", ((string[])(null)));
#line 27
 this.ScenarioSetup(scenarioInfo);
#line 28
 testRunner.Given("User goes to Agent_Reg_Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition",
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch",
                        "PrincipalFirstName",
                        "PrincipalLastName",
                        "PrincipalPhone",
                        "PrincipalMobile",
                        "PrincipalEmail"});
            table4.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant",
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "testSuburb",
                        "VIC",
                        "3081",
                        "testAgency",
                        "branch",
                        "PFirst",
                        "PLast",
                        "0412213456",
                        "0412213456",
                        "a@testing167658756.com"});
#line 29
 testRunner.And("User goes to BeginProposal after registering agent with", ((string)(null)), table4, "And ");
#line 32
 testRunner.When("User navigates to Property Management Team Size Selection page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 33
 testRunner.When("User clicks Next", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 34
 testRunner.Then("Error with message \"How many people are in your property management team?\" is dis" +
                    "played", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentProposalForRent_PropMgmtTeam004_Verify that error message is displayed when " +
            "user clicks Next after entering alphabets in Property Managment Team Size")]
        public virtual void AgentProposalForRent_PropMgmtTeam004_VerifyThatErrorMessageIsDisplayedWhenUserClicksNextAfterEnteringAlphabetsInPropertyManagmentTeamSize()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentProposalForRent_PropMgmtTeam004_Verify that error message is displayed when " +
                    "user clicks Next after entering alphabets in Property Managment Team Size", ((string[])(null)));
#line 36
 this.ScenarioSetup(scenarioInfo);
#line 37
 testRunner.Given("User goes to Agent_Reg_Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition",
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch",
                        "PrincipalFirstName",
                        "PrincipalLastName",
                        "PrincipalPhone",
                        "PrincipalMobile",
                        "PrincipalEmail"});
            table5.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant",
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "testSuburb",
                        "VIC",
                        "3081",
                        "testAgency",
                        "branch",
                        "PFirst",
                        "PLast",
                        "0412213456",
                        "0412213456",
                        "a@testing167658756.com"});
#line 38
 testRunner.And("User goes to BeginProposal after registering agent with", ((string)(null)), table5, "And ");
#line 41
 testRunner.When("User navigates to Property Management Team Size Selection page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "PropertyMgmtTeamSize"});
            table6.AddRow(new string[] {
                        "abcd"});
#line 42
 testRunner.When("User clicks Next after selecting Property Management Team Size As", ((string)(null)), table6, "When ");
#line 45
 testRunner.Then("Error with message \"How many people are in your property management team?\" is dis" +
                    "played", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentProposalForRent_PropMgmtTeam005_Verify that under Progress section, Team Siz" +
            "e circle should be displayed as Active")]
        public virtual void AgentProposalForRent_PropMgmtTeam005_VerifyThatUnderProgressSectionTeamSizeCircleShouldBeDisplayedAsActive()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentProposalForRent_PropMgmtTeam005_Verify that under Progress section, Team Siz" +
                    "e circle should be displayed as Active", ((string[])(null)));
#line 47
 this.ScenarioSetup(scenarioInfo);
#line 48
 testRunner.Given("User goes to Agent_Reg_Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition",
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch",
                        "PrincipalFirstName",
                        "PrincipalLastName",
                        "PrincipalPhone",
                        "PrincipalMobile",
                        "PrincipalEmail"});
            table7.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant",
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "testSuburb",
                        "VIC",
                        "3081",
                        "testAgency",
                        "branch",
                        "PFirst",
                        "PLast",
                        "0412213456",
                        "0412213456",
                        "a@testing167658756.com"});
#line 49
 testRunner.And("User goes to BeginProposal after registering agent with", ((string)(null)), table7, "And ");
#line 52
 testRunner.When("User navigates to Property Management Team Size Selection page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 53
 testRunner.Then("Team Size circle is displayed as Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentProposalForRent_PropMgmtTeam006_Verify that under Progress section, Team Siz" +
            "e circle should be displayed as Checked on navigating to next section")]
        public virtual void AgentProposalForRent_PropMgmtTeam006_VerifyThatUnderProgressSectionTeamSizeCircleShouldBeDisplayedAsCheckedOnNavigatingToNextSection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentProposalForRent_PropMgmtTeam006_Verify that under Progress section, Team Siz" +
                    "e circle should be displayed as Checked on navigating to next section", ((string[])(null)));
#line 55
 this.ScenarioSetup(scenarioInfo);
#line 56
 testRunner.Given("User goes to Agent_Reg_Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition",
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch",
                        "PrincipalFirstName",
                        "PrincipalLastName",
                        "PrincipalPhone",
                        "PrincipalMobile",
                        "PrincipalEmail"});
            table8.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant",
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "testSuburb",
                        "VIC",
                        "3081",
                        "testAgency",
                        "branch",
                        "PFirst",
                        "PLast",
                        "0412213456",
                        "0412213456",
                        "a@testing167658756.com"});
#line 57
 testRunner.And("User goes to BeginProposal after registering agent with", ((string)(null)), table8, "And ");
#line 60
 testRunner.When("User navigates to Property Management Team Size Selection page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "PropertyMgmtTeamSize"});
            table9.AddRow(new string[] {
                        "5"});
#line 61
 testRunner.When("User clicks Next after selecting Property Management Team Size As", ((string)(null)), table9, "When ");
#line 64
 testRunner.Then("Team Size circle is displayed as Checked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentProposalForRent_PropMgmtTeam007_Verify that error message is displayed when " +
            "user clicks Next after entering decimal value in Property Managment Team Size")]
        public virtual void AgentProposalForRent_PropMgmtTeam007_VerifyThatErrorMessageIsDisplayedWhenUserClicksNextAfterEnteringDecimalValueInPropertyManagmentTeamSize()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentProposalForRent_PropMgmtTeam007_Verify that error message is displayed when " +
                    "user clicks Next after entering decimal value in Property Managment Team Size", ((string[])(null)));
#line 66
 this.ScenarioSetup(scenarioInfo);
#line 67
 testRunner.Given("User goes to Agent_Reg_Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition",
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch",
                        "PrincipalFirstName",
                        "PrincipalLastName",
                        "PrincipalPhone",
                        "PrincipalMobile",
                        "PrincipalEmail"});
            table10.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant",
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "testSuburb",
                        "VIC",
                        "3081",
                        "testAgency",
                        "branch",
                        "PFirst",
                        "PLast",
                        "0412213456",
                        "0412213456",
                        "a@testing167658756.com"});
#line 68
 testRunner.And("User goes to BeginProposal after registering agent with", ((string)(null)), table10, "And ");
#line 71
 testRunner.When("User navigates to Property Management Team Size Selection page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "PropertyMgmtTeamSize"});
            table11.AddRow(new string[] {
                        "5.88"});
#line 72
 testRunner.And("User clicks Next after selecting Property Management Team Size As", ((string)(null)), table11, "And ");
#line 75
 testRunner.Then("Error with message \"How many people are in your property management team?\" is dis" +
                    "played", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
