// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace LAFTests.AgentProposalForRent.AgentProposalForRentSpecs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("LandlordInsuranceAdviceFieldsVerification")]
    public partial class LandlordInsuranceAdviceFieldsVerificationFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "LandlordInsuranceAdviceFieldsVerification.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "LandlordInsuranceAdviceFieldsVerification", "In order to submit the proposal for Landlords\r\n\tAs an Agent\r\n\tI want to be able t" +
                    "o enter select the option for Landlord Insurance Advice", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentProposalForRent_LandlordInsuranceAdvice001_Verify the Question for Landlord " +
            "Insurance Advice")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        public virtual void AgentProposalForRent_LandlordInsuranceAdvice001_VerifyTheQuestionForLandlordInsuranceAdvice()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentProposalForRent_LandlordInsuranceAdvice001_Verify the Question for Landlord " +
                    "Insurance Advice", new string[] {
                        "mytag"});
#line 7
 this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("User_navigate to Agent_Registration_Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition",
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch",
                        "PrincipalFirstName",
                        "PrincipalLastName",
                        "PrincipalPhone",
                        "PrincipalMobile",
                        "PrincipalEmail"});
            table1.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant",
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "testSuburb",
                        "VIC",
                        "3081",
                        "testAgency",
                        "branch",
                        "PFirst",
                        "PLast",
                        "0412213456",
                        "0412213456",
                        "a@testing167658756.com"});
#line 9
 testRunner.And("User_navigates to Begin_Proposal after registering agent with details", ((string)(null)), table1, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "PropertyMgmtTeamSize",
                        "PropertyPerPropManager",
                        "Languages",
                        "EmergencyContact"});
            table2.AddRow(new string[] {
                        "50",
                        "10",
                        "Spanish",
                        "Yes"});
#line 12
 testRunner.When("User navigates to Landlord Insurance page  after entering details as", ((string)(null)), table2, "When ");
#line 15
 testRunner.Then("Question \"Do you offer landlord insurance advice?\" is displayed for Landlord Insu" +
                    "rance Advice", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentProposalForRent_LandlordInsuranceAdvice002_Verify the Question for Landlord " +
            "Insurance Advice is displayed on clicking Yes option for Emergency Contact")]
        public virtual void AgentProposalForRent_LandlordInsuranceAdvice002_VerifyTheQuestionForLandlordInsuranceAdviceIsDisplayedOnClickingYesOptionForEmergencyContact()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentProposalForRent_LandlordInsuranceAdvice002_Verify the Question for Landlord " +
                    "Insurance Advice is displayed on clicking Yes option for Emergency Contact", ((string[])(null)));
#line 18
 this.ScenarioSetup(scenarioInfo);
#line 19
 testRunner.Given("User_navigate to Agent_Registration_Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition",
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch",
                        "PrincipalFirstName",
                        "PrincipalLastName",
                        "PrincipalPhone",
                        "PrincipalMobile",
                        "PrincipalEmail"});
            table3.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant",
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "testSuburb",
                        "VIC",
                        "3081",
                        "testAgency",
                        "branch",
                        "PFirst",
                        "PLast",
                        "0412213456",
                        "0412213456",
                        "a@testing167658756.com"});
#line 20
 testRunner.And("User_navigates to Begin_Proposal after registering agent with details", ((string)(null)), table3, "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "PropertyMgmtTeamSize",
                        "PropertyPerPropManager",
                        "Languages",
                        "EmergencyContact"});
            table4.AddRow(new string[] {
                        "50",
                        "10",
                        "Spanish",
                        "Yes"});
#line 23
 testRunner.When("User navigates to Landlord Insurance page  after entering details as", ((string)(null)), table4, "When ");
#line 26
 testRunner.And("User selects Yes", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
 testRunner.Then("Question for selecting Inspection Frequency is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentProposalForRent_LandlordInsuranceAdvice003_Verify the Question for Landlord " +
            "Insurance Advice is displayed on clicking No option for Emergency Contact")]
        public virtual void AgentProposalForRent_LandlordInsuranceAdvice003_VerifyTheQuestionForLandlordInsuranceAdviceIsDisplayedOnClickingNoOptionForEmergencyContact()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentProposalForRent_LandlordInsuranceAdvice003_Verify the Question for Landlord " +
                    "Insurance Advice is displayed on clicking No option for Emergency Contact", ((string[])(null)));
#line 29
 this.ScenarioSetup(scenarioInfo);
#line 30
 testRunner.Given("User_navigate to Agent_Registration_Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition",
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch",
                        "PrincipalFirstName",
                        "PrincipalLastName",
                        "PrincipalPhone",
                        "PrincipalMobile",
                        "PrincipalEmail"});
            table5.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant",
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "testSuburb",
                        "VIC",
                        "3081",
                        "testAgency",
                        "branch",
                        "PFirst",
                        "PLast",
                        "0412213456",
                        "0412213456",
                        "a@testing167658756.com"});
#line 31
 testRunner.And("User_navigates to Begin_Proposal after registering agent with details", ((string)(null)), table5, "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "PropertyMgmtTeamSize",
                        "PropertyPerPropManager",
                        "Languages",
                        "EmergencyContact"});
            table6.AddRow(new string[] {
                        "50",
                        "10",
                        "Spanish",
                        "Yes"});
#line 34
 testRunner.When("User navigates to Landlord Insurance page  after entering details as", ((string)(null)), table6, "When ");
#line 37
 testRunner.And("User selects No", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 38
 testRunner.Then("Question for selecting Inspection Frequency is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentProposalForRent_LandlordInsuranceAdvice004_Verify that under Progress sectio" +
            "n, Insurance circle should be displayed as Active")]
        public virtual void AgentProposalForRent_LandlordInsuranceAdvice004_VerifyThatUnderProgressSectionInsuranceCircleShouldBeDisplayedAsActive()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentProposalForRent_LandlordInsuranceAdvice004_Verify that under Progress sectio" +
                    "n, Insurance circle should be displayed as Active", ((string[])(null)));
#line 40
 this.ScenarioSetup(scenarioInfo);
#line 41
 testRunner.Given("User_navigate to Agent_Registration_Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition",
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch",
                        "PrincipalFirstName",
                        "PrincipalLastName",
                        "PrincipalPhone",
                        "PrincipalMobile",
                        "PrincipalEmail"});
            table7.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant",
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "testSuburb",
                        "VIC",
                        "3081",
                        "testAgency",
                        "branch",
                        "PFirst",
                        "PLast",
                        "0412213456",
                        "0412213456",
                        "a@testing167658756.com"});
#line 42
 testRunner.And("User_navigates to Begin_Proposal after registering agent with details", ((string)(null)), table7, "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "PropertyMgmtTeamSize",
                        "PropertyPerPropManager",
                        "Languages",
                        "EmergencyContact"});
            table8.AddRow(new string[] {
                        "50",
                        "10",
                        "Spanish",
                        "Yes"});
#line 45
 testRunner.When("User navigates to Landlord Insurance page  after entering details as", ((string)(null)), table8, "When ");
#line 48
 testRunner.Then("Insurance circle should be displayed as Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentProposalForRent_LandlordInsuranceAdvice005_Verify that under Progress sectio" +
            "n, Insurance circle should be displayed as Checked on navigating to next section" +
            "")]
        public virtual void AgentProposalForRent_LandlordInsuranceAdvice005_VerifyThatUnderProgressSectionInsuranceCircleShouldBeDisplayedAsCheckedOnNavigatingToNextSection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentProposalForRent_LandlordInsuranceAdvice005_Verify that under Progress sectio" +
                    "n, Insurance circle should be displayed as Checked on navigating to next section" +
                    "", ((string[])(null)));
#line 50
 this.ScenarioSetup(scenarioInfo);
#line 51
 testRunner.Given("User_navigate to Agent_Registration_Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition",
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch",
                        "PrincipalFirstName",
                        "PrincipalLastName",
                        "PrincipalPhone",
                        "PrincipalMobile",
                        "PrincipalEmail"});
            table9.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant",
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "testSuburb",
                        "VIC",
                        "3081",
                        "testAgency",
                        "branch",
                        "PFirst",
                        "PLast",
                        "0412213456",
                        "0412213456",
                        "a@testing167658756.com"});
#line 52
 testRunner.And("User_navigates to Begin_Proposal after registering agent with details", ((string)(null)), table9, "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "PropertyMgmtTeamSize",
                        "PropertyPerPropManager",
                        "Languages",
                        "EmergencyContact"});
            table10.AddRow(new string[] {
                        "50",
                        "10",
                        "Spanish",
                        "Yes"});
#line 55
 testRunner.When("User navigates to Landlord Insurance page  after entering details as", ((string)(null)), table10, "When ");
#line 58
 testRunner.And("User selects Yes", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 59
 testRunner.Then("Insurance circle is displayed as Checked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentProposalForRent_LandlordInsuranceAdvice006_Verify that link for Moving Forwa" +
            "rd should be disabled by default")]
        public virtual void AgentProposalForRent_LandlordInsuranceAdvice006_VerifyThatLinkForMovingForwardShouldBeDisabledByDefault()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentProposalForRent_LandlordInsuranceAdvice006_Verify that link for Moving Forwa" +
                    "rd should be disabled by default", ((string[])(null)));
#line 61
 this.ScenarioSetup(scenarioInfo);
#line 62
 testRunner.Given("User_navigate to Agent_Registration_Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition",
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch",
                        "PrincipalFirstName",
                        "PrincipalLastName",
                        "PrincipalPhone",
                        "PrincipalMobile",
                        "PrincipalEmail"});
            table11.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant",
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "testSuburb",
                        "VIC",
                        "3081",
                        "testAgency",
                        "branch",
                        "PFirst",
                        "PLast",
                        "0412213456",
                        "0412213456",
                        "a@testing167658756.com"});
#line 63
 testRunner.And("User_navigates to Begin_Proposal after registering agent with details", ((string)(null)), table11, "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "PropertyMgmtTeamSize",
                        "PropertyPerPropManager",
                        "Languages",
                        "EmergencyContact"});
            table12.AddRow(new string[] {
                        "50",
                        "10",
                        "Spanish",
                        "Yes"});
#line 66
 testRunner.When("User navigates to Landlord Insurance page  after entering details as", ((string)(null)), table12, "When ");
#line 69
 testRunner.Then("Links for Moving_Forward is disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentProposalForRent_LandlordInsuranceAdvice007_Verify that link for Moving forwa" +
            "rd is displayed as enabled when user moves back to Landlord Insurance question f" +
            "rom Property Inspection Frequency question")]
        public virtual void AgentProposalForRent_LandlordInsuranceAdvice007_VerifyThatLinkForMovingForwardIsDisplayedAsEnabledWhenUserMovesBackToLandlordInsuranceQuestionFromPropertyInspectionFrequencyQuestion()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentProposalForRent_LandlordInsuranceAdvice007_Verify that link for Moving forwa" +
                    "rd is displayed as enabled when user moves back to Landlord Insurance question f" +
                    "rom Property Inspection Frequency question", ((string[])(null)));
#line 71
 this.ScenarioSetup(scenarioInfo);
#line 72
 testRunner.Given("User_navigate to Agent_Registration_Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition",
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch",
                        "PrincipalFirstName",
                        "PrincipalLastName",
                        "PrincipalPhone",
                        "PrincipalMobile",
                        "PrincipalEmail"});
            table13.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant",
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "testSuburb",
                        "VIC",
                        "3081",
                        "testAgency",
                        "branch",
                        "PFirst",
                        "PLast",
                        "0412213456",
                        "0412213456",
                        "a@testing167658756.com"});
#line 73
 testRunner.And("User_navigates to Begin_Proposal after registering agent with details", ((string)(null)), table13, "And ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "PropertyMgmtTeamSize",
                        "PropertyPerPropManager",
                        "Languages",
                        "EmergencyContact"});
            table14.AddRow(new string[] {
                        "50",
                        "10",
                        "Spanish",
                        "Yes"});
#line 76
 testRunner.When("User navigates to Landlord Insurance page  after entering details as", ((string)(null)), table14, "When ");
#line 79
 testRunner.And("User selects Yes", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 80
 testRunner.And("I move back to Landlord Insurance Advice from Property Inspection Frequency quest" +
                    "ion", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 81
 testRunner.Then("Link for moving_forward is enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentProposalForRent_LandlordInsuranceAdvice008_Verify that Property Inspection F" +
            "requency question is displayed on clicking Forward link on Landlord Insurance Ad" +
            "vice question")]
        public virtual void AgentProposalForRent_LandlordInsuranceAdvice008_VerifyThatPropertyInspectionFrequencyQuestionIsDisplayedOnClickingForwardLinkOnLandlordInsuranceAdviceQuestion()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentProposalForRent_LandlordInsuranceAdvice008_Verify that Property Inspection F" +
                    "requency question is displayed on clicking Forward link on Landlord Insurance Ad" +
                    "vice question", ((string[])(null)));
#line 83
 this.ScenarioSetup(scenarioInfo);
#line 84
 testRunner.Given("User_navigate to Agent_Registration_Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition",
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch",
                        "PrincipalFirstName",
                        "PrincipalLastName",
                        "PrincipalPhone",
                        "PrincipalMobile",
                        "PrincipalEmail"});
            table15.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant",
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "testSuburb",
                        "VIC",
                        "3081",
                        "testAgency",
                        "branch",
                        "PFirst",
                        "PLast",
                        "0412213456",
                        "0412213456",
                        "a@testing167658756.com"});
#line 85
 testRunner.And("User_navigates to Begin_Proposal after registering agent with details", ((string)(null)), table15, "And ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "PropertyMgmtTeamSize",
                        "PropertyPerPropManager",
                        "Languages",
                        "EmergencyContact"});
            table16.AddRow(new string[] {
                        "50",
                        "10",
                        "Spanish",
                        "Yes"});
#line 88
 testRunner.When("User navigates to Landlord Insurance page  after entering details as", ((string)(null)), table16, "When ");
#line 91
 testRunner.And("User selects Yes", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 92
 testRunner.And("I move back to Landlord Insurance Advice from Property Inspection Frequency quest" +
                    "ion", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 93
 testRunner.And("I Click Forward_Link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 94
 testRunner.Then("Question for selecting Inspection Frequency is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentProposalForRent_LandlordInsuranceAdvice009_Verify the color of option Yes wh" +
            "en it is not selected")]
        public virtual void AgentProposalForRent_LandlordInsuranceAdvice009_VerifyTheColorOfOptionYesWhenItIsNotSelected()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentProposalForRent_LandlordInsuranceAdvice009_Verify the color of option Yes wh" +
                    "en it is not selected", ((string[])(null)));
#line 96
 this.ScenarioSetup(scenarioInfo);
#line 97
 testRunner.Given("User_navigate to Agent_Registration_Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition",
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch",
                        "PrincipalFirstName",
                        "PrincipalLastName",
                        "PrincipalPhone",
                        "PrincipalMobile",
                        "PrincipalEmail"});
            table17.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant",
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "testSuburb",
                        "VIC",
                        "3081",
                        "testAgency",
                        "branch",
                        "PFirst",
                        "PLast",
                        "0412213456",
                        "0412213456",
                        "a@testing167658756.com"});
#line 98
 testRunner.And("User_navigates to Begin_Proposal after registering agent with details", ((string)(null)), table17, "And ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "PropertyMgmtTeamSize",
                        "PropertyPerPropManager",
                        "Languages",
                        "EmergencyContact"});
            table18.AddRow(new string[] {
                        "50",
                        "10",
                        "Spanish",
                        "Yes"});
#line 101
 testRunner.When("User navigates to Landlord Insurance page  after entering details as", ((string)(null)), table18, "When ");
#line 104
 testRunner.Then("Color of the Yes option is \"#00AEFF\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentProposalForRent_LandlordInsuranceAdvice010_Verify the color of option No whe" +
            "n it is not selected")]
        public virtual void AgentProposalForRent_LandlordInsuranceAdvice010_VerifyTheColorOfOptionNoWhenItIsNotSelected()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentProposalForRent_LandlordInsuranceAdvice010_Verify the color of option No whe" +
                    "n it is not selected", ((string[])(null)));
#line 106
 this.ScenarioSetup(scenarioInfo);
#line 107
 testRunner.Given("User_navigate to Agent_Registration_Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition",
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch",
                        "PrincipalFirstName",
                        "PrincipalLastName",
                        "PrincipalPhone",
                        "PrincipalMobile",
                        "PrincipalEmail"});
            table19.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant",
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "testSuburb",
                        "VIC",
                        "3081",
                        "testAgency",
                        "branch",
                        "PFirst",
                        "PLast",
                        "0412213456",
                        "0412213456",
                        "a@testing167658756.com"});
#line 108
 testRunner.And("User_navigates to Begin_Proposal after registering agent with details", ((string)(null)), table19, "And ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "PropertyMgmtTeamSize",
                        "PropertyPerPropManager",
                        "Languages",
                        "EmergencyContact"});
            table20.AddRow(new string[] {
                        "50",
                        "10",
                        "Spanish",
                        "Yes"});
#line 111
 testRunner.When("User navigates to Landlord Insurance page  after entering details as", ((string)(null)), table20, "When ");
#line 114
 testRunner.Then("Color of the No option is \"#00AEFF\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentProposalForRent_LandlordInsuranceAdvice011_Verify the color of option Yes ch" +
            "anges on selection")]
        public virtual void AgentProposalForRent_LandlordInsuranceAdvice011_VerifyTheColorOfOptionYesChangesOnSelection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentProposalForRent_LandlordInsuranceAdvice011_Verify the color of option Yes ch" +
                    "anges on selection", ((string[])(null)));
#line 116
 this.ScenarioSetup(scenarioInfo);
#line 117
 testRunner.Given("User_navigate to Agent_Registration_Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition",
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch",
                        "PrincipalFirstName",
                        "PrincipalLastName",
                        "PrincipalPhone",
                        "PrincipalMobile",
                        "PrincipalEmail"});
            table21.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant",
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "testSuburb",
                        "VIC",
                        "3081",
                        "testAgency",
                        "branch",
                        "PFirst",
                        "PLast",
                        "0412213456",
                        "0412213456",
                        "a@testing167658756.com"});
#line 118
 testRunner.And("User_navigates to Begin_Proposal after registering agent with details", ((string)(null)), table21, "And ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "PropertyMgmtTeamSize",
                        "PropertyPerPropManager",
                        "Languages",
                        "EmergencyContact"});
            table22.AddRow(new string[] {
                        "50",
                        "10",
                        "Spanish",
                        "Yes"});
#line 121
 testRunner.When("User navigates to Landlord Insurance page  after entering details as", ((string)(null)), table22, "When ");
#line 124
 testRunner.And("User selects Yes", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 125
 testRunner.And("I move back to Landlord Insurance Advice from Property Inspection Frequency quest" +
                    "ion", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 126
 testRunner.Then("Color of the Yes option is \"#14B24B\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentProposalForRent_LandlordInsuranceAdvice012_Verify the color of option No cha" +
            "nges on selection")]
        public virtual void AgentProposalForRent_LandlordInsuranceAdvice012_VerifyTheColorOfOptionNoChangesOnSelection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentProposalForRent_LandlordInsuranceAdvice012_Verify the color of option No cha" +
                    "nges on selection", ((string[])(null)));
#line 128
 this.ScenarioSetup(scenarioInfo);
#line 129
 testRunner.Given("User_navigate to Agent_Registration_Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition",
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch",
                        "PrincipalFirstName",
                        "PrincipalLastName",
                        "PrincipalPhone",
                        "PrincipalMobile",
                        "PrincipalEmail"});
            table23.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant",
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "testSuburb",
                        "VIC",
                        "3081",
                        "testAgency",
                        "branch",
                        "PFirst",
                        "PLast",
                        "0412213456",
                        "0412213456",
                        "a@testing167658756.com"});
#line 130
 testRunner.And("User_navigates to Begin_Proposal after registering agent with details", ((string)(null)), table23, "And ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "PropertyMgmtTeamSize",
                        "PropertyPerPropManager",
                        "Languages",
                        "EmergencyContact"});
            table24.AddRow(new string[] {
                        "50",
                        "10",
                        "Spanish",
                        "Yes"});
#line 133
 testRunner.When("User navigates to Landlord Insurance page  after entering details as", ((string)(null)), table24, "When ");
#line 136
 testRunner.And("User selects No", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 137
 testRunner.And("I move back to Landlord Insurance Advice from Property Inspection Frequency quest" +
                    "ion", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 138
 testRunner.Then("Color of the No option is \"#14B24B\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentProposalForRent_LandlordInsuranceAdvice013_Verify the color of option Yes ch" +
            "anges on deselection")]
        public virtual void AgentProposalForRent_LandlordInsuranceAdvice013_VerifyTheColorOfOptionYesChangesOnDeselection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentProposalForRent_LandlordInsuranceAdvice013_Verify the color of option Yes ch" +
                    "anges on deselection", ((string[])(null)));
#line 140
 this.ScenarioSetup(scenarioInfo);
#line 141
 testRunner.Given("User_navigate to Agent_Registration_Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition",
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch",
                        "PrincipalFirstName",
                        "PrincipalLastName",
                        "PrincipalPhone",
                        "PrincipalMobile",
                        "PrincipalEmail"});
            table25.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant",
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "testSuburb",
                        "VIC",
                        "3081",
                        "testAgency",
                        "branch",
                        "PFirst",
                        "PLast",
                        "0412213456",
                        "0412213456",
                        "a@testing167658756.com"});
#line 142
 testRunner.And("User_navigates to Begin_Proposal after registering agent with details", ((string)(null)), table25, "And ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "PropertyMgmtTeamSize",
                        "PropertyPerPropManager",
                        "Languages",
                        "EmergencyContact"});
            table26.AddRow(new string[] {
                        "50",
                        "10",
                        "Spanish",
                        "Yes"});
#line 145
 testRunner.When("User navigates to Landlord Insurance page  after entering details as", ((string)(null)), table26, "When ");
#line 148
 testRunner.And("User selects Yes", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 149
 testRunner.And("I move back to Landlord Insurance Advice from Property Inspection Frequency quest" +
                    "ion", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 150
 testRunner.And("User selects Yes", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 151
 testRunner.Then("Color of the Yes option is \"#00AEFF\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentProposalForRent_LandlordInsuranceAdvice014_Verify the color of option No cha" +
            "nges on deselection")]
        public virtual void AgentProposalForRent_LandlordInsuranceAdvice014_VerifyTheColorOfOptionNoChangesOnDeselection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentProposalForRent_LandlordInsuranceAdvice014_Verify the color of option No cha" +
                    "nges on deselection", ((string[])(null)));
#line 153
 this.ScenarioSetup(scenarioInfo);
#line 154
 testRunner.Given("User_navigate to Agent_Registration_Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition",
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch",
                        "PrincipalFirstName",
                        "PrincipalLastName",
                        "PrincipalPhone",
                        "PrincipalMobile",
                        "PrincipalEmail"});
            table27.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant",
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "testSuburb",
                        "VIC",
                        "3081",
                        "testAgency",
                        "branch",
                        "PFirst",
                        "PLast",
                        "0412213456",
                        "0412213456",
                        "a@testing167658756.com"});
#line 155
 testRunner.And("User_navigates to Begin_Proposal after registering agent with details", ((string)(null)), table27, "And ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "PropertyMgmtTeamSize",
                        "PropertyPerPropManager",
                        "Languages",
                        "EmergencyContact"});
            table28.AddRow(new string[] {
                        "50",
                        "10",
                        "Spanish",
                        "Yes"});
#line 158
 testRunner.When("User navigates to Landlord Insurance page  after entering details as", ((string)(null)), table28, "When ");
#line 161
 testRunner.And("User selects No", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 162
 testRunner.And("I move back to Landlord Insurance Advice from Property Inspection Frequency quest" +
                    "ion", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 163
 testRunner.And("User selects No", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 164
 testRunner.Then("Color of the No option is \"#00AEFF\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
