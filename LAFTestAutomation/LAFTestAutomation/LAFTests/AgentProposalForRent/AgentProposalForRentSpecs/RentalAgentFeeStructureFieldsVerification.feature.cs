// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace LAFTests.AgentProposalForRent.AgentProposalForRentSpecs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("RentalAgentFeeStructureFieldsVerification")]
    public partial class RentalAgentFeeStructureFieldsVerificationFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "RentalAgentFeeStructureFieldsVerification.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "RentalAgentFeeStructureFieldsVerification", "\tIn order to submit the proposal for Landlords\r\n\tAs an Agent\r\n\tI want to be able " +
                    "to enter the Agent Fees", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentProposalForRent_FeeStructure001_Verify the Question for Agent Fee Structure " +
            "section")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        public virtual void AgentProposalForRent_FeeStructure001_VerifyTheQuestionForAgentFeeStructureSection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentProposalForRent_FeeStructure001_Verify the Question for Agent Fee Structure " +
                    "section", new string[] {
                        "mytag"});
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("User navigate to Agent_Reg Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition",
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch",
                        "PrincipalFirstName",
                        "PrincipalLastName",
                        "PrincipalPhone",
                        "PrincipalMobile",
                        "PrincipalEmail"});
            table1.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant",
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "testSuburb",
                        "VIC",
                        "3081",
                        "testAgency",
                        "branch",
                        "PFirst",
                        "PLast",
                        "0412213456",
                        "0412213456",
                        "a@testing167658756.com"});
#line 9
 testRunner.And("User goes to Begin_Proposal Page after registering agent with details as below", ((string)(null)), table1, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "PropertyMgmtTeamSize",
                        "PropertyPerPropManager",
                        "Languages",
                        "EmergencyContact",
                        "LandlordInsuranceAdvice",
                        "InspectionFrequencyPeriod",
                        "RentalPostCodes",
                        "RentalsAboutYouDetails",
                        "RentalsAboutYourAgencyDetails",
                        "RentalsMarketingSellingApproach"});
            table2.AddRow(new string[] {
                        "50",
                        "10",
                        "Spanish",
                        "Yes",
                        "Yes",
                        "As requested",
                        "3055",
                        "AboutYouDetails_rental",
                        "AboutYourAgencyDetails_rental",
                        "MarketingSellingApproach_rental"});
#line 12
 testRunner.When("User navigates to Rental Agent Fee Structure section after entering details as", ((string)(null)), table2, "When ");
#line 15
 testRunner.Then("Question \"How do you structure your fees?\" is displayed for Rental Agent Fee Stru" +
                    "cture section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentProposalForRent_FeeStructure002_Verify options under Letting Fee drop down")]
        public virtual void AgentProposalForRent_FeeStructure002_VerifyOptionsUnderLettingFeeDropDown()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentProposalForRent_FeeStructure002_Verify options under Letting Fee drop down", ((string[])(null)));
#line 17
 this.ScenarioSetup(scenarioInfo);
#line 18
 testRunner.Given("User navigate to Agent_Reg Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition",
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch",
                        "PrincipalFirstName",
                        "PrincipalLastName",
                        "PrincipalPhone",
                        "PrincipalMobile",
                        "PrincipalEmail"});
            table3.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant",
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "testSuburb",
                        "VIC",
                        "3081",
                        "testAgency",
                        "branch",
                        "PFirst",
                        "PLast",
                        "0412213456",
                        "0412213456",
                        "a@testing167658756.com"});
#line 19
 testRunner.And("User goes to Begin_Proposal Page after registering agent with details as below", ((string)(null)), table3, "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "PropertyMgmtTeamSize",
                        "PropertyPerPropManager",
                        "Languages",
                        "EmergencyContact",
                        "LandlordInsuranceAdvice",
                        "InspectionFrequencyPeriod",
                        "RentalPostCodes",
                        "RentalsAboutYouDetails",
                        "RentalsAboutYourAgencyDetails",
                        "RentalsMarketingSellingApproach"});
            table4.AddRow(new string[] {
                        "50",
                        "10",
                        "Spanish",
                        "Yes",
                        "Yes",
                        "As requested",
                        "3055",
                        "AboutYouDetails_rental",
                        "AboutYourAgencyDetails_rental",
                        "MarketingSellingApproach_rental"});
#line 22
 testRunner.When("User navigates to Rental Agent Fee Structure section after entering details as", ((string)(null)), table4, "When ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "LettingFee"});
            table5.AddRow(new string[] {
                        "0 weeks"});
            table5.AddRow(new string[] {
                        "1 week"});
            table5.AddRow(new string[] {
                        "1.5 weeks"});
            table5.AddRow(new string[] {
                        "2 weeks"});
            table5.AddRow(new string[] {
                        "2.5 weeks"});
            table5.AddRow(new string[] {
                        "3 weeks"});
            table5.AddRow(new string[] {
                        "4 weeks"});
            table5.AddRow(new string[] {
                        "5 weeks"});
#line 25
 testRunner.Then("Below options should be available under  Letting Fee drop down", ((string)(null)), table5, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentProposalForRent_FeeStructure003_Verify options under Marketing Budget drop d" +
            "own")]
        public virtual void AgentProposalForRent_FeeStructure003_VerifyOptionsUnderMarketingBudgetDropDown()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentProposalForRent_FeeStructure003_Verify options under Marketing Budget drop d" +
                    "own", ((string[])(null)));
#line 36
 this.ScenarioSetup(scenarioInfo);
#line 37
 testRunner.Given("User navigate to Agent_Reg Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition",
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch",
                        "PrincipalFirstName",
                        "PrincipalLastName",
                        "PrincipalPhone",
                        "PrincipalMobile",
                        "PrincipalEmail"});
            table6.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant",
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "testSuburb",
                        "VIC",
                        "3081",
                        "testAgency",
                        "branch",
                        "PFirst",
                        "PLast",
                        "0412213456",
                        "0412213456",
                        "a@testing167658756.com"});
#line 38
 testRunner.And("User goes to Begin_Proposal Page after registering agent with details as below", ((string)(null)), table6, "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "PropertyMgmtTeamSize",
                        "PropertyPerPropManager",
                        "Languages",
                        "EmergencyContact",
                        "LandlordInsuranceAdvice",
                        "InspectionFrequencyPeriod",
                        "RentalPostCodes",
                        "RentalsAboutYouDetails",
                        "RentalsAboutYourAgencyDetails",
                        "RentalsMarketingSellingApproach"});
            table7.AddRow(new string[] {
                        "50",
                        "10",
                        "Spanish",
                        "Yes",
                        "Yes",
                        "As requested",
                        "3055",
                        "AboutYouDetails_rental",
                        "AboutYourAgencyDetails_rental",
                        "MarketingSellingApproach_rental"});
#line 41
 testRunner.When("User navigates to Rental Agent Fee Structure section after entering details as", ((string)(null)), table7, "When ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "RentalMarketingBudget"});
            table8.AddRow(new string[] {
                        "Free Marketing"});
            table8.AddRow(new string[] {
                        "No Lease No Fee"});
            table8.AddRow(new string[] {
                        "Less than $250"});
            table8.AddRow(new string[] {
                        "$251 - $500"});
            table8.AddRow(new string[] {
                        "$501 - $750"});
            table8.AddRow(new string[] {
                        "$751 - $1,000"});
            table8.AddRow(new string[] {
                        "$1,001 - $1,500"});
            table8.AddRow(new string[] {
                        "$1,501 - $2,000"});
            table8.AddRow(new string[] {
                        "More than $2,000"});
#line 44
 testRunner.Then("Below options should be available under Marketing Budget", ((string)(null)), table8, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentProposalForRent_FeeStructure004_Verify that Rental Proposal is submitted suc" +
            "cessfully after entering Management Fee as 3")]
        public virtual void AgentProposalForRent_FeeStructure004_VerifyThatRentalProposalIsSubmittedSuccessfullyAfterEnteringManagementFeeAs3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentProposalForRent_FeeStructure004_Verify that Rental Proposal is submitted suc" +
                    "cessfully after entering Management Fee as 3", ((string[])(null)));
#line 56
 this.ScenarioSetup(scenarioInfo);
#line 57
 testRunner.Given("User navigate to Agent_Reg Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition",
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch",
                        "PrincipalFirstName",
                        "PrincipalLastName",
                        "PrincipalPhone",
                        "PrincipalMobile",
                        "PrincipalEmail"});
            table9.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant",
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "testSuburb",
                        "VIC",
                        "3081",
                        "testAgency",
                        "branch",
                        "PFirst",
                        "PLast",
                        "0412213456",
                        "0412213456",
                        "a@testing167658756.com"});
#line 58
 testRunner.And("User goes to Begin_Proposal Page after registering agent with details as below", ((string)(null)), table9, "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "PropertyMgmtTeamSize",
                        "PropertyPerPropManager",
                        "Languages",
                        "EmergencyContact",
                        "LandlordInsuranceAdvice",
                        "InspectionFrequencyPeriod",
                        "RentalPostCodes",
                        "RentalsAboutYouDetails",
                        "RentalsAboutYourAgencyDetails",
                        "RentalsMarketingSellingApproach"});
            table10.AddRow(new string[] {
                        "50",
                        "10",
                        "Spanish",
                        "Yes",
                        "Yes",
                        "As requested",
                        "3055",
                        "AboutYouDetails_rental",
                        "AboutYourAgencyDetails_rental",
                        "MarketingSellingApproach_rental"});
#line 61
 testRunner.When("User navigates to Rental Agent Fee Structure section after entering details as", ((string)(null)), table10, "When ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "RentalsManagementFee"});
            table11.AddRow(new string[] {
                        "3"});
#line 64
 testRunner.And("User enters Management Fee as", ((string)(null)), table11, "And ");
#line 67
 testRunner.And("User Clicks on Submit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 68
 testRunner.Then("Confirmation for Rental Proposal Submission is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentProposalForRent_FeeStructure005_Verify that Rental Proposal is submitted suc" +
            "cessfully after entering Management Fee as 8.5")]
        public virtual void AgentProposalForRent_FeeStructure005_VerifyThatRentalProposalIsSubmittedSuccessfullyAfterEnteringManagementFeeAs8_5()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentProposalForRent_FeeStructure005_Verify that Rental Proposal is submitted suc" +
                    "cessfully after entering Management Fee as 8.5", ((string[])(null)));
#line 70
 this.ScenarioSetup(scenarioInfo);
#line 71
 testRunner.Given("User navigate to Agent_Reg Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition",
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch",
                        "PrincipalFirstName",
                        "PrincipalLastName",
                        "PrincipalPhone",
                        "PrincipalMobile",
                        "PrincipalEmail"});
            table12.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant",
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "testSuburb",
                        "VIC",
                        "3081",
                        "testAgency",
                        "branch",
                        "PFirst",
                        "PLast",
                        "0412213456",
                        "0412213456",
                        "a@testing167658756.com"});
#line 72
 testRunner.And("User goes to Begin_Proposal Page after registering agent with details as below", ((string)(null)), table12, "And ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "PropertyMgmtTeamSize",
                        "PropertyPerPropManager",
                        "Languages",
                        "EmergencyContact",
                        "LandlordInsuranceAdvice",
                        "InspectionFrequencyPeriod",
                        "RentalPostCodes",
                        "RentalsAboutYouDetails",
                        "RentalsAboutYourAgencyDetails",
                        "RentalsMarketingSellingApproach"});
            table13.AddRow(new string[] {
                        "50",
                        "10",
                        "Spanish",
                        "Yes",
                        "Yes",
                        "As requested",
                        "3055",
                        "AboutYouDetails_rental",
                        "AboutYourAgencyDetails_rental",
                        "MarketingSellingApproach_rental"});
#line 75
 testRunner.When("User navigates to Rental Agent Fee Structure section after entering details as", ((string)(null)), table13, "When ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "RentalsManagementFee"});
            table14.AddRow(new string[] {
                        "8.5"});
#line 78
 testRunner.And("User enters Management Fee as", ((string)(null)), table14, "And ");
#line 81
 testRunner.And("User Clicks on Submit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 82
 testRunner.Then("Confirmation for Rental Proposal Submission is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentProposalForRent_FeeStructure006_Verify that Rental Proposal is submitted suc" +
            "cessfully after selecting Letting Fee as 2.5 weeks")]
        public virtual void AgentProposalForRent_FeeStructure006_VerifyThatRentalProposalIsSubmittedSuccessfullyAfterSelectingLettingFeeAs2_5Weeks()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentProposalForRent_FeeStructure006_Verify that Rental Proposal is submitted suc" +
                    "cessfully after selecting Letting Fee as 2.5 weeks", ((string[])(null)));
#line 84
 this.ScenarioSetup(scenarioInfo);
#line 85
 testRunner.Given("User navigate to Agent_Reg Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition",
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch",
                        "PrincipalFirstName",
                        "PrincipalLastName",
                        "PrincipalPhone",
                        "PrincipalMobile",
                        "PrincipalEmail"});
            table15.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant",
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "testSuburb",
                        "VIC",
                        "3081",
                        "testAgency",
                        "branch",
                        "PFirst",
                        "PLast",
                        "0412213456",
                        "0412213456",
                        "a@testing167658756.com"});
#line 86
 testRunner.And("User goes to Begin_Proposal Page after registering agent with details as below", ((string)(null)), table15, "And ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "PropertyMgmtTeamSize",
                        "PropertyPerPropManager",
                        "Languages",
                        "EmergencyContact",
                        "LandlordInsuranceAdvice",
                        "InspectionFrequencyPeriod",
                        "RentalPostCodes",
                        "RentalsAboutYouDetails",
                        "RentalsAboutYourAgencyDetails",
                        "RentalsMarketingSellingApproach"});
            table16.AddRow(new string[] {
                        "50",
                        "10",
                        "Spanish",
                        "Yes",
                        "Yes",
                        "As requested",
                        "3055",
                        "AboutYouDetails_rental",
                        "AboutYourAgencyDetails_rental",
                        "MarketingSellingApproach_rental"});
#line 89
 testRunner.When("User navigates to Rental Agent Fee Structure section after entering details as", ((string)(null)), table16, "When ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "LettingFee",
                        "RentalsManagementFee"});
            table17.AddRow(new string[] {
                        "2.5 weeks",
                        "8.5"});
#line 92
 testRunner.And("User enters Rental Fee Details as", ((string)(null)), table17, "And ");
#line 95
 testRunner.And("User Clicks on Submit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 96
 testRunner.Then("Confirmation for Rental Proposal Submission is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentProposalForRent_FeeStructure007_Verify that Rental Proposal is submitted suc" +
            "cessfully after selecting Marketing Budget as $251 - $500")]
        public virtual void AgentProposalForRent_FeeStructure007_VerifyThatRentalProposalIsSubmittedSuccessfullyAfterSelectingMarketingBudgetAs251_500()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentProposalForRent_FeeStructure007_Verify that Rental Proposal is submitted suc" +
                    "cessfully after selecting Marketing Budget as $251 - $500", ((string[])(null)));
#line 98
 this.ScenarioSetup(scenarioInfo);
#line 99
 testRunner.Given("User navigate to Agent_Reg Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition",
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch",
                        "PrincipalFirstName",
                        "PrincipalLastName",
                        "PrincipalPhone",
                        "PrincipalMobile",
                        "PrincipalEmail"});
            table18.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant",
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "testSuburb",
                        "VIC",
                        "3081",
                        "testAgency",
                        "branch",
                        "PFirst",
                        "PLast",
                        "0412213456",
                        "0412213456",
                        "a@testing167658756.com"});
#line 100
 testRunner.And("User goes to Begin_Proposal Page after registering agent with details as below", ((string)(null)), table18, "And ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "PropertyMgmtTeamSize",
                        "PropertyPerPropManager",
                        "Languages",
                        "EmergencyContact",
                        "LandlordInsuranceAdvice",
                        "InspectionFrequencyPeriod",
                        "RentalPostCodes",
                        "RentalsAboutYouDetails",
                        "RentalsAboutYourAgencyDetails",
                        "RentalsMarketingSellingApproach"});
            table19.AddRow(new string[] {
                        "50",
                        "10",
                        "Spanish",
                        "Yes",
                        "Yes",
                        "As requested",
                        "3055",
                        "AboutYouDetails_rental",
                        "AboutYourAgencyDetails_rental",
                        "MarketingSellingApproach_rental"});
#line 103
 testRunner.When("User navigates to Rental Agent Fee Structure section after entering details as", ((string)(null)), table19, "When ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "LettingFee",
                        "RentalsManagementFee",
                        "RentalMarketingBudget"});
            table20.AddRow(new string[] {
                        "2.5 weeks",
                        "8.5",
                        "$251 - $500"});
#line 106
 testRunner.And("User enters Rental Fee Details as", ((string)(null)), table20, "And ");
#line 109
 testRunner.And("User Clicks on Submit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 110
 testRunner.Then("Confirmation for Rental Proposal Submission is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentProposalForRent_FeeStructure008_Verify that error message is displayed on su" +
            "bmitting Rentals Proposal without entering Management Fee")]
        public virtual void AgentProposalForRent_FeeStructure008_VerifyThatErrorMessageIsDisplayedOnSubmittingRentalsProposalWithoutEnteringManagementFee()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentProposalForRent_FeeStructure008_Verify that error message is displayed on su" +
                    "bmitting Rentals Proposal without entering Management Fee", ((string[])(null)));
#line 112
 this.ScenarioSetup(scenarioInfo);
#line 113
 testRunner.Given("User navigate to Agent_Reg Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition",
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch",
                        "PrincipalFirstName",
                        "PrincipalLastName",
                        "PrincipalPhone",
                        "PrincipalMobile",
                        "PrincipalEmail"});
            table21.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant",
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "testSuburb",
                        "VIC",
                        "3081",
                        "testAgency",
                        "branch",
                        "PFirst",
                        "PLast",
                        "0412213456",
                        "0412213456",
                        "a@testing167658756.com"});
#line 114
 testRunner.And("User goes to Begin_Proposal Page after registering agent with details as below", ((string)(null)), table21, "And ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "PropertyMgmtTeamSize",
                        "PropertyPerPropManager",
                        "Languages",
                        "EmergencyContact",
                        "LandlordInsuranceAdvice",
                        "InspectionFrequencyPeriod",
                        "RentalPostCodes",
                        "RentalsAboutYouDetails",
                        "RentalsAboutYourAgencyDetails",
                        "RentalsMarketingSellingApproach"});
            table22.AddRow(new string[] {
                        "50",
                        "10",
                        "Spanish",
                        "Yes",
                        "Yes",
                        "As requested",
                        "3055",
                        "AboutYouDetails_rental",
                        "AboutYourAgencyDetails_rental",
                        "MarketingSellingApproach_rental"});
#line 117
 testRunner.When("User navigates to Rental Agent Fee Structure section after entering details as", ((string)(null)), table22, "When ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "LettingFee",
                        "RentalsManagementFee",
                        "RentalMarketingBudget"});
            table23.AddRow(new string[] {
                        "",
                        "",
                        ""});
#line 120
 testRunner.And("User enters Rental Fee Details as", ((string)(null)), table23, "And ");
#line 123
 testRunner.And("User Clicks on Submit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 124
 testRunner.Then("Error Message \"Please provide a management fee. Please provide a realistic manage" +
                    "ment fee.\" should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentProposalForRent_FeeStructure009_Verify that under Progress section, Fees cir" +
            "cle should be displayed as Active")]
        public virtual void AgentProposalForRent_FeeStructure009_VerifyThatUnderProgressSectionFeesCircleShouldBeDisplayedAsActive()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentProposalForRent_FeeStructure009_Verify that under Progress section, Fees cir" +
                    "cle should be displayed as Active", ((string[])(null)));
#line 126
 this.ScenarioSetup(scenarioInfo);
#line 127
 testRunner.Given("User navigate to Agent_Reg Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition",
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch",
                        "PrincipalFirstName",
                        "PrincipalLastName",
                        "PrincipalPhone",
                        "PrincipalMobile",
                        "PrincipalEmail"});
            table24.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant",
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "testSuburb",
                        "VIC",
                        "3081",
                        "testAgency",
                        "branch",
                        "PFirst",
                        "PLast",
                        "0412213456",
                        "0412213456",
                        "a@testing167658756.com"});
#line 128
 testRunner.And("User goes to Begin_Proposal Page after registering agent with details as below", ((string)(null)), table24, "And ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "PropertyMgmtTeamSize",
                        "PropertyPerPropManager",
                        "Languages",
                        "EmergencyContact",
                        "LandlordInsuranceAdvice",
                        "InspectionFrequencyPeriod",
                        "RentalPostCodes",
                        "RentalsAboutYouDetails",
                        "RentalsAboutYourAgencyDetails",
                        "RentalsMarketingSellingApproach"});
            table25.AddRow(new string[] {
                        "50",
                        "10",
                        "Spanish",
                        "Yes",
                        "Yes",
                        "As requested",
                        "3055",
                        "AboutYouDetails_rental",
                        "AboutYourAgencyDetails_rental",
                        "MarketingSellingApproach_rental"});
#line 131
 testRunner.When("User navigates to Rental Agent Fee Structure section after entering details as", ((string)(null)), table25, "When ");
#line 134
 testRunner.Then("Fees circle is displayed as Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
