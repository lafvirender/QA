// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace LAFTests.AgentProposalForRent.AgentProposalForRentSpecs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("PropertiesPerPropManagerFieldsVerification")]
    public partial class PropertiesPerPropManagerFieldsVerificationFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "PropertiesPerPropManagerFieldsVerification.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "PropertiesPerPropManagerFieldsVerification", "\tIn order to submit the proposal for Landlords\r\n\tAs an Agent\r\n\tI want to be able " +
                    "to enter Properties Per Prop Manager", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentProposalForRent_PropPerPropManager001_Verify the Question for Properties Per" +
            " Property Manager")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        public virtual void AgentProposalForRent_PropPerPropManager001_VerifyTheQuestionForPropertiesPerPropertyManager()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentProposalForRent_PropPerPropManager001_Verify the Question for Properties Per" +
                    " Property Manager", new string[] {
                        "mytag"});
#line 7
 this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("User goes to Agent_Registration_Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition",
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch",
                        "PrincipalFirstName",
                        "PrincipalLastName",
                        "PrincipalPhone",
                        "PrincipalMobile",
                        "PrincipalEmail"});
            table1.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant",
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "testSuburb",
                        "VIC",
                        "3081",
                        "testAgency",
                        "branch",
                        "PFirst",
                        "PLast",
                        "0412213456",
                        "0412213456",
                        "a@testing167658756.com"});
#line 9
 testRunner.And("User goes to Begin_Proposal after registering agent with", ((string)(null)), table1, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "PropertyMgmtTeamSize"});
            table2.AddRow(new string[] {
                        "5"});
#line 12
 testRunner.When("User navigates to Properties Per Property Manager page  after entering details as" +
                    "", ((string)(null)), table2, "When ");
#line 15
 testRunner.Then("Question \"How many properties does each property manager look after?\" is displaye" +
                    "d for Properties Per Property Manager", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentProposalForRent_PropPerPropManager002_Verify that Property Per Property Mana" +
            "ger selection question is displayed when user clicks Next after selecting Proper" +
            "ties Per Property Manager")]
        public virtual void AgentProposalForRent_PropPerPropManager002_VerifyThatPropertyPerPropertyManagerSelectionQuestionIsDisplayedWhenUserClicksNextAfterSelectingPropertiesPerPropertyManager()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentProposalForRent_PropPerPropManager002_Verify that Property Per Property Mana" +
                    "ger selection question is displayed when user clicks Next after selecting Proper" +
                    "ties Per Property Manager", ((string[])(null)));
#line 18
 this.ScenarioSetup(scenarioInfo);
#line 19
 testRunner.Given("User goes to Agent_Registration_Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition",
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch",
                        "PrincipalFirstName",
                        "PrincipalLastName",
                        "PrincipalPhone",
                        "PrincipalMobile",
                        "PrincipalEmail"});
            table3.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant",
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "testSuburb",
                        "VIC",
                        "3081",
                        "testAgency",
                        "branch",
                        "PFirst",
                        "PLast",
                        "0412213456",
                        "0412213456",
                        "a@testing167658756.com"});
#line 20
 testRunner.And("User goes to Begin_Proposal after registering agent with", ((string)(null)), table3, "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "PropertyMgmtTeamSize"});
            table4.AddRow(new string[] {
                        "50"});
#line 23
 testRunner.When("User navigates to Properties Per Property Manager page  after entering details as" +
                    "", ((string)(null)), table4, "When ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "PropertyPerPropManager"});
            table5.AddRow(new string[] {
                        "30"});
#line 26
 testRunner.And("User clicks Next after entering Properties Per Property Manager As", ((string)(null)), table5, "And ");
#line 29
 testRunner.Then("Language Selection question is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentProposalForRent_PropPerPropManager003_Verify that error message is displayed" +
            " when user clicks Next without entering Properties Per Property Manager")]
        public virtual void AgentProposalForRent_PropPerPropManager003_VerifyThatErrorMessageIsDisplayedWhenUserClicksNextWithoutEnteringPropertiesPerPropertyManager()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentProposalForRent_PropPerPropManager003_Verify that error message is displayed" +
                    " when user clicks Next without entering Properties Per Property Manager", ((string[])(null)));
#line 31
 this.ScenarioSetup(scenarioInfo);
#line 32
 testRunner.Given("User goes to Agent_Registration_Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition",
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch",
                        "PrincipalFirstName",
                        "PrincipalLastName",
                        "PrincipalPhone",
                        "PrincipalMobile",
                        "PrincipalEmail"});
            table6.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant",
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "testSuburb",
                        "VIC",
                        "3081",
                        "testAgency",
                        "branch",
                        "PFirst",
                        "PLast",
                        "0412213456",
                        "0412213456",
                        "a@testing167658756.com"});
#line 33
 testRunner.And("User goes to Begin_Proposal after registering agent with", ((string)(null)), table6, "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "PropertyMgmtTeamSize"});
            table7.AddRow(new string[] {
                        "50"});
#line 36
 testRunner.When("User navigates to Properties Per Property Manager page  after entering details as" +
                    "", ((string)(null)), table7, "When ");
#line 39
 testRunner.And("User clicks on Next", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
 testRunner.Then("Error with msg \"How many properties does each property manager look after?\" is di" +
                    "splayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentProposalForRent_PropPerPropManager004_Verify that error message is displayed" +
            " when user clicks Next without entering alphabets in Properties Per Property Man" +
            "ager")]
        public virtual void AgentProposalForRent_PropPerPropManager004_VerifyThatErrorMessageIsDisplayedWhenUserClicksNextWithoutEnteringAlphabetsInPropertiesPerPropertyManager()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentProposalForRent_PropPerPropManager004_Verify that error message is displayed" +
                    " when user clicks Next without entering alphabets in Properties Per Property Man" +
                    "ager", ((string[])(null)));
#line 42
 this.ScenarioSetup(scenarioInfo);
#line 43
 testRunner.Given("User goes to Agent_Registration_Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition",
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch",
                        "PrincipalFirstName",
                        "PrincipalLastName",
                        "PrincipalPhone",
                        "PrincipalMobile",
                        "PrincipalEmail"});
            table8.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant",
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "testSuburb",
                        "VIC",
                        "3081",
                        "testAgency",
                        "branch",
                        "PFirst",
                        "PLast",
                        "0412213456",
                        "0412213456",
                        "a@testing167658756.com"});
#line 44
 testRunner.And("User goes to Begin_Proposal after registering agent with", ((string)(null)), table8, "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "PropertyMgmtTeamSize"});
            table9.AddRow(new string[] {
                        "50"});
#line 47
 testRunner.When("User navigates to Properties Per Property Manager page  after entering details as" +
                    "", ((string)(null)), table9, "When ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "PropertyPerPropManager"});
            table10.AddRow(new string[] {
                        "abcd"});
#line 50
 testRunner.And("User clicks Next after entering Properties Per Property Manager As", ((string)(null)), table10, "And ");
#line 53
 testRunner.Then("Error with msg \"How many properties does each property manager look after?\" is di" +
                    "splayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentProposalForRent_PropPerPropManager005_Verify that under Progress section, Pr" +
            "operties circle should be displayed as Active")]
        public virtual void AgentProposalForRent_PropPerPropManager005_VerifyThatUnderProgressSectionPropertiesCircleShouldBeDisplayedAsActive()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentProposalForRent_PropPerPropManager005_Verify that under Progress section, Pr" +
                    "operties circle should be displayed as Active", ((string[])(null)));
#line 55
 this.ScenarioSetup(scenarioInfo);
#line 56
 testRunner.Given("User goes to Agent_Registration_Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition",
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch",
                        "PrincipalFirstName",
                        "PrincipalLastName",
                        "PrincipalPhone",
                        "PrincipalMobile",
                        "PrincipalEmail"});
            table11.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant",
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "testSuburb",
                        "VIC",
                        "3081",
                        "testAgency",
                        "branch",
                        "PFirst",
                        "PLast",
                        "0412213456",
                        "0412213456",
                        "a@testing167658756.com"});
#line 57
 testRunner.And("User goes to Begin_Proposal after registering agent with", ((string)(null)), table11, "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "PropertyMgmtTeamSize"});
            table12.AddRow(new string[] {
                        "5"});
#line 60
 testRunner.When("User navigates to Properties Per Property Manager page  after entering details as" +
                    "", ((string)(null)), table12, "When ");
#line 63
 testRunner.Then("Properties circle should be displayed as Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentProposalForRent_PropPerPropManager006_Verify that under Progress section, Pr" +
            "operties circle should be displayed as Checked on navigating to next section")]
        public virtual void AgentProposalForRent_PropPerPropManager006_VerifyThatUnderProgressSectionPropertiesCircleShouldBeDisplayedAsCheckedOnNavigatingToNextSection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentProposalForRent_PropPerPropManager006_Verify that under Progress section, Pr" +
                    "operties circle should be displayed as Checked on navigating to next section", ((string[])(null)));
#line 65
 this.ScenarioSetup(scenarioInfo);
#line 66
 testRunner.Given("User goes to Agent_Registration_Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition",
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch",
                        "PrincipalFirstName",
                        "PrincipalLastName",
                        "PrincipalPhone",
                        "PrincipalMobile",
                        "PrincipalEmail"});
            table13.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant",
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "testSuburb",
                        "VIC",
                        "3081",
                        "testAgency",
                        "branch",
                        "PFirst",
                        "PLast",
                        "0412213456",
                        "0412213456",
                        "a@testing167658756.com"});
#line 67
 testRunner.And("User goes to Begin_Proposal after registering agent with", ((string)(null)), table13, "And ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "PropertyMgmtTeamSize"});
            table14.AddRow(new string[] {
                        "50"});
#line 70
 testRunner.When("User navigates to Properties Per Property Manager page  after entering details as" +
                    "", ((string)(null)), table14, "When ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "PropertyPerPropManager"});
            table15.AddRow(new string[] {
                        "30"});
#line 73
 testRunner.And("User clicks Next after entering Properties Per Property Manager As", ((string)(null)), table15, "And ");
#line 76
 testRunner.Then("Properties circle should be displayed as Checked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
