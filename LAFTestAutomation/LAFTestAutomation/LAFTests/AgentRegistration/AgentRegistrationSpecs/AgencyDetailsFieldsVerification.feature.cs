// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace LAFTests.AgentRegistration.AgentRegistrationSpecs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("AgencyDetailsFieldsVerification")]
    public partial class AgencyDetailsFieldsVerificationFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "AgencyDetailsFieldsVerification.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "AgencyDetailsFieldsVerification", "\tIn order to submit the proposal\r\n\tAs an Agent\r\n\tI want to be able to register af" +
                    "ter selecting valid values in Agency Details", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_AgencyDetails001_Verify that link for Moving Forward should be disabl" +
            "ed by default")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        public virtual void AgentSignUp_AgencyDetails001_VerifyThatLinkForMovingForwardShouldBeDisabledByDefault()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_AgencyDetails001_Verify that link for Moving Forward should be disabl" +
                    "ed by default", new string[] {
                        "mytag"});
#line 8
 this.ScenarioSetup(scenarioInfo);
#line 9
 testRunner.Given("User is on Agent Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition"});
            table1.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant"});
#line 10
 testRunner.And("User navigates to About Your Agency section after entering details as", ((string)(null)), table1, "And ");
#line 13
 testRunner.Then("Link for Moving Forward is Disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_AgencyDetails002_Verify that Heading \"About Your agency\" should be di" +
            "splayed for About your Agency section")]
        public virtual void AgentSignUp_AgencyDetails002_VerifyThatHeadingAboutYourAgencyShouldBeDisplayedForAboutYourAgencySection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_AgencyDetails002_Verify that Heading \"About Your agency\" should be di" +
                    "splayed for About your Agency section", ((string[])(null)));
#line 15
 this.ScenarioSetup(scenarioInfo);
#line 16
 testRunner.Given("User is on Agent Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition"});
            table2.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant"});
#line 17
 testRunner.And("User navigates to About Your Agency section after entering details as", ((string)(null)), table2, "And ");
#line 20
 testRunner.Then("Question \"About your agency\" should be displayed for About your Agency section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_AgencyDetails003_Verify that Progress circle for Agency is displayed " +
            "as not filled by default")]
        public virtual void AgentSignUp_AgencyDetails003_VerifyThatProgressCircleForAgencyIsDisplayedAsNotFilledByDefault()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_AgencyDetails003_Verify that Progress circle for Agency is displayed " +
                    "as not filled by default", ((string[])(null)));
#line 23
 this.ScenarioSetup(scenarioInfo);
#line 24
 testRunner.Given("User is on Agent Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition"});
            table3.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant"});
#line 25
 testRunner.And("User navigates to About Your Agency section after entering details as", ((string)(null)), table3, "And ");
#line 28
 testRunner.Then("Progress circle for Agency is displayed as not filled by default", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_AgencyDetails004_Verify that option for entering the address manually" +
            " should be available.")]
        public virtual void AgentSignUp_AgencyDetails004_VerifyThatOptionForEnteringTheAddressManuallyShouldBeAvailable_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_AgencyDetails004_Verify that option for entering the address manually" +
                    " should be available.", ((string[])(null)));
#line 30
 this.ScenarioSetup(scenarioInfo);
#line 31
 testRunner.Given("User is on Agent Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition"});
            table4.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant"});
#line 32
 testRunner.And("User navigates to About Your Agency section after entering details as", ((string)(null)), table4, "And ");
#line 35
 testRunner.Then("Option for entering the address manually with text \"Enter address manually\" is di" +
                    "splayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_AgencyDetails005_Verify that field for searching address should be av" +
            "ailable")]
        public virtual void AgentSignUp_AgencyDetails005_VerifyThatFieldForSearchingAddressShouldBeAvailable()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_AgencyDetails005_Verify that field for searching address should be av" +
                    "ailable", ((string[])(null)));
#line 37
 this.ScenarioSetup(scenarioInfo);
#line 38
 testRunner.Given("User is on Agent Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition"});
            table5.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant"});
#line 39
 testRunner.And("User navigates to About Your Agency section after entering details as", ((string)(null)), table5, "And ");
#line 42
 testRunner.Then("Search field is available for searching the address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_AgencyDetails006_Verify that Next button is available")]
        public virtual void AgentSignUp_AgencyDetails006_VerifyThatNextButtonIsAvailable()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_AgencyDetails006_Verify that Next button is available", ((string[])(null)));
#line 44
 this.ScenarioSetup(scenarioInfo);
#line 45
 testRunner.Given("User is on Agent Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition"});
            table6.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant"});
#line 46
 testRunner.And("User navigates to About Your Agency section after entering details as", ((string)(null)), table6, "And ");
#line 49
 testRunner.Then("Next button is available on Agency Details section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_AgencyDetails007_Verify that on selecting the option for entering the" +
            " address manually, UnitNo, StreetNo, Street, Suburb, State, and PostCode field s" +
            "hould be displayed")]
        public virtual void AgentSignUp_AgencyDetails007_VerifyThatOnSelectingTheOptionForEnteringTheAddressManuallyUnitNoStreetNoStreetSuburbStateAndPostCodeFieldShouldBeDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_AgencyDetails007_Verify that on selecting the option for entering the" +
                    " address manually, UnitNo, StreetNo, Street, Suburb, State, and PostCode field s" +
                    "hould be displayed", ((string[])(null)));
#line 51
 this.ScenarioSetup(scenarioInfo);
#line 52
 testRunner.Given("User is on Agent Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition"});
            table7.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant"});
#line 53
 testRunner.And("User navigates to About Your Agency section after entering details as", ((string)(null)), table7, "And ");
#line 56
 testRunner.When("I select option Enter your address manually", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 57
 testRunner.Then("Fields Unit/App No., StreetNo., Street, Suburb, State and PostCode are displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_AgencyDetails008_Verify that error is displayed for empty Address Sea" +
            "rch field")]
        public virtual void AgentSignUp_AgencyDetails008_VerifyThatErrorIsDisplayedForEmptyAddressSearchField()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_AgencyDetails008_Verify that error is displayed for empty Address Sea" +
                    "rch field", ((string[])(null)));
#line 59
 this.ScenarioSetup(scenarioInfo);
#line 60
 testRunner.Given("User is on Agent Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition"});
            table8.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant"});
#line 61
 testRunner.And("User navigates to About Your Agency section after entering details as", ((string)(null)), table8, "And ");
#line 64
 testRunner.When("I Click on Next button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 65
 testRunner.Then("Error should be displayed for empty Address Search field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_AgencyDetails009_Verify that error is displayed for empty Street No f" +
            "ield")]
        public virtual void AgentSignUp_AgencyDetails009_VerifyThatErrorIsDisplayedForEmptyStreetNoField()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_AgencyDetails009_Verify that error is displayed for empty Street No f" +
                    "ield", ((string[])(null)));
#line 67
 this.ScenarioSetup(scenarioInfo);
#line 68
 testRunner.Given("User is on Agent Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition"});
            table9.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant"});
#line 69
 testRunner.And("User navigates to About Your Agency section after entering details as", ((string)(null)), table9, "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch"});
            table10.AddRow(new string[] {
                        "Unit1",
                        "",
                        "Street",
                        "Suburb",
                        "VIC",
                        "3081",
                        "testAgency",
                        "St Kilda"});
#line 72
 testRunner.When("I Enter values in Agency Details as", ((string)(null)), table10, "When ");
#line 75
 testRunner.Then("Error should be displayed for empty  Street No field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_AgencyDetails010_Verify that error is displayed for empty Street fiel" +
            "d")]
        public virtual void AgentSignUp_AgencyDetails010_VerifyThatErrorIsDisplayedForEmptyStreetField()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_AgencyDetails010_Verify that error is displayed for empty Street fiel" +
                    "d", ((string[])(null)));
#line 77
 this.ScenarioSetup(scenarioInfo);
#line 78
 testRunner.Given("User is on Agent Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition"});
            table11.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant"});
#line 79
 testRunner.And("User navigates to About Your Agency section after entering details as", ((string)(null)), table11, "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch"});
            table12.AddRow(new string[] {
                        "Unit1",
                        "testStreet",
                        "",
                        "Suburb",
                        "VIC",
                        "3081",
                        "testAgency",
                        "St Kilda"});
#line 82
 testRunner.When("I Enter values in Agency Details as", ((string)(null)), table12, "When ");
#line 85
 testRunner.Then("Error \"Street name for your business\" should be displayed for empty  Street field" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_AgencyDetails011_Verify that error is displayed for empty Suburb fiel" +
            "d")]
        public virtual void AgentSignUp_AgencyDetails011_VerifyThatErrorIsDisplayedForEmptySuburbField()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_AgencyDetails011_Verify that error is displayed for empty Suburb fiel" +
                    "d", ((string[])(null)));
#line 87
 this.ScenarioSetup(scenarioInfo);
#line 88
 testRunner.Given("User is on Agent Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition"});
            table13.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant"});
#line 89
 testRunner.And("User navigates to About Your Agency section after entering details as", ((string)(null)), table13, "And ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch"});
            table14.AddRow(new string[] {
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "",
                        "VIC",
                        "3081",
                        "testAgency",
                        "St Kilda"});
#line 92
 testRunner.When("I Enter values in Agency Details as", ((string)(null)), table14, "When ");
#line 95
 testRunner.Then("Error \"Suburb for your business\" should be displayed for empty  Suburb field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_AgencyDetails012_Verify that error is displayed for empty State field" +
            "")]
        public virtual void AgentSignUp_AgencyDetails012_VerifyThatErrorIsDisplayedForEmptyStateField()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_AgencyDetails012_Verify that error is displayed for empty State field" +
                    "", ((string[])(null)));
#line 97
 this.ScenarioSetup(scenarioInfo);
#line 98
 testRunner.Given("User is on Agent Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition"});
            table15.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant"});
#line 99
 testRunner.And("User navigates to About Your Agency section after entering details as", ((string)(null)), table15, "And ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch"});
            table16.AddRow(new string[] {
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "testSuburb",
                        "",
                        "3081",
                        "testAgency",
                        "St Kilda"});
#line 102
 testRunner.When("I Enter values in Agency Details as", ((string)(null)), table16, "When ");
#line 105
 testRunner.Then("Error should be displayed for empty  State field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_AgencyDetails013_Verify that error is displayed for empty Postcode fi" +
            "eld")]
        public virtual void AgentSignUp_AgencyDetails013_VerifyThatErrorIsDisplayedForEmptyPostcodeField()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_AgencyDetails013_Verify that error is displayed for empty Postcode fi" +
                    "eld", ((string[])(null)));
#line 107
 this.ScenarioSetup(scenarioInfo);
#line 108
 testRunner.Given("User is on Agent Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition"});
            table17.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant"});
#line 109
 testRunner.And("User navigates to About Your Agency section after entering details as", ((string)(null)), table17, "And ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch"});
            table18.AddRow(new string[] {
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "testSuburb",
                        "VIC",
                        "",
                        "testAgency",
                        "St Kilda"});
#line 112
 testRunner.When("I Enter values in Agency Details as", ((string)(null)), table18, "When ");
#line 115
 testRunner.Then("Error \"Postcode for your business\" should be displayed for empty  Postcode field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_AgencyDetails014_Verify that error is displayed for empty Agency Name" +
            " field")]
        public virtual void AgentSignUp_AgencyDetails014_VerifyThatErrorIsDisplayedForEmptyAgencyNameField()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_AgencyDetails014_Verify that error is displayed for empty Agency Name" +
                    " field", ((string[])(null)));
#line 117
 this.ScenarioSetup(scenarioInfo);
#line 118
 testRunner.Given("User is on Agent Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition"});
            table19.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant"});
#line 119
 testRunner.And("User navigates to About Your Agency section after entering details as", ((string)(null)), table19, "And ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch"});
            table20.AddRow(new string[] {
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "testSuburb",
                        "VIC",
                        "3081",
                        "",
                        "St Kilda"});
#line 122
 testRunner.When("I Enter values in Agency Details as", ((string)(null)), table20, "When ");
#line 125
 testRunner.Then("Error \"Your agency name\" should be displayed for empty  Agency Name field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_AgencyDetails015_Verify that error is displayed for empty Branch fiel" +
            "d")]
        public virtual void AgentSignUp_AgencyDetails015_VerifyThatErrorIsDisplayedForEmptyBranchField()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_AgencyDetails015_Verify that error is displayed for empty Branch fiel" +
                    "d", ((string[])(null)));
#line 127
 this.ScenarioSetup(scenarioInfo);
#line 128
 testRunner.Given("User is on Agent Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition"});
            table21.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant"});
#line 129
 testRunner.And("User navigates to About Your Agency section after entering details as", ((string)(null)), table21, "And ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch"});
            table22.AddRow(new string[] {
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "testSuburb",
                        "VIC",
                        "3081",
                        "testAgency",
                        ""});
#line 132
 testRunner.When("I Enter values in Agency Details as", ((string)(null)), table22, "When ");
#line 135
 testRunner.Then("Error \"Your branch name\" should be displayed for empty  Branch field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_AgencyDetails016_Verify that Principal Details section is displayed a" +
            "fter entering details in Agency Details section")]
        public virtual void AgentSignUp_AgencyDetails016_VerifyThatPrincipalDetailsSectionIsDisplayedAfterEnteringDetailsInAgencyDetailsSection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_AgencyDetails016_Verify that Principal Details section is displayed a" +
                    "fter entering details in Agency Details section", ((string[])(null)));
#line 137
 this.ScenarioSetup(scenarioInfo);
#line 138
 testRunner.Given("User is on Agent Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition"});
            table23.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant"});
#line 139
 testRunner.And("User navigates to About Your Agency section after entering details as", ((string)(null)), table23, "And ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch"});
            table24.AddRow(new string[] {
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "testSuburb",
                        "VIC",
                        "3081",
                        "testAgency",
                        "branch"});
#line 142
 testRunner.When("I Enter values in Agency Details as", ((string)(null)), table24, "When ");
#line 145
 testRunner.Then("Principal Details section is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_AgencyDetails017_Verify that Progress circle for Agency is displayed " +
            "as filled on navigating to next section after entering Agency Details")]
        public virtual void AgentSignUp_AgencyDetails017_VerifyThatProgressCircleForAgencyIsDisplayedAsFilledOnNavigatingToNextSectionAfterEnteringAgencyDetails()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_AgencyDetails017_Verify that Progress circle for Agency is displayed " +
                    "as filled on navigating to next section after entering Agency Details", ((string[])(null)));
#line 147
 this.ScenarioSetup(scenarioInfo);
#line 148
 testRunner.Given("User is on Agent Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition"});
            table25.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant"});
#line 149
 testRunner.And("User navigates to About Your Agency section after entering details as", ((string)(null)), table25, "And ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch"});
            table26.AddRow(new string[] {
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "testSuburb",
                        "VIC",
                        "3081",
                        "testAgency",
                        "branch"});
#line 152
 testRunner.When("I Enter values in Agency Details as", ((string)(null)), table26, "When ");
#line 155
 testRunner.Then("Progress circle for Agency is displayed as filled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_AgencyDetails018_Verify that error is displayed on entering more than" +
            " 50 characters in Street No field")]
        public virtual void AgentSignUp_AgencyDetails018_VerifyThatErrorIsDisplayedOnEnteringMoreThan50CharactersInStreetNoField()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_AgencyDetails018_Verify that error is displayed on entering more than" +
                    " 50 characters in Street No field", ((string[])(null)));
#line 157
 this.ScenarioSetup(scenarioInfo);
#line 158
 testRunner.Given("User is on Agent Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition"});
            table27.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant"});
#line 159
 testRunner.And("User navigates to About Your Agency section after entering details as", ((string)(null)), table27, "And ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch"});
            table28.AddRow(new string[] {
                        "Unit1",
                        "thisisaveryveryverylooooooooooooooooooooooongstring",
                        "Street",
                        "Suburb",
                        "VIC",
                        "3081",
                        "testAgency",
                        "St Kilda"});
#line 162
 testRunner.When("I Enter values in Agency Details as", ((string)(null)), table28, "When ");
#line 165
 testRunner.Then("Error \"Error Text\" should be displayed for Street No field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_AgencyDetails019_Verify that Principal Details section is displayed a" +
            "fter entering 50 characters in Street No field")]
        public virtual void AgentSignUp_AgencyDetails019_VerifyThatPrincipalDetailsSectionIsDisplayedAfterEntering50CharactersInStreetNoField()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_AgencyDetails019_Verify that Principal Details section is displayed a" +
                    "fter entering 50 characters in Street No field", ((string[])(null)));
#line 167
 this.ScenarioSetup(scenarioInfo);
#line 168
 testRunner.Given("User is on Agent Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition"});
            table29.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant"});
#line 169
 testRunner.And("User navigates to About Your Agency section after entering details as", ((string)(null)), table29, "And ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch"});
            table30.AddRow(new string[] {
                        "Unit1",
                        "thisisaveryveryveryloooooooooooooooooooooongstring",
                        "streetname",
                        "testSuburb",
                        "VIC",
                        "3081",
                        "testAgency",
                        "branch"});
#line 172
 testRunner.When("I Enter values in Agency Details as", ((string)(null)), table30, "When ");
#line 175
 testRunner.Then("Principal Details section is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_AgencyDetails020_Verify that error is displayed on entering more than" +
            " 60 characters in State field")]
        public virtual void AgentSignUp_AgencyDetails020_VerifyThatErrorIsDisplayedOnEnteringMoreThan60CharactersInStateField()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_AgencyDetails020_Verify that error is displayed on entering more than" +
                    " 60 characters in State field", ((string[])(null)));
#line 177
 this.ScenarioSetup(scenarioInfo);
#line 178
 testRunner.Given("User is on Agent Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition"});
            table31.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant"});
#line 179
 testRunner.And("User navigates to About Your Agency section after entering details as", ((string)(null)), table31, "And ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch"});
            table32.AddRow(new string[] {
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "testSuburb",
                        "thisisaveryveryverylooooooooooooooooooooooooooooooooongstring",
                        "3081",
                        "testAgency",
                        "St Kilda"});
#line 182
 testRunner.When("I Enter values in Agency Details as", ((string)(null)), table32, "When ");
#line 185
 testRunner.Then("Error \"Error Text\" should be displayed for State field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_AgencyDetails021_Verify that Principal Details section is displayed a" +
            "fter entering 60 characters in State field")]
        public virtual void AgentSignUp_AgencyDetails021_VerifyThatPrincipalDetailsSectionIsDisplayedAfterEntering60CharactersInStateField()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_AgencyDetails021_Verify that Principal Details section is displayed a" +
                    "fter entering 60 characters in State field", ((string[])(null)));
#line 187
 this.ScenarioSetup(scenarioInfo);
#line 188
 testRunner.Given("User is on Agent Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition"});
            table33.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant"});
#line 189
 testRunner.And("User navigates to About Your Agency section after entering details as", ((string)(null)), table33, "And ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch"});
            table34.AddRow(new string[] {
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "testSuburb",
                        "thisisaveryveryveryloooooooooooooooooooooooooooooooongstring",
                        "3081",
                        "testAgency",
                        "branch"});
#line 192
 testRunner.When("I Enter values in Agency Details as", ((string)(null)), table34, "When ");
#line 195
 testRunner.Then("Principal Details section is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_AgencyDetails022_Verify that error is displayed on entering more than" +
            " 50 characters in Suburb field")]
        public virtual void AgentSignUp_AgencyDetails022_VerifyThatErrorIsDisplayedOnEnteringMoreThan50CharactersInSuburbField()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_AgencyDetails022_Verify that error is displayed on entering more than" +
                    " 50 characters in Suburb field", ((string[])(null)));
#line 197
 this.ScenarioSetup(scenarioInfo);
#line 198
 testRunner.Given("User is on Agent Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition"});
            table35.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant"});
#line 199
 testRunner.And("User navigates to About Your Agency section after entering details as", ((string)(null)), table35, "And ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch"});
            table36.AddRow(new string[] {
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "thisisaveryveryveryloooooooooooooooooooooongstringo",
                        "VIC",
                        "3081",
                        "testAgency",
                        "St Kilda"});
#line 202
 testRunner.When("I Enter values in Agency Details as", ((string)(null)), table36, "When ");
#line 205
 testRunner.Then("Error \"Error Text\" should be displayed for Suburb field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_AgencyDetails023_Verify that Principal Details section is displayed a" +
            "fter entering 50 characters in Suburb field")]
        public virtual void AgentSignUp_AgencyDetails023_VerifyThatPrincipalDetailsSectionIsDisplayedAfterEntering50CharactersInSuburbField()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_AgencyDetails023_Verify that Principal Details section is displayed a" +
                    "fter entering 50 characters in Suburb field", ((string[])(null)));
#line 207
 this.ScenarioSetup(scenarioInfo);
#line 208
 testRunner.Given("User is on Agent Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition"});
            table37.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant"});
#line 209
 testRunner.And("User navigates to About Your Agency section after entering details as", ((string)(null)), table37, "And ");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch"});
            table38.AddRow(new string[] {
                        "Unit1",
                        "thisisaveryveryveryloooooooooooooooooooooongstring",
                        "streetname",
                        "testSuburb",
                        "VIC",
                        "3081",
                        "testAgency",
                        "branch"});
#line 212
 testRunner.When("I Enter values in Agency Details as", ((string)(null)), table38, "When ");
#line 215
 testRunner.Then("Principal Details section is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_AgencyDetails024_Verify that error is displayed on entering more than" +
            " 200 characters in Agency Name field")]
        public virtual void AgentSignUp_AgencyDetails024_VerifyThatErrorIsDisplayedOnEnteringMoreThan200CharactersInAgencyNameField()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_AgencyDetails024_Verify that error is displayed on entering more than" +
                    " 200 characters in Agency Name field", ((string[])(null)));
#line 218
 this.ScenarioSetup(scenarioInfo);
#line 219
 testRunner.Given("User is on Agent Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition"});
            table39.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant"});
#line 220
 testRunner.And("User navigates to About Your Agency section after entering details as", ((string)(null)), table39, "And ");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch"});
            table40.AddRow(new string[] {
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "Hoppers Crossing",
                        "VIC",
                        "3081",
                        "This string consists of more than 200 characters. The purpose of the string is to" +
                            " test the fields for any errors. This string consists of more than 200 character" +
                            "s. The purpose of the string is to test.",
                        "St Kilda"});
#line 223
 testRunner.When("I Enter values in Agency Details as", ((string)(null)), table40, "When ");
#line 226
 testRunner.Then("Error \"Error Text\" should be displayed for Agency Name field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_AgencyDetails025_Verify that Principal Details section is displayed a" +
            "fter entering 200 characters in Agency Name field")]
        public virtual void AgentSignUp_AgencyDetails025_VerifyThatPrincipalDetailsSectionIsDisplayedAfterEntering200CharactersInAgencyNameField()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_AgencyDetails025_Verify that Principal Details section is displayed a" +
                    "fter entering 200 characters in Agency Name field", ((string[])(null)));
#line 228
 this.ScenarioSetup(scenarioInfo);
#line 229
 testRunner.Given("User is on Agent Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest",
                        "AgentFirstName",
                        "AgentLastName",
                        "AgentPhone",
                        "AgentMobile",
                        "AgentEmail",
                        "AgentPosition"});
            table41.AddRow(new string[] {
                        "Rentals",
                        "First",
                        "Last",
                        "0412213456",
                        "0412213456",
                        "randomize",
                        "Sales Consultant"});
#line 230
 testRunner.And("User navigates to About Your Agency section after entering details as", ((string)(null)), table41, "And ");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "AgencyUnitAppNo",
                        "AgencyStreetNo",
                        "AgencyStreet",
                        "AgencySuburb",
                        "AgencyState",
                        "AgencyPostCode",
                        "AgencyName",
                        "AgencyBranch"});
            table42.AddRow(new string[] {
                        "Unit1",
                        "testStreet",
                        "streetname",
                        "Hoppers Crossing",
                        "VIC",
                        "3081",
                        "This string consists of more than 200 characters. The purpose of the string is to" +
                            " test the fields for any errors. This string consists of more than 200 character" +
                            "s. The purpose of the string is to test",
                        "St Kilda"});
#line 233
 testRunner.When("I Enter values in Agency Details as", ((string)(null)), table42, "When ");
#line 236
 testRunner.Then("Principal Details section is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
