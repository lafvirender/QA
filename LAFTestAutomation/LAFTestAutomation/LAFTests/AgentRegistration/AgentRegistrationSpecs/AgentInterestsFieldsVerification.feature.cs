// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace LAFTests.AgentRegistration.AgentRegistrationSpecs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("AgentInterestsFieldsVerification")]
    public partial class AgentInterestsFieldsVerificationFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "AgentInterestsFieldsVerification.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "AgentInterestsFieldsVerification", "\tIn order to submit the proposal\r\n\tAs an Agent\r\n\tI want to be able to register af" +
                    "ter selecting valid Interests for Rentals, Sales or both.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_Interests001_Verify the Question for Interests on Agent SignUp.")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        public virtual void AgentSignUp_Interests001_VerifyTheQuestionForInterestsOnAgentSignUp_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_Interests001_Verify the Question for Interests on Agent SignUp.", new string[] {
                        "mytag"});
#line 7
 this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("User is on Agent SignUp Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
 testRunner.And("User navigates to Interests Selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
 testRunner.Then("Question \"Do you cover sales, rentals or both?\" should be displayed for Interests" +
                    " Selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_Interests002_Verify that category Sales with text \"SALES\" should be a" +
            "vailable on Interests Selection")]
        public virtual void AgentSignUp_Interests002_VerifyThatCategorySalesWithTextSALESShouldBeAvailableOnInterestsSelection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_Interests002_Verify that category Sales with text \"SALES\" should be a" +
                    "vailable on Interests Selection", ((string[])(null)));
#line 12
 this.ScenarioSetup(scenarioInfo);
#line 13
 testRunner.Given("User is on Agent SignUp Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 14
 testRunner.And("User navigates to Interests Selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
 testRunner.Then("Category Sales with text \"SALES\" should be available on Interests Selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_Interests003_Verify that category Rentals with text \"RENTALS\" should " +
            "be available on Interests Selection")]
        public virtual void AgentSignUp_Interests003_VerifyThatCategoryRentalsWithTextRENTALSShouldBeAvailableOnInterestsSelection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_Interests003_Verify that category Rentals with text \"RENTALS\" should " +
                    "be available on Interests Selection", ((string[])(null)));
#line 17
 this.ScenarioSetup(scenarioInfo);
#line 18
 testRunner.Given("User is on Agent SignUp Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 19
 testRunner.And("User navigates to Interests Selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
 testRunner.Then("Category Rentals with text \"RENTALS\" should be available on Interests Selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_Interests004_Verify that category \"BOTH\" should be available on Agent" +
            " Interests Selection")]
        public virtual void AgentSignUp_Interests004_VerifyThatCategoryBOTHShouldBeAvailableOnAgentInterestsSelection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_Interests004_Verify that category \"BOTH\" should be available on Agent" +
                    " Interests Selection", ((string[])(null)));
#line 22
 this.ScenarioSetup(scenarioInfo);
#line 23
 testRunner.Given("User is on Agent SignUp Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 24
 testRunner.And("User navigates to Interests Selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
 testRunner.Then("Category Both with text \"BOTH\" should be available on Interests Selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_Interests005_Verify that under Progress section, About You Circle sho" +
            "uld not be displayed as Filled by default.")]
        public virtual void AgentSignUp_Interests005_VerifyThatUnderProgressSectionAboutYouCircleShouldNotBeDisplayedAsFilledByDefault_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_Interests005_Verify that under Progress section, About You Circle sho" +
                    "uld not be displayed as Filled by default.", ((string[])(null)));
#line 27
 this.ScenarioSetup(scenarioInfo);
#line 28
 testRunner.Given("User is on Agent SignUp Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 29
 testRunner.And("User navigates to Interests Selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
 testRunner.Then("About You Progress Circle should be displayed as not filled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_Interests006_Verify that under Progress section, Label \"ABOUT YOU\" sh" +
            "ould be displayed for User Details filling progress.")]
        public virtual void AgentSignUp_Interests006_VerifyThatUnderProgressSectionLabelABOUTYOUShouldBeDisplayedForUserDetailsFillingProgress_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_Interests006_Verify that under Progress section, Label \"ABOUT YOU\" sh" +
                    "ould be displayed for User Details filling progress.", ((string[])(null)));
#line 32
 this.ScenarioSetup(scenarioInfo);
#line 33
 testRunner.Given("User is on Agent SignUp Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 34
 testRunner.And("User navigates to Interests Selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 35
 testRunner.Then("Label \"ABOUT YOU\" should be displayed for User Details filling progress", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_Interests007_Verify that under Progress section, no progress should b" +
            "e displayed for Agency by default.")]
        public virtual void AgentSignUp_Interests007_VerifyThatUnderProgressSectionNoProgressShouldBeDisplayedForAgencyByDefault_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_Interests007_Verify that under Progress section, no progress should b" +
                    "e displayed for Agency by default.", ((string[])(null)));
#line 37
 this.ScenarioSetup(scenarioInfo);
#line 38
 testRunner.Given("User is on Agent SignUp Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 39
 testRunner.And("User navigates to Interests Selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
 testRunner.Then("No progress should be displayed for Agency by default", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_Interests008_Verify that under Progress section, Label \"AGENCY\" shoul" +
            "d be displayed for Agency Details filling progress.")]
        public virtual void AgentSignUp_Interests008_VerifyThatUnderProgressSectionLabelAGENCYShouldBeDisplayedForAgencyDetailsFillingProgress_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_Interests008_Verify that under Progress section, Label \"AGENCY\" shoul" +
                    "d be displayed for Agency Details filling progress.", ((string[])(null)));
#line 42
 this.ScenarioSetup(scenarioInfo);
#line 43
 testRunner.Given("User is on Agent SignUp Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 44
 testRunner.And("User navigates to Interests Selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 45
 testRunner.Then("Label \"AGENCY\" should be displayed for Agency Details filling progress", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_Interests009_Verify that under Progress section, no progress should b" +
            "e displayed for Key Info by default.")]
        public virtual void AgentSignUp_Interests009_VerifyThatUnderProgressSectionNoProgressShouldBeDisplayedForKeyInfoByDefault_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_Interests009_Verify that under Progress section, no progress should b" +
                    "e displayed for Key Info by default.", ((string[])(null)));
#line 47
 this.ScenarioSetup(scenarioInfo);
#line 48
 testRunner.Given("User is on Agent SignUp Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 49
 testRunner.And("User navigates to Interests Selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
 testRunner.Then("No progress should be displayed for Key Info by default", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_Interests010_Verify that under Progress section, Label \"KEY INFO\" sho" +
            "uld be displayed for key information filling progress")]
        public virtual void AgentSignUp_Interests010_VerifyThatUnderProgressSectionLabelKEYINFOShouldBeDisplayedForKeyInformationFillingProgress()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_Interests010_Verify that under Progress section, Label \"KEY INFO\" sho" +
                    "uld be displayed for key information filling progress", ((string[])(null)));
#line 52
 this.ScenarioSetup(scenarioInfo);
#line 53
 testRunner.Given("User is on Agent SignUp Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 54
 testRunner.And("User navigates to Interests Selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 55
 testRunner.Then("Label \"KEY INFO\" should be displayed for key information filling progress", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_Interests011_Verify that under Progress section, no progress should b" +
            "e displayed for Terms and Conditions by default.")]
        public virtual void AgentSignUp_Interests011_VerifyThatUnderProgressSectionNoProgressShouldBeDisplayedForTermsAndConditionsByDefault_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_Interests011_Verify that under Progress section, no progress should b" +
                    "e displayed for Terms and Conditions by default.", ((string[])(null)));
#line 57
 this.ScenarioSetup(scenarioInfo);
#line 58
 testRunner.Given("User is on Agent SignUp Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 59
 testRunner.And("User navigates to Interests Selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 60
 testRunner.Then("No progress should be displayed for Terms and Conditions by default", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_Interests012_Verify that under Progress section, Label \"T&CS\" should " +
            "be displayed for Terms and Conditions filling progress")]
        public virtual void AgentSignUp_Interests012_VerifyThatUnderProgressSectionLabelTCSShouldBeDisplayedForTermsAndConditionsFillingProgress()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_Interests012_Verify that under Progress section, Label \"T&CS\" should " +
                    "be displayed for Terms and Conditions filling progress", ((string[])(null)));
#line 62
 this.ScenarioSetup(scenarioInfo);
#line 63
 testRunner.Given("User is on Agent SignUp Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 64
 testRunner.And("User navigates to Interests Selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 65
 testRunner.Then("Label \"T&CS\" should be displayed for Terms and Conditions filling progress", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_Interests013_Verify that Basic Details Entry question should be displ" +
            "ayed when user selects \"Sales\" Category.")]
        public virtual void AgentSignUp_Interests013_VerifyThatBasicDetailsEntryQuestionShouldBeDisplayedWhenUserSelectsSalesCategory_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_Interests013_Verify that Basic Details Entry question should be displ" +
                    "ayed when user selects \"Sales\" Category.", ((string[])(null)));
#line 67
 this.ScenarioSetup(scenarioInfo);
#line 68
 testRunner.Given("User is on Agent SignUp Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest"});
            table1.AddRow(new string[] {
                        "Sales"});
#line 69
 testRunner.And("User navigates to Basic Details Entry after selecting option", ((string)(null)), table1, "And ");
#line 72
 testRunner.Then("Basic Details Entry question should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_Interests014_Verify that Basic Details Entry question should be displ" +
            "ayed when user selects \"Rentals\" Category.")]
        public virtual void AgentSignUp_Interests014_VerifyThatBasicDetailsEntryQuestionShouldBeDisplayedWhenUserSelectsRentalsCategory_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_Interests014_Verify that Basic Details Entry question should be displ" +
                    "ayed when user selects \"Rentals\" Category.", ((string[])(null)));
#line 74
 this.ScenarioSetup(scenarioInfo);
#line 75
 testRunner.Given("User is on Agent SignUp Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest"});
            table2.AddRow(new string[] {
                        "Rentals"});
#line 76
 testRunner.And("User navigates to Basic Details Entry after selecting option", ((string)(null)), table2, "And ");
#line 79
 testRunner.Then("Basic Details Entry question should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_Interests015_Verify that Basic Details Entry question should be displ" +
            "ayed when user selects \"Both\" Category.")]
        public virtual void AgentSignUp_Interests015_VerifyThatBasicDetailsEntryQuestionShouldBeDisplayedWhenUserSelectsBothCategory_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_Interests015_Verify that Basic Details Entry question should be displ" +
                    "ayed when user selects \"Both\" Category.", ((string[])(null)));
#line 81
 this.ScenarioSetup(scenarioInfo);
#line 82
 testRunner.Given("User is on Agent SignUp Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest"});
            table3.AddRow(new string[] {
                        "Both"});
#line 83
 testRunner.And("User navigates to Basic Details Entry after selecting option", ((string)(null)), table3, "And ");
#line 86
 testRunner.Then("Basic Details Entry question should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_Interests016_Verify that link for Moving forward is displayed as enab" +
            "led when user moves back to Interest Selection from Basic Details Entry section." +
            "")]
        public virtual void AgentSignUp_Interests016_VerifyThatLinkForMovingForwardIsDisplayedAsEnabledWhenUserMovesBackToInterestSelectionFromBasicDetailsEntrySection_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_Interests016_Verify that link for Moving forward is displayed as enab" +
                    "led when user moves back to Interest Selection from Basic Details Entry section." +
                    "", ((string[])(null)));
#line 88
 this.ScenarioSetup(scenarioInfo);
#line 89
 testRunner.Given("User is on Agent SignUp Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest"});
            table4.AddRow(new string[] {
                        "Both"});
#line 90
 testRunner.And("User navigates to Basic Details Entry after selecting option", ((string)(null)), table4, "And ");
#line 93
 testRunner.And("I move back to Interest Selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 94
 testRunner.Then("Forward link is enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_Interests017_Verify that Basic Details entry section is displayed on " +
            "clicking Forward link on Interest Selection")]
        public virtual void AgentSignUp_Interests017_VerifyThatBasicDetailsEntrySectionIsDisplayedOnClickingForwardLinkOnInterestSelection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_Interests017_Verify that Basic Details entry section is displayed on " +
                    "clicking Forward link on Interest Selection", ((string[])(null)));
#line 96
 this.ScenarioSetup(scenarioInfo);
#line 97
 testRunner.Given("User is on Agent SignUp Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest"});
            table5.AddRow(new string[] {
                        "Both"});
#line 98
 testRunner.And("User navigates to Basic Details Entry after selecting option", ((string)(null)), table5, "And ");
#line 101
 testRunner.And("User move back to Interest Selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 102
 testRunner.When("User click Forward Link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 103
 testRunner.Then("Basic Details Entry question should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_Interests018_Verify the color of option Sales when it is not selected" +
            "")]
        public virtual void AgentSignUp_Interests018_VerifyTheColorOfOptionSalesWhenItIsNotSelected()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_Interests018_Verify the color of option Sales when it is not selected" +
                    "", ((string[])(null)));
#line 105
 this.ScenarioSetup(scenarioInfo);
#line 106
 testRunner.Given("User is on Agent SignUp Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 107
 testRunner.And("User navigates to Interests Selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 108
 testRunner.Then("Color of the Sales option on Interest Selection should be \"#00AEFF\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_Interests019_Verify that color of the option Sales changes on selecti" +
            "on.")]
        public virtual void AgentSignUp_Interests019_VerifyThatColorOfTheOptionSalesChangesOnSelection_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_Interests019_Verify that color of the option Sales changes on selecti" +
                    "on.", ((string[])(null)));
#line 110
 this.ScenarioSetup(scenarioInfo);
#line 111
 testRunner.Given("User is on Agent SignUp Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest"});
            table6.AddRow(new string[] {
                        "Sales"});
#line 112
 testRunner.And("User navigates to Basic Details Entry after selecting option", ((string)(null)), table6, "And ");
#line 115
 testRunner.And("User move back to Interest Selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 116
 testRunner.Then("Color of the Sales option on Interest Selection should be \"#14B24B\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_Interests020_Verify the color of option Rentals when it is not select" +
            "ed")]
        public virtual void AgentSignUp_Interests020_VerifyTheColorOfOptionRentalsWhenItIsNotSelected()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_Interests020_Verify the color of option Rentals when it is not select" +
                    "ed", ((string[])(null)));
#line 118
 this.ScenarioSetup(scenarioInfo);
#line 119
 testRunner.Given("User is on Agent SignUp Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 120
 testRunner.And("User navigates to Interests Selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 121
 testRunner.Then("Color of the Rent option on Interest Selection should be \"#00AEFF\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_Interests021_Verify that color of the option Rent changes on selectio" +
            "n.")]
        public virtual void AgentSignUp_Interests021_VerifyThatColorOfTheOptionRentChangesOnSelection_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_Interests021_Verify that color of the option Rent changes on selectio" +
                    "n.", ((string[])(null)));
#line 123
 this.ScenarioSetup(scenarioInfo);
#line 124
 testRunner.Given("User is on Agent SignUp Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest"});
            table7.AddRow(new string[] {
                        "Rentals"});
#line 125
 testRunner.And("User navigates to Basic Details Entry after selecting option", ((string)(null)), table7, "And ");
#line 128
 testRunner.And("User move back to Interest Selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 129
 testRunner.Then("Color of the Rent option on Interest Selection should be \"#14B24B\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_Interests020_Verify the color of option Both when it is not selected")]
        public virtual void AgentSignUp_Interests020_VerifyTheColorOfOptionBothWhenItIsNotSelected()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_Interests020_Verify the color of option Both when it is not selected", ((string[])(null)));
#line 131
 this.ScenarioSetup(scenarioInfo);
#line 132
 testRunner.Given("User is on Agent SignUp Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 133
 testRunner.And("User navigates to Interests Selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 134
 testRunner.Then("Color of the Both option on Interest Selection should be \"#00AEFF\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_Interests021_Verify that color of the option Both changes on selectio" +
            "n.")]
        public virtual void AgentSignUp_Interests021_VerifyThatColorOfTheOptionBothChangesOnSelection_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_Interests021_Verify that color of the option Both changes on selectio" +
                    "n.", ((string[])(null)));
#line 136
 this.ScenarioSetup(scenarioInfo);
#line 137
 testRunner.Given("User is on Agent SignUp Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest"});
            table8.AddRow(new string[] {
                        "Both"});
#line 138
 testRunner.And("User navigates to Basic Details Entry after selecting option", ((string)(null)), table8, "And ");
#line 141
 testRunner.And("User move back to Interest Selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 142
 testRunner.Then("Color of the Both option on Interest Selection should be \"#14B24B\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_Interests022_Verify that Forward link should be disabled when user co" +
            "mes on Interest Selection for the first time.")]
        public virtual void AgentSignUp_Interests022_VerifyThatForwardLinkShouldBeDisabledWhenUserComesOnInterestSelectionForTheFirstTime_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_Interests022_Verify that Forward link should be disabled when user co" +
                    "mes on Interest Selection for the first time.", ((string[])(null)));
#line 144
 this.ScenarioSetup(scenarioInfo);
#line 145
 testRunner.Given("User is on Agent SignUp Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 146
 testRunner.And("User navigates to Interests Selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 147
 testRunner.Then("Forward link should be disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_Interests023_Verify that link for moving back should be enabled when " +
            "user comes on Interest Selection for the first time.")]
        public virtual void AgentSignUp_Interests023_VerifyThatLinkForMovingBackShouldBeEnabledWhenUserComesOnInterestSelectionForTheFirstTime_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_Interests023_Verify that link for moving back should be enabled when " +
                    "user comes on Interest Selection for the first time.", ((string[])(null)));
#line 149
 this.ScenarioSetup(scenarioInfo);
#line 150
 testRunner.Given("User is on Agent SignUp Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 151
 testRunner.And("User navigates to Interests Selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 152
 testRunner.Then("Link for moving Back should be enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AgentSignUp_Interests024_Verify that under Progress section, About You Circle sho" +
            "uld be displayed as Filled when user selects an Interest")]
        public virtual void AgentSignUp_Interests024_VerifyThatUnderProgressSectionAboutYouCircleShouldBeDisplayedAsFilledWhenUserSelectsAnInterest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AgentSignUp_Interests024_Verify that under Progress section, About You Circle sho" +
                    "uld be displayed as Filled when user selects an Interest", ((string[])(null)));
#line 154
 this.ScenarioSetup(scenarioInfo);
#line 155
 testRunner.Given("User is on Agent SignUp Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Interest"});
            table9.AddRow(new string[] {
                        "Both"});
#line 156
 testRunner.And("User navigates to Basic Details Entry after selecting option", ((string)(null)), table9, "And ");
#line 159
 testRunner.Then("About You Progress Circle should be displayed as filled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
