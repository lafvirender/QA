// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace LAFTests.PropertyRegistration.PropertyRegistrationSpecs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("BedroomsFieldsVerification")]
    public partial class BedroomsFieldsVerificationFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "BedroomsFieldsVerification.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "BedroomsFieldsVerification", "\tIn order to register property for Sell or Rent\r\n\tAs a User\r\n\tI want to be able t" +
                    "o proceed after selecting valid number of Bedrooms.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Bedrooms001_Verify the Question for Bedrooms options on Registration Page" +
            ".")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        public virtual void PropReg_Bedrooms001_VerifyTheQuestionForBedroomsOptionsOnRegistrationPage_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Bedrooms001_Verify the Question for Bedrooms options on Registration Page" +
                    ".", new string[] {
                        "mytag"});
#line 7
 this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("I am on Property Reg Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType"});
            table1.AddRow(new string[] {
                        "Sell",
                        "House"});
#line 9
 testRunner.And("I navigate to Bedroom selection after entering details", ((string)(null)), table1, "And ");
#line 12
 testRunner.Then("Q \"How many bedrooms does the house you\'re selling have?\" should be displayed for" +
                    " Bedrooms selection options", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Bedrooms002_Verify that Progress line indicates selection of Property Typ" +
            "e.")]
        public virtual void PropReg_Bedrooms002_VerifyThatProgressLineIndicatesSelectionOfPropertyType_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Bedrooms002_Verify that Progress line indicates selection of Property Typ" +
                    "e.", ((string[])(null)));
#line 14
 this.ScenarioSetup(scenarioInfo);
#line 15
 testRunner.Given("I am on Property Reg Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType"});
            table2.AddRow(new string[] {
                        "Sell",
                        "House"});
#line 16
 testRunner.And("I navigate to Bedroom selection after entering details", ((string)(null)), table2, "And ");
#line 19
 testRunner.Then("Progress line indicates selection of Property Type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Bedrooms003_Verify that option \"1\" should be available for Bedrooms.")]
        public virtual void PropReg_Bedrooms003_VerifyThatOption1ShouldBeAvailableForBedrooms_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Bedrooms003_Verify that option \"1\" should be available for Bedrooms.", ((string[])(null)));
#line 21
 this.ScenarioSetup(scenarioInfo);
#line 22
 testRunner.Given("I am on Property Reg Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType"});
            table3.AddRow(new string[] {
                        "Sell",
                        "House"});
#line 23
 testRunner.And("I navigate to Bedroom selection after entering details", ((string)(null)), table3, "And ");
#line 26
 testRunner.Then("Option for selection of one Bedrooms with text \"1\" should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Bedrooms004_Verify that option \"2\" should be available for Bedrooms.")]
        public virtual void PropReg_Bedrooms004_VerifyThatOption2ShouldBeAvailableForBedrooms_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Bedrooms004_Verify that option \"2\" should be available for Bedrooms.", ((string[])(null)));
#line 28
 this.ScenarioSetup(scenarioInfo);
#line 29
 testRunner.Given("I am on Property Reg Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType"});
            table4.AddRow(new string[] {
                        "Sell",
                        "House"});
#line 30
 testRunner.And("I navigate to Bedroom selection after entering details", ((string)(null)), table4, "And ");
#line 33
 testRunner.Then("Option for selection of two Bedrooms with text \"2\" should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Bedrooms005_Verify that option \"3\" should be available for Bedrooms.")]
        public virtual void PropReg_Bedrooms005_VerifyThatOption3ShouldBeAvailableForBedrooms_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Bedrooms005_Verify that option \"3\" should be available for Bedrooms.", ((string[])(null)));
#line 35
    this.ScenarioSetup(scenarioInfo);
#line 36
 testRunner.Given("I am on Property Reg Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType"});
            table5.AddRow(new string[] {
                        "Sell",
                        "House"});
#line 37
 testRunner.And("I navigate to Bedroom selection after entering details", ((string)(null)), table5, "And ");
#line 40
 testRunner.Then("Option for selection of three Bedrooms with text \"3\" should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Bedrooms006_Verify that option \"4+\" should be available for Bedrooms.")]
        public virtual void PropReg_Bedrooms006_VerifyThatOption4ShouldBeAvailableForBedrooms_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Bedrooms006_Verify that option \"4+\" should be available for Bedrooms.", ((string[])(null)));
#line 42
    this.ScenarioSetup(scenarioInfo);
#line 43
 testRunner.Given("I am on Property Reg Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType"});
            table6.AddRow(new string[] {
                        "Sell",
                        "House"});
#line 44
 testRunner.And("I navigate to Bedroom selection after entering details", ((string)(null)), table6, "And ");
#line 47
 testRunner.Then("Option for selection of four plus Bedrooms with text 4+ should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Bedrooms007_Verify that link for Moving Forward should be disabled by def" +
            "ault")]
        public virtual void PropReg_Bedrooms007_VerifyThatLinkForMovingForwardShouldBeDisabledByDefault()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Bedrooms007_Verify that link for Moving Forward should be disabled by def" +
                    "ault", ((string[])(null)));
#line 49
 this.ScenarioSetup(scenarioInfo);
#line 50
 testRunner.Given("I am on Property Reg Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType"});
            table7.AddRow(new string[] {
                        "Sell",
                        "House"});
#line 51
 testRunner.And("I navigate to Bedroom selection after entering details", ((string)(null)), table7, "And ");
#line 54
 testRunner.Then("Icon Link for Moving forward is displayed as Disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Bedrooms008_Verify that Property Value selection question should be displ" +
            "ayed when user selects \"1\" Bedroom.")]
        public virtual void PropReg_Bedrooms008_VerifyThatPropertyValueSelectionQuestionShouldBeDisplayedWhenUserSelects1Bedroom_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Bedrooms008_Verify that Property Value selection question should be displ" +
                    "ayed when user selects \"1\" Bedroom.", ((string[])(null)));
#line 56
 this.ScenarioSetup(scenarioInfo);
#line 57
 testRunner.Given("I am on Property Reg Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType"});
            table8.AddRow(new string[] {
                        "Sell",
                        "House"});
#line 58
 testRunner.And("I navigate to Bedroom selection after entering details", ((string)(null)), table8, "And ");
#line 61
 testRunner.When("I Select Bedroom as \"One\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 62
 testRunner.Then("Question for selecting Approximate Value should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Bedrooms009_Verify that Progress line indicates selection of Bedrooms.")]
        public virtual void PropReg_Bedrooms009_VerifyThatProgressLineIndicatesSelectionOfBedrooms_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Bedrooms009_Verify that Progress line indicates selection of Bedrooms.", ((string[])(null)));
#line 64
 this.ScenarioSetup(scenarioInfo);
#line 65
 testRunner.Given("I am on Property Reg Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType"});
            table9.AddRow(new string[] {
                        "Sell",
                        "House"});
#line 66
 testRunner.And("I navigate to Bedroom selection after entering details", ((string)(null)), table9, "And ");
#line 69
 testRunner.When("I Select Bedroom as \"One\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 70
 testRunner.And("I move back to Bedrooms Selection from Property Value Selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 71
 testRunner.Then("Progress line indicates selection of Bedrooms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Bedrooms010_Verify that Property Value selection question should be displ" +
            "ayed when user selects \"2\" Bedroom.")]
        public virtual void PropReg_Bedrooms010_VerifyThatPropertyValueSelectionQuestionShouldBeDisplayedWhenUserSelects2Bedroom_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Bedrooms010_Verify that Property Value selection question should be displ" +
                    "ayed when user selects \"2\" Bedroom.", ((string[])(null)));
#line 73
 this.ScenarioSetup(scenarioInfo);
#line 74
 testRunner.Given("I am on Property Reg Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType"});
            table10.AddRow(new string[] {
                        "Sell",
                        "House"});
#line 75
 testRunner.And("I navigate to Bedroom selection after entering details", ((string)(null)), table10, "And ");
#line 78
 testRunner.When("I Select Bedroom as \"Two\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 79
 testRunner.Then("Question for selecting Approximate Value should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Bedrooms011_Verify that Property Value selection question should be displ" +
            "ayed when user selects \"3\" Bedroom.")]
        public virtual void PropReg_Bedrooms011_VerifyThatPropertyValueSelectionQuestionShouldBeDisplayedWhenUserSelects3Bedroom_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Bedrooms011_Verify that Property Value selection question should be displ" +
                    "ayed when user selects \"3\" Bedroom.", ((string[])(null)));
#line 81
 this.ScenarioSetup(scenarioInfo);
#line 82
 testRunner.Given("I am on Property Reg Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType"});
            table11.AddRow(new string[] {
                        "Sell",
                        "House"});
#line 83
 testRunner.And("I navigate to Bedroom selection after entering details", ((string)(null)), table11, "And ");
#line 86
 testRunner.When("I Select Bedroom as \"Three\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 87
 testRunner.Then("Question for selecting Approximate Value should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Bedrooms012_Verify that Property Value selection question should be displ" +
            "ayed when user selects \"4+\" Bedroom.")]
        public virtual void PropReg_Bedrooms012_VerifyThatPropertyValueSelectionQuestionShouldBeDisplayedWhenUserSelects4Bedroom_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Bedrooms012_Verify that Property Value selection question should be displ" +
                    "ayed when user selects \"4+\" Bedroom.", ((string[])(null)));
#line 89
 this.ScenarioSetup(scenarioInfo);
#line 90
 testRunner.Given("I am on Property Reg Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType"});
            table12.AddRow(new string[] {
                        "Sell",
                        "House"});
#line 91
 testRunner.And("I navigate to Bedroom selection after entering details", ((string)(null)), table12, "And ");
#line 94
 testRunner.When("I Select Bedroom as \"Four\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 95
 testRunner.Then("Question for selecting Approximate Value should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Bedrooms013_Verify the color of option for one bedroom when it is not sel" +
            "ected")]
        public virtual void PropReg_Bedrooms013_VerifyTheColorOfOptionForOneBedroomWhenItIsNotSelected()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Bedrooms013_Verify the color of option for one bedroom when it is not sel" +
                    "ected", ((string[])(null)));
#line 97
 this.ScenarioSetup(scenarioInfo);
#line 98
 testRunner.Given("I am on Property Reg Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType"});
            table13.AddRow(new string[] {
                        "Sell",
                        "House"});
#line 99
 testRunner.And("I navigate to Bedroom selection after entering details", ((string)(null)), table13, "And ");
#line 102
 testRunner.Then("Color of the one bedroom option should be \"#00AEFF\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Bedrooms014_Verify that color of the option for One Bedroom changes on se" +
            "lection.")]
        public virtual void PropReg_Bedrooms014_VerifyThatColorOfTheOptionForOneBedroomChangesOnSelection_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Bedrooms014_Verify that color of the option for One Bedroom changes on se" +
                    "lection.", ((string[])(null)));
#line 105
 this.ScenarioSetup(scenarioInfo);
#line 106
 testRunner.Given("I am on Property Reg Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType"});
            table14.AddRow(new string[] {
                        "Sell",
                        "House"});
#line 107
 testRunner.And("I navigate to Bedroom selection after entering details", ((string)(null)), table14, "And ");
#line 110
 testRunner.When("I Select Bedroom as \"One\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 111
 testRunner.And("I move back to Bedrooms Selection from Property Value Selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 112
 testRunner.Then("Color of the one bedroom option should be \"#16B24D\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Bedrooms015_Verify the color of option for two bedroom when it is not sel" +
            "ected")]
        public virtual void PropReg_Bedrooms015_VerifyTheColorOfOptionForTwoBedroomWhenItIsNotSelected()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Bedrooms015_Verify the color of option for two bedroom when it is not sel" +
                    "ected", ((string[])(null)));
#line 114
 this.ScenarioSetup(scenarioInfo);
#line 115
 testRunner.Given("I am on Property Reg Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType"});
            table15.AddRow(new string[] {
                        "Sell",
                        "House"});
#line 116
 testRunner.And("I navigate to Bedroom selection after entering details", ((string)(null)), table15, "And ");
#line 119
 testRunner.Then("Color of the two bedroom option should be \"#00AEFF\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Bedrooms016_Verify that color of the option for Two Bedroom changes on se" +
            "lection.")]
        public virtual void PropReg_Bedrooms016_VerifyThatColorOfTheOptionForTwoBedroomChangesOnSelection_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Bedrooms016_Verify that color of the option for Two Bedroom changes on se" +
                    "lection.", ((string[])(null)));
#line 122
 this.ScenarioSetup(scenarioInfo);
#line 123
 testRunner.Given("I am on Property Reg Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType"});
            table16.AddRow(new string[] {
                        "Sell",
                        "House"});
#line 124
 testRunner.And("I navigate to Bedroom selection after entering details", ((string)(null)), table16, "And ");
#line 127
 testRunner.When("I Select Bedroom as \"Two\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 128
 testRunner.And("I move back to Bedrooms Selection from Property Value Selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 129
 testRunner.Then("Color of the two bedroom option should be \"#16B24D\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Bedrooms017_Verify the color of option for three bedroom when it is not s" +
            "elected")]
        public virtual void PropReg_Bedrooms017_VerifyTheColorOfOptionForThreeBedroomWhenItIsNotSelected()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Bedrooms017_Verify the color of option for three bedroom when it is not s" +
                    "elected", ((string[])(null)));
#line 132
 this.ScenarioSetup(scenarioInfo);
#line 133
 testRunner.Given("I am on Property Reg Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType"});
            table17.AddRow(new string[] {
                        "Sell",
                        "House"});
#line 134
 testRunner.And("I navigate to Bedroom selection after entering details", ((string)(null)), table17, "And ");
#line 137
 testRunner.Then("Color of the three bedroom option should be \"#00AEFF\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Bedrooms018_Verify that color of the option for Three Bedroom changes on " +
            "selection.")]
        public virtual void PropReg_Bedrooms018_VerifyThatColorOfTheOptionForThreeBedroomChangesOnSelection_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Bedrooms018_Verify that color of the option for Three Bedroom changes on " +
                    "selection.", ((string[])(null)));
#line 140
 this.ScenarioSetup(scenarioInfo);
#line 141
 testRunner.Given("I am on Property Reg Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType"});
            table18.AddRow(new string[] {
                        "Sell",
                        "House"});
#line 142
 testRunner.And("I navigate to Bedroom selection after entering details", ((string)(null)), table18, "And ");
#line 145
 testRunner.When("I Select Bedroom as \"Three\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 146
 testRunner.And("I move back to Bedrooms Selection from Property Value Selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 147
 testRunner.Then("Color of the three bedroom option should be \"#16B24D\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Bedrooms019_Verify the color of option for four plus bedroom when it is n" +
            "ot selected")]
        public virtual void PropReg_Bedrooms019_VerifyTheColorOfOptionForFourPlusBedroomWhenItIsNotSelected()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Bedrooms019_Verify the color of option for four plus bedroom when it is n" +
                    "ot selected", ((string[])(null)));
#line 149
 this.ScenarioSetup(scenarioInfo);
#line 150
 testRunner.Given("I am on Property Reg Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType"});
            table19.AddRow(new string[] {
                        "Sell",
                        "House"});
#line 151
 testRunner.And("I navigate to Bedroom selection after entering details", ((string)(null)), table19, "And ");
#line 154
 testRunner.Then("Color of the four plus bedroom option should be \"#00AEFF\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Bedrooms020_Verify that color of the option for Four Plus Bedroom changes" +
            " on selection.")]
        public virtual void PropReg_Bedrooms020_VerifyThatColorOfTheOptionForFourPlusBedroomChangesOnSelection_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Bedrooms020_Verify that color of the option for Four Plus Bedroom changes" +
                    " on selection.", ((string[])(null)));
#line 157
 this.ScenarioSetup(scenarioInfo);
#line 158
 testRunner.Given("I am on Property Reg Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType"});
            table20.AddRow(new string[] {
                        "Sell",
                        "House"});
#line 159
 testRunner.And("I navigate to Bedroom selection after entering details", ((string)(null)), table20, "And ");
#line 162
 testRunner.When("I Select Bedroom as \"Four\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 163
 testRunner.And("I move back to Bedrooms Selection from Property Value Selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 164
 testRunner.Then("Color of the four plus bedroom option should be \"#16B24D\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Bedrooms021_Verify that link for Moving forward is displayed as enabled w" +
            "hen user moves back to Bedrooms selection from Property Value Selection")]
        public virtual void PropReg_Bedrooms021_VerifyThatLinkForMovingForwardIsDisplayedAsEnabledWhenUserMovesBackToBedroomsSelectionFromPropertyValueSelection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Bedrooms021_Verify that link for Moving forward is displayed as enabled w" +
                    "hen user moves back to Bedrooms selection from Property Value Selection", ((string[])(null)));
#line 166
 this.ScenarioSetup(scenarioInfo);
#line 167
 testRunner.Given("I am on Property Reg Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType"});
            table21.AddRow(new string[] {
                        "Sell",
                        "House"});
#line 168
 testRunner.And("I navigate to Bedroom selection after entering details", ((string)(null)), table21, "And ");
#line 171
 testRunner.When("I Select Bedroom as \"Three\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 172
 testRunner.And("I move back to Bedrooms Selection from Property Value Selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 173
 testRunner.Then("Icon Link for Moving forward is displayed as enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Bedrooms022_Verify that Property Value selection question is displayed on" +
            " clicking Forward link on Bedrooms selection")]
        public virtual void PropReg_Bedrooms022_VerifyThatPropertyValueSelectionQuestionIsDisplayedOnClickingForwardLinkOnBedroomsSelection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Bedrooms022_Verify that Property Value selection question is displayed on" +
                    " clicking Forward link on Bedrooms selection", ((string[])(null)));
#line 175
 this.ScenarioSetup(scenarioInfo);
#line 176
 testRunner.Given("I am on Property Reg Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType"});
            table22.AddRow(new string[] {
                        "Sell",
                        "House"});
#line 177
  testRunner.And("I navigate to Bedroom selection after entering details", ((string)(null)), table22, "And ");
#line 180
 testRunner.When("I Select Bedroom as \"Three\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 181
 testRunner.And("I move back to Bedrooms Selection from Property Value Selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 182
 testRunner.And("Click to Move Forward", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 183
 testRunner.Then("Question for selecting Approximate Value should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Bedrooms023_Verify the Question for Bedroom selection for a Unit Property" +
            " Type with Listing Category as Sell.")]
        public virtual void PropReg_Bedrooms023_VerifyTheQuestionForBedroomSelectionForAUnitPropertyTypeWithListingCategoryAsSell_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Bedrooms023_Verify the Question for Bedroom selection for a Unit Property" +
                    " Type with Listing Category as Sell.", ((string[])(null)));
#line 185
 this.ScenarioSetup(scenarioInfo);
#line 186
 testRunner.Given("I am on Property Reg Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType"});
            table23.AddRow(new string[] {
                        "Sell",
                        "Unit"});
#line 187
  testRunner.And("I navigate to Bedroom selection after entering details", ((string)(null)), table23, "And ");
#line 190
 testRunner.Then("Q \"How many bedrooms does the unit you\'re selling have?\" should be displayed for " +
                    "Bedrooms selection options", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Bedrooms024_Verify the Question for Bedroom selection for a Apartment Pro" +
            "perty Type with Listing Category as Sell.")]
        public virtual void PropReg_Bedrooms024_VerifyTheQuestionForBedroomSelectionForAApartmentPropertyTypeWithListingCategoryAsSell_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Bedrooms024_Verify the Question for Bedroom selection for a Apartment Pro" +
                    "perty Type with Listing Category as Sell.", ((string[])(null)));
#line 192
 this.ScenarioSetup(scenarioInfo);
#line 193
 testRunner.Given("I am on Property Reg Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType"});
            table24.AddRow(new string[] {
                        "Sell",
                        "Apartment"});
#line 194
  testRunner.And("I navigate to Bedroom selection after entering details", ((string)(null)), table24, "And ");
#line 197
 testRunner.Then("Q \"How many bedrooms does the apartment you\'re selling have?\" should be displayed" +
                    " for Bedrooms selection options", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Bedrooms025_Verify the Question for Bedroom selection for a Townhouse Pro" +
            "perty Type with Listing Category as Sell.")]
        public virtual void PropReg_Bedrooms025_VerifyTheQuestionForBedroomSelectionForATownhousePropertyTypeWithListingCategoryAsSell_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Bedrooms025_Verify the Question for Bedroom selection for a Townhouse Pro" +
                    "perty Type with Listing Category as Sell.", ((string[])(null)));
#line 199
 this.ScenarioSetup(scenarioInfo);
#line 200
 testRunner.Given("I am on Property Reg Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType"});
            table25.AddRow(new string[] {
                        "Sell",
                        "Townhouse"});
#line 201
  testRunner.And("I navigate to Bedroom selection after entering details", ((string)(null)), table25, "And ");
#line 204
 testRunner.Then("Q \"How many bedrooms does the townhouse you\'re selling have?\" should be displayed" +
                    " for Bedrooms selection options", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Bedrooms026_Verify the Question for Bedroom selection for a Villa Propert" +
            "y Type with Listing Category as Sell.")]
        public virtual void PropReg_Bedrooms026_VerifyTheQuestionForBedroomSelectionForAVillaPropertyTypeWithListingCategoryAsSell_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Bedrooms026_Verify the Question for Bedroom selection for a Villa Propert" +
                    "y Type with Listing Category as Sell.", ((string[])(null)));
#line 206
 this.ScenarioSetup(scenarioInfo);
#line 207
 testRunner.Given("I am on Property Reg Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType"});
            table26.AddRow(new string[] {
                        "Sell",
                        "Villa"});
#line 208
  testRunner.And("I navigate to Bedroom selection after entering details", ((string)(null)), table26, "And ");
#line 211
 testRunner.Then("Q \"How many bedrooms does the villa you\'re selling have?\" should be displayed for" +
                    " Bedrooms selection options", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Bedrooms027_Verify the Question for Bedroom selection for a Villa Propert" +
            "y Type with Listing Category as Rent.")]
        public virtual void PropReg_Bedrooms027_VerifyTheQuestionForBedroomSelectionForAVillaPropertyTypeWithListingCategoryAsRent_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Bedrooms027_Verify the Question for Bedroom selection for a Villa Propert" +
                    "y Type with Listing Category as Rent.", ((string[])(null)));
#line 213
 this.ScenarioSetup(scenarioInfo);
#line 214
 testRunner.Given("I am on Property Reg Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType"});
            table27.AddRow(new string[] {
                        "Rent",
                        "Villa"});
#line 215
  testRunner.And("I navigate to Bedroom selection after entering details", ((string)(null)), table27, "And ");
#line 218
 testRunner.Then("Q \"How many bedrooms does the villa you\'re renting have?\" should be displayed for" +
                    " Bedrooms selection options", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
