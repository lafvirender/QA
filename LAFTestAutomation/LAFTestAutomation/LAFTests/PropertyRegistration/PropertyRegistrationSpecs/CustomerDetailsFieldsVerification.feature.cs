// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace LAFTests.PropertyRegistration.PropertyRegistrationSpecs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("CustomerDetailsFieldsVerification")]
    public partial class CustomerDetailsFieldsVerificationFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CustomerDetailsFieldsVerification.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "CustomerDetailsFieldsVerification", "\tIn order to register property for Sell or Rent\r\n\tAs a User\r\n\tI want to be able t" +
                    "o proceed after selecting valid values in Customer Details.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_CustomerDetails001_Verify that link for Moving Forward should be disabled" +
            " by default")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        public virtual void PropReg_CustomerDetails001_VerifyThatLinkForMovingForwardShouldBeDisabledByDefault()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_CustomerDetails001_Verify that link for Moving Forward should be disabled" +
                    " by default", new string[] {
                        "mytag"});
#line 7
 this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("I am on Property_Listing Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue",
                        "UnitAppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode",
                        "Leased",
                        "LeasingDetails",
                        "AgentQuality",
                        "SpecificAgency",
                        "SpecificAgenciesDetails",
                        "ContactedAgency",
                        "ContactedAgenciesDetails",
                        "Urgency"});
            table1.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK",
                        "Unit 2",
                        "myStreet1",
                        "Harlem St",
                        "Inglewood",
                        "NSW",
                        "3137",
                        "MyHome",
                        "",
                        "AbilityToGetBestOutcome",
                        "No",
                        "",
                        "No",
                        "",
                        "Immediately"});
#line 9
 testRunner.And("I navigate to Customer Details section after entering details", ((string)(null)), table1, "And ");
#line 12
 testRunner.Then("Forward Link is not enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_CustomerDetails002_Verify that Progress line indicates selection of Conta" +
            "cted Agencies.")]
        public virtual void PropReg_CustomerDetails002_VerifyThatProgressLineIndicatesSelectionOfContactedAgencies_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_CustomerDetails002_Verify that Progress line indicates selection of Conta" +
                    "cted Agencies.", ((string[])(null)));
#line 14
 this.ScenarioSetup(scenarioInfo);
#line 15
 testRunner.Given("I am on Property_Listing Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue",
                        "UnitAppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode",
                        "Leased",
                        "LeasingDetails",
                        "AgentQuality",
                        "SpecificAgency",
                        "SpecificAgenciesDetails",
                        "ContactedAgency",
                        "ContactedAgenciesDetails",
                        "Urgency"});
            table2.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK",
                        "Unit 2",
                        "myStreet1",
                        "Harlem St",
                        "Inglewood",
                        "NSW",
                        "3137",
                        "MyHome",
                        "",
                        "AbilityToGetBestOutcome",
                        "No",
                        "",
                        "No",
                        "",
                        "ZeroToThreeMonths"});
#line 16
 testRunner.And("I navigate to Customer Details section after entering details", ((string)(null)), table2, "And ");
#line 19
 testRunner.Then("Selection of Contacted Agencies is displayed in Progress section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_CustomerDetails003_Verify that under Progress section, \"You\" in the progr" +
            "ess section should be displayed as activated by default.")]
        public virtual void PropReg_CustomerDetails003_VerifyThatUnderProgressSectionYouInTheProgressSectionShouldBeDisplayedAsActivatedByDefault_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_CustomerDetails003_Verify that under Progress section, \"You\" in the progr" +
                    "ess section should be displayed as activated by default.", ((string[])(null)));
#line 21
 this.ScenarioSetup(scenarioInfo);
#line 22
 testRunner.Given("I am on Property_Listing Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue",
                        "UnitAppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode",
                        "Leased",
                        "LeasingDetails",
                        "AgentQuality",
                        "SpecificAgency",
                        "SpecificAgenciesDetails",
                        "ContactedAgency",
                        "ContactedAgenciesDetails",
                        "Urgency"});
            table3.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK",
                        "Unit 2",
                        "myStreet1",
                        "Harlem St",
                        "Inglewood",
                        "NSW",
                        "3137",
                        "MyHome",
                        "",
                        "LocalKnowledegeAndExpertise",
                        "No",
                        "",
                        "No",
                        "",
                        "ThreeToSixMonths"});
#line 23
 testRunner.And("I navigate to Customer Details section after entering details", ((string)(null)), table3, "And ");
#line 26
 testRunner.Then("You is the progress section is displayed as activated", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_CustomerDetails004_Verify that error is displayed for empty First Name fi" +
            "eld")]
        public virtual void PropReg_CustomerDetails004_VerifyThatErrorIsDisplayedForEmptyFirstNameField()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_CustomerDetails004_Verify that error is displayed for empty First Name fi" +
                    "eld", ((string[])(null)));
#line 28
 this.ScenarioSetup(scenarioInfo);
#line 29
 testRunner.Given("I am on Property_Listing Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue",
                        "UnitAppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode",
                        "Leased",
                        "LeasingDetails",
                        "AgentQuality",
                        "SpecificAgency",
                        "SpecificAgenciesDetails",
                        "ContactedAgency",
                        "ContactedAgenciesDetails",
                        "Urgency"});
            table4.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK",
                        "Unit 2",
                        "myStreet1",
                        "Harlem St",
                        "Inglewood",
                        "NSW",
                        "3137",
                        "MyHome",
                        "",
                        "PatienceAndUnderstanding",
                        "No",
                        "",
                        "No",
                        "",
                        "SixPlusMonths"});
#line 30
 testRunner.And("I navigate to Customer Details section after entering details", ((string)(null)), table4, "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "FirstName",
                        "LastName",
                        "Email",
                        "Mobile"});
            table5.AddRow(new string[] {
                        "",
                        "Last",
                        "a@b.com",
                        "0412213456"});
#line 33
 testRunner.When("Enter values in Customer Details Fields as", ((string)(null)), table5, "When ");
#line 36
 testRunner.Then("Error is displayed for empty First Name field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_CustomerDetails005_Verify that error is displayed for empty Last Name fie" +
            "ld")]
        public virtual void PropReg_CustomerDetails005_VerifyThatErrorIsDisplayedForEmptyLastNameField()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_CustomerDetails005_Verify that error is displayed for empty Last Name fie" +
                    "ld", ((string[])(null)));
#line 38
 this.ScenarioSetup(scenarioInfo);
#line 39
 testRunner.Given("I am on Property_Listing Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue",
                        "UnitAppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode",
                        "Leased",
                        "LeasingDetails",
                        "AgentQuality",
                        "SpecificAgency",
                        "SpecificAgenciesDetails",
                        "ContactedAgency",
                        "ContactedAgenciesDetails",
                        "Urgency"});
            table6.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK",
                        "Unit 2",
                        "myStreet1",
                        "Harlem St",
                        "Inglewood",
                        "NSW",
                        "3137",
                        "MyHome",
                        "",
                        "TrustworthinessAndReliability",
                        "No",
                        "",
                        "No",
                        "",
                        "ThreeToSixMonths"});
#line 40
 testRunner.And("I navigate to Customer Details section after entering details", ((string)(null)), table6, "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "FirstName",
                        "LastName",
                        "Email",
                        "Mobile"});
            table7.AddRow(new string[] {
                        "First",
                        "",
                        "a@b.com",
                        "0412213456"});
#line 43
 testRunner.When("Enter values in Customer Details Fields as", ((string)(null)), table7, "When ");
#line 46
 testRunner.Then("Error is displayed for empty Last Name field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_CustomerDetails006_Verify that error is displayed for empty Email field")]
        public virtual void PropReg_CustomerDetails006_VerifyThatErrorIsDisplayedForEmptyEmailField()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_CustomerDetails006_Verify that error is displayed for empty Email field", ((string[])(null)));
#line 48
 this.ScenarioSetup(scenarioInfo);
#line 49
 testRunner.Given("I am on Property_Listing Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue",
                        "UnitAppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode",
                        "Leased",
                        "LeasingDetails",
                        "AgentQuality",
                        "SpecificAgency",
                        "SpecificAgenciesDetails",
                        "ContactedAgency",
                        "ContactedAgenciesDetails",
                        "Urgency"});
            table8.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK",
                        "Unit 2",
                        "myStreet1",
                        "Harlem St",
                        "Inglewood",
                        "NSW",
                        "3137",
                        "MyHome",
                        "",
                        "TrustworthinessAndReliability",
                        "No",
                        "",
                        "No",
                        "",
                        "ThreeToSixMonths"});
#line 50
 testRunner.And("I navigate to Customer Details section after entering details", ((string)(null)), table8, "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "FirstName",
                        "LastName",
                        "Email",
                        "Mobile"});
            table9.AddRow(new string[] {
                        "First",
                        "Last",
                        "",
                        "0412213456"});
#line 53
 testRunner.When("Enter values in Customer Details Fields as", ((string)(null)), table9, "When ");
#line 56
 testRunner.Then("Error is displayed for empty Email field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_CustomerDetails007_Verify that error is displayed for empty Mobile Number" +
            " field")]
        public virtual void PropReg_CustomerDetails007_VerifyThatErrorIsDisplayedForEmptyMobileNumberField()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_CustomerDetails007_Verify that error is displayed for empty Mobile Number" +
                    " field", ((string[])(null)));
#line 58
 this.ScenarioSetup(scenarioInfo);
#line 59
 testRunner.Given("I am on Property_Listing Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue",
                        "UnitAppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode",
                        "Leased",
                        "LeasingDetails",
                        "AgentQuality",
                        "SpecificAgency",
                        "SpecificAgenciesDetails",
                        "ContactedAgency",
                        "ContactedAgenciesDetails",
                        "Urgency"});
            table10.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK",
                        "Unit 2",
                        "myStreet1",
                        "Harlem St",
                        "Inglewood",
                        "NSW",
                        "3137",
                        "MyHome",
                        "",
                        "TrustworthinessAndReliability",
                        "No",
                        "",
                        "No",
                        "",
                        "ThreeToSixMonths"});
#line 60
 testRunner.And("I navigate to Customer Details section after entering details", ((string)(null)), table10, "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "FirstName",
                        "LastName",
                        "Email",
                        "Mobile"});
            table11.AddRow(new string[] {
                        "First",
                        "Last",
                        "a@b.com",
                        ""});
#line 63
 testRunner.When("Enter values in Customer Details Fields as", ((string)(null)), table11, "When ");
#line 66
 testRunner.Then("Error is displayed for empty Mobile Number field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_CustomerDetails008_Verify that message \"Are you serious about selling?\" i" +
            "s displayed after submitting the customer details who is selling property.")]
        public virtual void PropReg_CustomerDetails008_VerifyThatMessageAreYouSeriousAboutSellingIsDisplayedAfterSubmittingTheCustomerDetailsWhoIsSellingProperty_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_CustomerDetails008_Verify that message \"Are you serious about selling?\" i" +
                    "s displayed after submitting the customer details who is selling property.", ((string[])(null)));
#line 68
 this.ScenarioSetup(scenarioInfo);
#line 69
 testRunner.Given("I am on Property_Listing Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue",
                        "UnitAppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode",
                        "Leased",
                        "LeasingDetails",
                        "AgentQuality",
                        "SpecificAgency",
                        "SpecificAgencyDetails",
                        "ContactedAgency",
                        "ContactedAgenciesDetails",
                        "Urgency",
                        "FirstName",
                        "LastName",
                        "Email",
                        "Phone"});
            table12.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK",
                        "Unit 1",
                        "myStreet",
                        "Notlen St",
                        "Ringwood",
                        "VIC",
                        "3134",
                        "MyHome",
                        "",
                        "TrustworthinessAndReliability",
                        "No",
                        "",
                        "No",
                        "",
                        "ThreeToSixMonths",
                        "First",
                        "Last",
                        "a@b.com",
                        "0412213456"});
#line 70
 testRunner.And("I navigate to Direct Connect section after entering details", ((string)(null)), table12, "And ");
#line 73
 testRunner.Then("Message \"Are you serious about selling?\" is displayed after submitting the custom" +
                    "er details who is selling property", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_CustomerDetails009_Verify that message \"Are you serious about renting?\" i" +
            "s displayed after submitting the customer details who is renting property.")]
        public virtual void PropReg_CustomerDetails009_VerifyThatMessageAreYouSeriousAboutRentingIsDisplayedAfterSubmittingTheCustomerDetailsWhoIsRentingProperty_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_CustomerDetails009_Verify that message \"Are you serious about renting?\" i" +
                    "s displayed after submitting the customer details who is renting property.", ((string[])(null)));
#line 75
 this.ScenarioSetup(scenarioInfo);
#line 76
 testRunner.Given("I am on Property_Listing Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue",
                        "UnitAppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode",
                        "Leased",
                        "LeasingDetails",
                        "AgentQuality",
                        "SpecificAgency",
                        "SpecificAgencyDetails",
                        "ContactedAgency",
                        "ContactedAgenciesDetails",
                        "Urgency",
                        "FirstName",
                        "LastName",
                        "Email",
                        "Phone"});
            table13.AddRow(new string[] {
                        "Rent",
                        "House",
                        "One",
                        "LessThanTwoHundered",
                        "Unit 1",
                        "myStreet",
                        "Notlen St",
                        "Ringwood",
                        "VIC",
                        "3134",
                        "MyHome",
                        "",
                        "TrustworthinessAndReliability",
                        "No",
                        "",
                        "No",
                        "",
                        "ThreeToSixMonths",
                        "First",
                        "Last",
                        "a@b.com",
                        "0412213456"});
#line 77
 testRunner.And("I navigate to Direct Connect section after entering details", ((string)(null)), table13, "And ");
#line 80
 testRunner.Then("Message \"Are you serious about renting?\" is displayed after submitting the custom" +
                    "er details who is renting property", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_CustomerDetails010_Verify that field for entering Direct Connect Details " +
            "is not displayed on selecting No option.")]
        public virtual void PropReg_CustomerDetails010_VerifyThatFieldForEnteringDirectConnectDetailsIsNotDisplayedOnSelectingNoOption_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_CustomerDetails010_Verify that field for entering Direct Connect Details " +
                    "is not displayed on selecting No option.", ((string[])(null)));
#line 82
 this.ScenarioSetup(scenarioInfo);
#line 83
 testRunner.Given("I am on Property_Listing Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue",
                        "UnitAppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode",
                        "Leased",
                        "LeasingDetails",
                        "AgentQuality",
                        "SpecificAgency",
                        "SpecificAgencyDetails",
                        "ContactedAgency",
                        "ContactedAgenciesDetails",
                        "Urgency",
                        "FirstName",
                        "LastName",
                        "Email",
                        "Phone"});
            table14.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK",
                        "Unit 1",
                        "myStreet",
                        "Notlen St",
                        "Ringwood",
                        "VIC",
                        "3134",
                        "MyHome",
                        "",
                        "TrustworthinessAndReliability",
                        "No",
                        "",
                        "No",
                        "",
                        "ThreeToSixMonths",
                        "First",
                        "Last",
                        "a@b.com",
                        "0412213456"});
#line 84
 testRunner.And("I navigate to Direct Connect section after entering details", ((string)(null)), table14, "And ");
#line 87
 testRunner.And("I select option No for Direct Connect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 88
 testRunner.Then("Field for entering Direct Connect Details is not displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_CustomerDetails011_Verify that field for entering Direct Connect Details " +
            "is displayed on selecting Yes option.")]
        public virtual void PropReg_CustomerDetails011_VerifyThatFieldForEnteringDirectConnectDetailsIsDisplayedOnSelectingYesOption_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_CustomerDetails011_Verify that field for entering Direct Connect Details " +
                    "is displayed on selecting Yes option.", ((string[])(null)));
#line 90
 this.ScenarioSetup(scenarioInfo);
#line 91
 testRunner.Given("I am on Property_Listing Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue",
                        "UnitAppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode",
                        "Leased",
                        "LeasingDetails",
                        "AgentQuality",
                        "SpecificAgency",
                        "SpecificAgencyDetails",
                        "ContactedAgency",
                        "ContactedAgenciesDetails",
                        "Urgency",
                        "FirstName",
                        "LastName",
                        "Email",
                        "Phone"});
            table15.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK",
                        "Unit 1",
                        "myStreet",
                        "Notlen St",
                        "Ringwood",
                        "VIC",
                        "3134",
                        "MyHome",
                        "",
                        "TrustworthinessAndReliability",
                        "No",
                        "",
                        "No",
                        "",
                        "ThreeToSixMonths",
                        "First",
                        "Last",
                        "a@b.com",
                        "0412213456"});
#line 92
 testRunner.And("I navigate to Direct Connect section after entering details", ((string)(null)), table15, "And ");
#line 95
 testRunner.And("I select option Yes for Direct Connect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 96
 testRunner.Then("Field for entering Direct Connect Details is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
