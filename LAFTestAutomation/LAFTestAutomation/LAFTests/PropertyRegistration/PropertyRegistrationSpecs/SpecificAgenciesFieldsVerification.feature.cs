// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace LAFTests.PropertyRegistration.PropertyRegistrationSpecs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("SpecificAgenciesFieldsVerification")]
    public partial class SpecificAgenciesFieldsVerificationFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "SpecificAgenciesFieldsVerification.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "SpecificAgenciesFieldsVerification", "\tIn order to register property for Sell or Rent\r\n\tAs a User\r\n\tI want to be able t" +
                    "o proceed after selecting valid values in Specific Agencies details.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_SpecificAgencies001_Verify the Question for Specific Agencies")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        public virtual void PropReg_SpecificAgencies001_VerifyTheQuestionForSpecificAgencies()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_SpecificAgencies001_Verify the Question for Specific Agencies", new string[] {
                        "mytag"});
#line 7
 this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("I am on Property_reg Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue",
                        "UnitAppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode",
                        "Leased",
                        "LeasingDetails",
                        "AgentQuality"});
            table1.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK",
                        "Unit 2",
                        "myStreet1",
                        "Harlem St",
                        "Inglewood",
                        "NSW",
                        "3137",
                        "MyHome",
                        "",
                        "AbilityToGetBestOutcome"});
#line 9
 testRunner.And("I navigate to Specific Agencies section after entering details", ((string)(null)), table1, "And ");
#line 12
 testRunner.Then("Q \"Are there any agencies you\'re considering that you\'d like included in your com" +
                    "parison?\" should be displayed for Specific Agencies", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_SpecificAgencies002_Verify that link for Moving Forward should be disable" +
            "d by default")]
        public virtual void PropReg_SpecificAgencies002_VerifyThatLinkForMovingForwardShouldBeDisabledByDefault()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_SpecificAgencies002_Verify that link for Moving Forward should be disable" +
                    "d by default", ((string[])(null)));
#line 14
 this.ScenarioSetup(scenarioInfo);
#line 15
 testRunner.Given("I am on Property_reg Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue",
                        "UnitAppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode",
                        "Leased",
                        "LeasingDetails",
                        "AgentQuality"});
            table2.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK",
                        "Unit 2",
                        "myStreet1",
                        "Harlem St",
                        "Inglewood",
                        "NSW",
                        "3137",
                        "MyHome",
                        "",
                        "AbilityToGetBestOutcome"});
#line 16
 testRunner.And("I navigate to Specific Agencies section after entering details", ((string)(null)), table2, "And ");
#line 19
 testRunner.Then("Moving Forward should not be enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_SpecificAgencies003_Verify that Agent Circle in the Progress section shou" +
            "ld be displayed as Filled.")]
        public virtual void PropReg_SpecificAgencies003_VerifyThatAgentCircleInTheProgressSectionShouldBeDisplayedAsFilled_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_SpecificAgencies003_Verify that Agent Circle in the Progress section shou" +
                    "ld be displayed as Filled.", ((string[])(null)));
#line 21
 this.ScenarioSetup(scenarioInfo);
#line 22
 testRunner.Given("I am on Property_reg Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue",
                        "UnitAppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode",
                        "Leased",
                        "LeasingDetails",
                        "AgentQuality"});
            table3.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK",
                        "Unit 2",
                        "myStreet1",
                        "Harlem St",
                        "Inglewood",
                        "NSW",
                        "3137",
                        "MyHome",
                        "",
                        "AbilityToGetBestOutcome"});
#line 23
 testRunner.And("I navigate to Specific Agencies section after entering details", ((string)(null)), table3, "And ");
#line 26
 testRunner.Then("Agent Circle in the Progress is displayed as Filled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_SpecificAgencies004_Verify that option \"YES\" should be available for Spec" +
            "ific Agencies.")]
        public virtual void PropReg_SpecificAgencies004_VerifyThatOptionYESShouldBeAvailableForSpecificAgencies_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_SpecificAgencies004_Verify that option \"YES\" should be available for Spec" +
                    "ific Agencies.", ((string[])(null)));
#line 28
 this.ScenarioSetup(scenarioInfo);
#line 29
 testRunner.Given("I am on Property_reg Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue",
                        "UnitAppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode",
                        "Leased",
                        "LeasingDetails",
                        "AgentQuality"});
            table4.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK",
                        "Unit 2",
                        "myStreet1",
                        "Harlem St",
                        "Inglewood",
                        "NSW",
                        "3137",
                        "MyHome",
                        "",
                        "AbilityToGetBestOutcome"});
#line 30
 testRunner.And("I navigate to Specific Agencies section after entering details", ((string)(null)), table4, "And ");
#line 33
 testRunner.Then("Option Yes  with text \"YES\" should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_SpecificAgencies005_Verify that option \"NO\" should be available for Speci" +
            "fic Agencies.")]
        public virtual void PropReg_SpecificAgencies005_VerifyThatOptionNOShouldBeAvailableForSpecificAgencies_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_SpecificAgencies005_Verify that option \"NO\" should be available for Speci" +
                    "fic Agencies.", ((string[])(null)));
#line 35
 this.ScenarioSetup(scenarioInfo);
#line 36
 testRunner.Given("I am on Property_reg Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue",
                        "UnitAppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode",
                        "Leased",
                        "LeasingDetails",
                        "AgentQuality"});
            table5.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK",
                        "Unit 2",
                        "myStreet1",
                        "Harlem St",
                        "Inglewood",
                        "NSW",
                        "3137",
                        "MyHome",
                        "",
                        "AbilityToGetBestOutcome"});
#line 37
 testRunner.And("I navigate to Specific Agencies section after entering details", ((string)(null)), table5, "And ");
#line 40
 testRunner.Then("Option No  with text \"NO\" should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_SpecificAgencies006_Verify that Contacted Agencies question should be dis" +
            "played when user selects \"NO\" for Specific Agencies")]
        public virtual void PropReg_SpecificAgencies006_VerifyThatContactedAgenciesQuestionShouldBeDisplayedWhenUserSelectsNOForSpecificAgencies()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_SpecificAgencies006_Verify that Contacted Agencies question should be dis" +
                    "played when user selects \"NO\" for Specific Agencies", ((string[])(null)));
#line 42
 this.ScenarioSetup(scenarioInfo);
#line 43
 testRunner.Given("I am on Property_reg Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue",
                        "UnitAppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode",
                        "Leased",
                        "LeasingDetails",
                        "AgentQuality"});
            table6.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK",
                        "Unit 2",
                        "myStreet1",
                        "Harlem St",
                        "Inglewood",
                        "NSW",
                        "3137",
                        "MyHome",
                        "",
                        "AbilityToGetBestOutcome"});
#line 44
 testRunner.And("I navigate to Specific Agencies section after entering details", ((string)(null)), table6, "And ");
#line 47
 testRunner.When("I Select option as \"No\" for Specific Agencies", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 48
 testRunner.Then("Contacted Agencies question should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_SpecificAgencies007_Verify that field for entering Specific Agencies Deta" +
            "ils should be available when option Yes is selected")]
        public virtual void PropReg_SpecificAgencies007_VerifyThatFieldForEnteringSpecificAgenciesDetailsShouldBeAvailableWhenOptionYesIsSelected()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_SpecificAgencies007_Verify that field for entering Specific Agencies Deta" +
                    "ils should be available when option Yes is selected", ((string[])(null)));
#line 50
 this.ScenarioSetup(scenarioInfo);
#line 51
 testRunner.Given("I am on Property_reg Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue",
                        "UnitAppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode",
                        "Leased",
                        "LeasingDetails",
                        "AgentQuality"});
            table7.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK",
                        "Unit 2",
                        "myStreet1",
                        "Harlem St",
                        "Inglewood",
                        "NSW",
                        "3137",
                        "MyHome",
                        "",
                        "AbilityToGetBestOutcome"});
#line 52
 testRunner.And("I navigate to Specific Agencies section after entering details", ((string)(null)), table7, "And ");
#line 55
 testRunner.When("I Click Option YES for Specific Agencies Details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 56
 testRunner.Then("Field for entering Specific Agencies Details should be available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_SpecificAgencies008_Verify that error is displayed for empty Specific Age" +
            "ncies Details field")]
        public virtual void PropReg_SpecificAgencies008_VerifyThatErrorIsDisplayedForEmptySpecificAgenciesDetailsField()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_SpecificAgencies008_Verify that error is displayed for empty Specific Age" +
                    "ncies Details field", ((string[])(null)));
#line 58
 this.ScenarioSetup(scenarioInfo);
#line 59
 testRunner.Given("I am on Property_reg Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue",
                        "UnitAppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode",
                        "Leased",
                        "LeasingDetails",
                        "AgentQuality"});
            table8.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK",
                        "Unit 2",
                        "myStreet1",
                        "Harlem St",
                        "Inglewood",
                        "NSW",
                        "3137",
                        "MyHome",
                        "",
                        "AbilityToGetBestOutcome"});
#line 60
 testRunner.And("I navigate to Specific Agencies section after entering details", ((string)(null)), table8, "And ");
#line 63
 testRunner.When("I Click Option YES for Specific Agencies Details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 64
 testRunner.And("I Click Next without entering Specific Agencies Details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 65
 testRunner.Then("Error is displayed for empty Specific Agencies Details field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
