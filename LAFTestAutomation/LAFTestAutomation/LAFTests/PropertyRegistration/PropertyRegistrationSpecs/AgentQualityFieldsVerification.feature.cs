// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace LAFTests.PropertyRegistration.PropertyRegistrationSpecs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("AgentQualityFieldsVerification")]
    public partial class AgentQualityFieldsVerificationFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "AgentQualityFieldsVerification.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "AgentQualityFieldsVerification", "\tIn order to register property for Sell or Rent\r\n\tAs a User\r\n\tI want to be able t" +
                    "o proceed after selecting valid option for Agent Quality", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_AgentQuality001_Verify the Question for Agent Quality")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        public virtual void PropReg_AgentQuality001_VerifyTheQuestionForAgentQuality()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_AgentQuality001_Verify the Question for Agent Quality", new string[] {
                        "mytag"});
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("I am on Prop_Reg_Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue",
                        "UnitAppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode",
                        "Leased",
                        "LeasingDetails"});
            table1.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK",
                        "Unit 2",
                        "myStreet1",
                        "Harlem St",
                        "Inglewood",
                        "NSW",
                        "3137",
                        "MyHome",
                        ""});
#line 9
 testRunner.And("I navigate to Agent Quality selection section after entering details", ((string)(null)), table1, "And ");
#line 12
 testRunner.Then("Q \"What\'s most important to you in an agent?\" should be displayed for Agent Quali" +
                    "ty selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_AgentQuality002_Verify that option \"ABILITY TO GET THE BEST OUTCOME\" shou" +
            "ld be available")]
        public virtual void PropReg_AgentQuality002_VerifyThatOptionABILITYTOGETTHEBESTOUTCOMEShouldBeAvailable()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_AgentQuality002_Verify that option \"ABILITY TO GET THE BEST OUTCOME\" shou" +
                    "ld be available", ((string[])(null)));
#line 14
this.ScenarioSetup(scenarioInfo);
#line 15
 testRunner.Given("I am on Prop_Reg_Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue",
                        "UnitAppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode",
                        "Leased",
                        "LeasingDetails"});
            table2.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK",
                        "Unit 2",
                        "myStreet1",
                        "Harlem St",
                        "Inglewood",
                        "NSW",
                        "3137",
                        "MyHome",
                        ""});
#line 16
 testRunner.And("I navigate to Agent Quality selection section after entering details", ((string)(null)), table2, "And ");
#line 19
 testRunner.Then("Option Ability to get the best outcome with text \"ABILITY TO GET THE BEST OUTCOME" +
                    "\" should be available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_AgentQuality003_Verify that option \"LOCAL KNOWLEDGE AND EXPERTISE\" should" +
            " be available")]
        public virtual void PropReg_AgentQuality003_VerifyThatOptionLOCALKNOWLEDGEANDEXPERTISEShouldBeAvailable()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_AgentQuality003_Verify that option \"LOCAL KNOWLEDGE AND EXPERTISE\" should" +
                    " be available", ((string[])(null)));
#line 21
this.ScenarioSetup(scenarioInfo);
#line 22
 testRunner.Given("I am on Prop_Reg_Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue",
                        "UnitAppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode",
                        "Leased",
                        "LeasingDetails"});
            table3.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK",
                        "Unit 2",
                        "myStreet1",
                        "Harlem St",
                        "Inglewood",
                        "NSW",
                        "3137",
                        "MyHome",
                        ""});
#line 23
 testRunner.And("I navigate to Agent Quality selection section after entering details", ((string)(null)), table3, "And ");
#line 26
 testRunner.Then("Option Local knowledge and expertise with text \"LOCAL KNOWLEDGE AND EXPERTISE\" sh" +
                    "ould be available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_AgentQuality004_Verify that option \"TRUSTWORTHINESS AND RELIABILITY\" shou" +
            "ld be available")]
        public virtual void PropReg_AgentQuality004_VerifyThatOptionTRUSTWORTHINESSANDRELIABILITYShouldBeAvailable()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_AgentQuality004_Verify that option \"TRUSTWORTHINESS AND RELIABILITY\" shou" +
                    "ld be available", ((string[])(null)));
#line 28
this.ScenarioSetup(scenarioInfo);
#line 29
 testRunner.Given("I am on Prop_Reg_Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue",
                        "UnitAppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode",
                        "Leased",
                        "LeasingDetails"});
            table4.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK",
                        "Unit 2",
                        "myStreet1",
                        "Harlem St",
                        "Inglewood",
                        "NSW",
                        "3137",
                        "MyHome",
                        ""});
#line 30
 testRunner.And("I navigate to Agent Quality selection section after entering details", ((string)(null)), table4, "And ");
#line 33
 testRunner.Then("Option Trustworthiness and reliability with text \"TRUSTWORTHINESS AND RELIABILITY" +
                    "\" should be available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_AgentQuality005_Verify that option \"PATIENCE AND UNDERSTANDING\" should be" +
            " available")]
        public virtual void PropReg_AgentQuality005_VerifyThatOptionPATIENCEANDUNDERSTANDINGShouldBeAvailable()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_AgentQuality005_Verify that option \"PATIENCE AND UNDERSTANDING\" should be" +
                    " available", ((string[])(null)));
#line 35
this.ScenarioSetup(scenarioInfo);
#line 36
 testRunner.Given("I am on Prop_Reg_Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue",
                        "UnitAppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode",
                        "Leased",
                        "LeasingDetails"});
            table5.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK",
                        "Unit 2",
                        "myStreet1",
                        "Harlem St",
                        "Inglewood",
                        "NSW",
                        "3137",
                        "MyHome",
                        ""});
#line 37
 testRunner.And("I navigate to Agent Quality selection section after entering details", ((string)(null)), table5, "And ");
#line 40
 testRunner.Then("Option Patience and understanding with text \"PATIENCE AND UNDERSTANDING\" should b" +
                    "e available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_AgentQuality006_Verify that link for Moving Forward should be disabled by" +
            " default")]
        public virtual void PropReg_AgentQuality006_VerifyThatLinkForMovingForwardShouldBeDisabledByDefault()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_AgentQuality006_Verify that link for Moving Forward should be disabled by" +
                    " default", ((string[])(null)));
#line 42
this.ScenarioSetup(scenarioInfo);
#line 43
 testRunner.Given("I am on Prop_Reg_Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue",
                        "UnitAppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode",
                        "Leased",
                        "LeasingDetails"});
            table6.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK",
                        "Unit 2",
                        "myStreet1",
                        "Harlem St",
                        "Inglewood",
                        "NSW",
                        "3137",
                        "MyHome",
                        ""});
#line 44
 testRunner.And("I navigate to Agent Quality selection section after entering details", ((string)(null)), table6, "And ");
#line 47
 testRunner.Then("Moving Forward Link is displayed disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_AgentQuality007_Verify that Specific Agencies question should be displaye" +
            "d when user selects \"ABILITY TO GET THE BEST OUTCOME\" option")]
        public virtual void PropReg_AgentQuality007_VerifyThatSpecificAgenciesQuestionShouldBeDisplayedWhenUserSelectsABILITYTOGETTHEBESTOUTCOMEOption()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_AgentQuality007_Verify that Specific Agencies question should be displaye" +
                    "d when user selects \"ABILITY TO GET THE BEST OUTCOME\" option", ((string[])(null)));
#line 49
 this.ScenarioSetup(scenarioInfo);
#line 50
 testRunner.Given("I am on Prop_Reg_Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue",
                        "UnitAppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode",
                        "Leased",
                        "LeasingDetails"});
            table7.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK",
                        "Unit 2",
                        "myStreet1",
                        "Harlem St",
                        "Inglewood",
                        "NSW",
                        "3137",
                        "MyHome",
                        ""});
#line 51
 testRunner.And("I navigate to Agent Quality selection section after entering details", ((string)(null)), table7, "And ");
#line 54
 testRunner.When("I Select agent quality option as \"AbilityToGetBestOutcome\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 55
 testRunner.Then("Specific Agencies question is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_AgentQuality008_Verify that Specific Agencies question should be displaye" +
            "d when user selects \"TRUSTWORTHINESS AND RELIABILITY\" option")]
        public virtual void PropReg_AgentQuality008_VerifyThatSpecificAgenciesQuestionShouldBeDisplayedWhenUserSelectsTRUSTWORTHINESSANDRELIABILITYOption()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_AgentQuality008_Verify that Specific Agencies question should be displaye" +
                    "d when user selects \"TRUSTWORTHINESS AND RELIABILITY\" option", ((string[])(null)));
#line 57
 this.ScenarioSetup(scenarioInfo);
#line 58
 testRunner.Given("I am on Prop_Reg_Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue",
                        "UnitAppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode",
                        "Leased",
                        "LeasingDetails"});
            table8.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK",
                        "Unit 2",
                        "myStreet1",
                        "Harlem St",
                        "Inglewood",
                        "NSW",
                        "3137",
                        "MyHome",
                        ""});
#line 59
 testRunner.And("I navigate to Agent Quality selection section after entering details", ((string)(null)), table8, "And ");
#line 62
 testRunner.When("I Select agent quality option as \"LocalKnowledegeAndExpertise\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 63
 testRunner.Then("Specific Agencies question is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_AgentQuality009_Verify that Specific Agencies question should be displaye" +
            "d when user selects \"LOCAL KNOWLEDGE AND EXPERTISE\" option")]
        public virtual void PropReg_AgentQuality009_VerifyThatSpecificAgenciesQuestionShouldBeDisplayedWhenUserSelectsLOCALKNOWLEDGEANDEXPERTISEOption()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_AgentQuality009_Verify that Specific Agencies question should be displaye" +
                    "d when user selects \"LOCAL KNOWLEDGE AND EXPERTISE\" option", ((string[])(null)));
#line 65
 this.ScenarioSetup(scenarioInfo);
#line 66
 testRunner.Given("I am on Prop_Reg_Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue",
                        "UnitAppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode",
                        "Leased",
                        "LeasingDetails"});
            table9.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK",
                        "Unit 2",
                        "myStreet1",
                        "Harlem St",
                        "Inglewood",
                        "NSW",
                        "3137",
                        "MyHome",
                        ""});
#line 67
 testRunner.And("I navigate to Agent Quality selection section after entering details", ((string)(null)), table9, "And ");
#line 70
 testRunner.When("I Select agent quality option as \"TrustworthinessAndReliability\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 71
 testRunner.Then("Specific Agencies question is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_AgentQuality010_Verify that Specific Agencies question should be displaye" +
            "d when user selects \"PATIENCE AND UNDERSTANDING\" option")]
        public virtual void PropReg_AgentQuality010_VerifyThatSpecificAgenciesQuestionShouldBeDisplayedWhenUserSelectsPATIENCEANDUNDERSTANDINGOption()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_AgentQuality010_Verify that Specific Agencies question should be displaye" +
                    "d when user selects \"PATIENCE AND UNDERSTANDING\" option", ((string[])(null)));
#line 73
 this.ScenarioSetup(scenarioInfo);
#line 74
 testRunner.Given("I am on Prop_Reg_Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue",
                        "UnitAppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode",
                        "Leased",
                        "LeasingDetails"});
            table10.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK",
                        "Unit 2",
                        "myStreet1",
                        "Harlem St",
                        "Inglewood",
                        "NSW",
                        "3137",
                        "MyHome",
                        ""});
#line 75
 testRunner.And("I navigate to Agent Quality selection section after entering details", ((string)(null)), table10, "And ");
#line 78
 testRunner.When("I Select agent quality option as \"PatienceAndUnderstanding\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 79
 testRunner.Then("Specific Agencies question is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_AgentQuality011_Verify the color of option AbilityToGetBestOutcome when i" +
            "t is not selected")]
        public virtual void PropReg_AgentQuality011_VerifyTheColorOfOptionAbilityToGetBestOutcomeWhenItIsNotSelected()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_AgentQuality011_Verify the color of option AbilityToGetBestOutcome when i" +
                    "t is not selected", ((string[])(null)));
#line 81
 this.ScenarioSetup(scenarioInfo);
#line 82
 testRunner.Given("I am on Prop_Reg_Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue",
                        "UnitAppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode",
                        "Leased",
                        "LeasingDetails"});
            table11.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK",
                        "Unit 2",
                        "myStreet1",
                        "Harlem St",
                        "Inglewood",
                        "NSW",
                        "3137",
                        "MyHome",
                        ""});
#line 83
 testRunner.And("I navigate to Agent Quality selection section after entering details", ((string)(null)), table11, "And ");
#line 86
 testRunner.Then("Color of the AbilityToGetBestOutcome option should be \"#00AEFF\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_AgentQuality012_Verify that color of the option AbilityToGetBestOutcome c" +
            "hanges on selection.")]
        public virtual void PropReg_AgentQuality012_VerifyThatColorOfTheOptionAbilityToGetBestOutcomeChangesOnSelection_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_AgentQuality012_Verify that color of the option AbilityToGetBestOutcome c" +
                    "hanges on selection.", ((string[])(null)));
#line 88
 this.ScenarioSetup(scenarioInfo);
#line 89
 testRunner.Given("I am on Prop_Reg_Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue",
                        "UnitAppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode",
                        "Leased",
                        "LeasingDetails"});
            table12.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK",
                        "Unit 2",
                        "myStreet1",
                        "Harlem St",
                        "Inglewood",
                        "NSW",
                        "3137",
                        "MyHome",
                        ""});
#line 90
 testRunner.And("I navigate to Agent Quality selection section after entering details", ((string)(null)), table12, "And ");
#line 93
 testRunner.When("I Select agent quality option as \"AbilityToGetBestOutcome\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 94
 testRunner.And("I move back to Agent Quality  Question", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 95
 testRunner.Then("Color of the AbilityToGetBestOutcome option should be \"#14B24B\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_AgentQuality013_Verify the color of option LocalKnowledegeAndExpertise wh" +
            "en it is not selected")]
        public virtual void PropReg_AgentQuality013_VerifyTheColorOfOptionLocalKnowledegeAndExpertiseWhenItIsNotSelected()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_AgentQuality013_Verify the color of option LocalKnowledegeAndExpertise wh" +
                    "en it is not selected", ((string[])(null)));
#line 97
 this.ScenarioSetup(scenarioInfo);
#line 98
 testRunner.Given("I am on Prop_Reg_Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue",
                        "UnitAppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode",
                        "Leased",
                        "LeasingDetails"});
            table13.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK",
                        "Unit 2",
                        "myStreet1",
                        "Harlem St",
                        "Inglewood",
                        "NSW",
                        "3137",
                        "MyHome",
                        ""});
#line 99
 testRunner.And("I navigate to Agent Quality selection section after entering details", ((string)(null)), table13, "And ");
#line 102
 testRunner.Then("Color of the LocalKnowledegeAndExpertise option should be \"#00AEFF\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_AgentQuality014_Verify that color of the option LocalKnowledegeAndExperti" +
            "se changes on selection.")]
        public virtual void PropReg_AgentQuality014_VerifyThatColorOfTheOptionLocalKnowledegeAndExpertiseChangesOnSelection_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_AgentQuality014_Verify that color of the option LocalKnowledegeAndExperti" +
                    "se changes on selection.", ((string[])(null)));
#line 104
 this.ScenarioSetup(scenarioInfo);
#line 105
 testRunner.Given("I am on Prop_Reg_Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue",
                        "UnitAppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode",
                        "Leased",
                        "LeasingDetails"});
            table14.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK",
                        "Unit 2",
                        "myStreet1",
                        "Harlem St",
                        "Inglewood",
                        "NSW",
                        "3137",
                        "MyHome",
                        ""});
#line 106
 testRunner.And("I navigate to Agent Quality selection section after entering details", ((string)(null)), table14, "And ");
#line 109
 testRunner.When("I Select agent quality option as \"LocalKnowledegeAndExpertise\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 110
 testRunner.And("I move back to Agent Quality  Question", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 111
 testRunner.Then("Color of the LocalKnowledegeAndExpertise option should be \"#14B24B\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_AgentQuality015_Verify the color of option TrustworthinessAndReliability " +
            "when it is not selected")]
        public virtual void PropReg_AgentQuality015_VerifyTheColorOfOptionTrustworthinessAndReliabilityWhenItIsNotSelected()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_AgentQuality015_Verify the color of option TrustworthinessAndReliability " +
                    "when it is not selected", ((string[])(null)));
#line 113
 this.ScenarioSetup(scenarioInfo);
#line 114
 testRunner.Given("I am on Prop_Reg_Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue",
                        "UnitAppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode",
                        "Leased",
                        "LeasingDetails"});
            table15.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK",
                        "Unit 2",
                        "myStreet1",
                        "Harlem St",
                        "Inglewood",
                        "NSW",
                        "3137",
                        "MyHome",
                        ""});
#line 115
 testRunner.And("I navigate to Agent Quality selection section after entering details", ((string)(null)), table15, "And ");
#line 118
 testRunner.Then("Color of the TrustworthinessAndReliability option should be \"#00AEFF\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_AgentQuality016_Verify that color of the option TrustworthinessAndReliabi" +
            "lity changes on selection.")]
        public virtual void PropReg_AgentQuality016_VerifyThatColorOfTheOptionTrustworthinessAndReliabilityChangesOnSelection_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_AgentQuality016_Verify that color of the option TrustworthinessAndReliabi" +
                    "lity changes on selection.", ((string[])(null)));
#line 120
 this.ScenarioSetup(scenarioInfo);
#line 121
 testRunner.Given("I am on Prop_Reg_Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue",
                        "UnitAppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode",
                        "Leased",
                        "LeasingDetails"});
            table16.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK",
                        "Unit 2",
                        "myStreet1",
                        "Harlem St",
                        "Inglewood",
                        "NSW",
                        "3137",
                        "MyHome",
                        ""});
#line 122
 testRunner.And("I navigate to Agent Quality selection section after entering details", ((string)(null)), table16, "And ");
#line 125
 testRunner.When("I Select agent quality option as \"TrustworthinessAndReliability\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 126
 testRunner.And("I move back to Agent Quality  Question", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 127
 testRunner.Then("Color of the TrustworthinessAndReliability option should be \"#14B24B\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_AgentQuality017_Verify the color of option PatienceAndUnderstanding when " +
            "it is not selected")]
        public virtual void PropReg_AgentQuality017_VerifyTheColorOfOptionPatienceAndUnderstandingWhenItIsNotSelected()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_AgentQuality017_Verify the color of option PatienceAndUnderstanding when " +
                    "it is not selected", ((string[])(null)));
#line 129
 this.ScenarioSetup(scenarioInfo);
#line 130
 testRunner.Given("I am on Prop_Reg_Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue",
                        "UnitAppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode",
                        "Leased",
                        "LeasingDetails"});
            table17.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK",
                        "Unit 2",
                        "myStreet1",
                        "Harlem St",
                        "Inglewood",
                        "NSW",
                        "3137",
                        "MyHome",
                        ""});
#line 131
 testRunner.And("I navigate to Agent Quality selection section after entering details", ((string)(null)), table17, "And ");
#line 134
 testRunner.Then("Color of the PatienceAndUnderstanding option should be \"#00AEFF\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_AgentQuality018_Verify that color of the option PatienceAndUnderstanding " +
            "changes on selection.")]
        public virtual void PropReg_AgentQuality018_VerifyThatColorOfTheOptionPatienceAndUnderstandingChangesOnSelection_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_AgentQuality018_Verify that color of the option PatienceAndUnderstanding " +
                    "changes on selection.", ((string[])(null)));
#line 136
 this.ScenarioSetup(scenarioInfo);
#line 137
 testRunner.Given("I am on Prop_Reg_Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue",
                        "UnitAppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode",
                        "Leased",
                        "LeasingDetails"});
            table18.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK",
                        "Unit 2",
                        "myStreet1",
                        "Harlem St",
                        "Inglewood",
                        "NSW",
                        "3137",
                        "MyHome",
                        ""});
#line 138
 testRunner.And("I navigate to Agent Quality selection section after entering details", ((string)(null)), table18, "And ");
#line 141
 testRunner.When("I Select agent quality option as \"PatienceAndUnderstanding\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 142
 testRunner.And("I move back to Agent Quality  Question", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 143
 testRunner.Then("Color of the PatienceAndUnderstanding option should be \"#14B24B\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_AgentQuality019_Verify that link for Moving forward is displayed as enabl" +
            "ed when user moves back to Agent Quality selection from Specific Agencies select" +
            "ion")]
        public virtual void PropReg_AgentQuality019_VerifyThatLinkForMovingForwardIsDisplayedAsEnabledWhenUserMovesBackToAgentQualitySelectionFromSpecificAgenciesSelection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_AgentQuality019_Verify that link for Moving forward is displayed as enabl" +
                    "ed when user moves back to Agent Quality selection from Specific Agencies select" +
                    "ion", ((string[])(null)));
#line 145
 this.ScenarioSetup(scenarioInfo);
#line 146
 testRunner.Given("I am on Prop_Reg_Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue",
                        "UnitAppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode",
                        "Leased",
                        "LeasingDetails"});
            table19.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK",
                        "Unit 2",
                        "myStreet1",
                        "Harlem St",
                        "Inglewood",
                        "NSW",
                        "3137",
                        "MyHome",
                        ""});
#line 147
 testRunner.And("I navigate to Agent Quality selection section after entering details", ((string)(null)), table19, "And ");
#line 150
 testRunner.When("I Select agent quality option as \"PatienceAndUnderstanding\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 151
 testRunner.And("I move back to Agent Quality  Question", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 152
 testRunner.Then("Link for Moving forward is enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_AgentQuality020_Verify that Specific Agencies question is displayed on cl" +
            "icking Forward link")]
        public virtual void PropReg_AgentQuality020_VerifyThatSpecificAgenciesQuestionIsDisplayedOnClickingForwardLink()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_AgentQuality020_Verify that Specific Agencies question is displayed on cl" +
                    "icking Forward link", ((string[])(null)));
#line 154
 this.ScenarioSetup(scenarioInfo);
#line 155
 testRunner.Given("I am on Prop_Reg_Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue",
                        "UnitAppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode",
                        "Leased",
                        "LeasingDetails"});
            table20.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK",
                        "Unit 2",
                        "myStreet1",
                        "Harlem St",
                        "Inglewood",
                        "NSW",
                        "3137",
                        "MyHome",
                        ""});
#line 156
 testRunner.And("I navigate to Agent Quality selection section after entering details", ((string)(null)), table20, "And ");
#line 159
 testRunner.When("I Select agent quality option as \"PatienceAndUnderstanding\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 160
 testRunner.And("I move back to Agent Quality  Question", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 161
 testRunner.And("I click on Forward", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 162
 testRunner.Then("Specific Agencies question is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
