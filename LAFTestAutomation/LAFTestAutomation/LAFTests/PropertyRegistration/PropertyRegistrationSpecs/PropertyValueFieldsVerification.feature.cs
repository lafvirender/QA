// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace LAFTests.PropertyRegistration.PropertyRegistrationSpecs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("PropertyValueFieldsVerificationSteps")]
    public partial class PropertyValueFieldsVerificationStepsFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "PropertyValueFieldsVerification.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "PropertyValueFieldsVerificationSteps", "\tIn order to register property for Sell or Rent\r\n\tAs a User\r\n\tI want to be able t" +
                    "o proceed after selecting Property Value", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue001_Verify the Question for Property Value options on Registrati" +
            "on Page.")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        public virtual void PropReg_PropValue001_VerifyTheQuestionForPropertyValueOptionsOnRegistrationPage_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue001_Verify the Question for Property Value options on Registrati" +
                    "on Page.", new string[] {
                        "mytag"});
#line 7
 this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table1.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One"});
#line 9
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table1, "And ");
#line 12
 testRunner.Then("Q \"What is the approximate value of your property?\" should be displayed for Prope" +
                    "rty Value selection options", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue002_Verify that Progress line indicates selection of Bedrooms")]
        public virtual void PropReg_PropValue002_VerifyThatProgressLineIndicatesSelectionOfBedrooms()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue002_Verify that Progress line indicates selection of Bedrooms", ((string[])(null)));
#line 14
 this.ScenarioSetup(scenarioInfo);
#line 15
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table2.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One"});
#line 16
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table2, "And ");
#line 19
 testRunner.Then("Progress line shows the selection of Bedrooms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue003_Verify that link for Moving Forward should be disabled by de" +
            "fault")]
        public virtual void PropReg_PropValue003_VerifyThatLinkForMovingForwardShouldBeDisabledByDefault()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue003_Verify that link for Moving Forward should be disabled by de" +
                    "fault", ((string[])(null)));
#line 21
 this.ScenarioSetup(scenarioInfo);
#line 22
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table3.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One"});
#line 23
  testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table3, "And ");
#line 26
 testRunner.Then("Moving Forward Link is displayed as disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue004_Verify that Address question should be displayed when user s" +
            "elects \"Less Than $200K\" value.")]
        public virtual void PropReg_PropValue004_VerifyThatAddressQuestionShouldBeDisplayedWhenUserSelectsLessThan200KValue_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue004_Verify that Address question should be displayed when user s" +
                    "elects \"Less Than $200K\" value.", ((string[])(null)));
#line 28
 this.ScenarioSetup(scenarioInfo);
#line 29
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table4.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One"});
#line 30
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table4, "And ");
#line 33
 testRunner.When("I Select value as \"LessThanTwoHunderedK\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 34
 testRunner.Then("Address question should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue005_Verify that Progress line indicates selection of Property Va" +
            "lue")]
        public virtual void PropReg_PropValue005_VerifyThatProgressLineIndicatesSelectionOfPropertyValue()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue005_Verify that Progress line indicates selection of Property Va" +
                    "lue", ((string[])(null)));
#line 36
 this.ScenarioSetup(scenarioInfo);
#line 37
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table5.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One"});
#line 38
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table5, "And ");
#line 41
 testRunner.When("I Select value as \"LessThanTwoHunderedK\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 42
 testRunner.And("I move back to Property Value Selection from Address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
 testRunner.Then("Progress line shows the selection of Property Value", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue006_Verify that Address question should be displayed when user s" +
            "elects \"$200K To $400K\" value.")]
        public virtual void PropReg_PropValue006_VerifyThatAddressQuestionShouldBeDisplayedWhenUserSelects200KTo400KValue_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue006_Verify that Address question should be displayed when user s" +
                    "elects \"$200K To $400K\" value.", ((string[])(null)));
#line 45
 this.ScenarioSetup(scenarioInfo);
#line 46
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table6.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One"});
#line 47
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table6, "And ");
#line 50
 testRunner.When("I Select value as \"TwoHunderedKToFourHunderedK\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 51
 testRunner.Then("Address question should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue007_Verify that Address question should be displayed when user s" +
            "elects \"$400K To $600K\" value.")]
        public virtual void PropReg_PropValue007_VerifyThatAddressQuestionShouldBeDisplayedWhenUserSelects400KTo600KValue_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue007_Verify that Address question should be displayed when user s" +
                    "elects \"$400K To $600K\" value.", ((string[])(null)));
#line 53
 this.ScenarioSetup(scenarioInfo);
#line 54
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table7.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One"});
#line 55
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table7, "And ");
#line 58
 testRunner.When("I Select value as \"FourHunderedKToSixHunderedK\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 59
 testRunner.Then("Address question should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue008_Verify that Address question should be displayed when user s" +
            "elects \"$600K To $800K\" value.")]
        public virtual void PropReg_PropValue008_VerifyThatAddressQuestionShouldBeDisplayedWhenUserSelects600KTo800KValue_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue008_Verify that Address question should be displayed when user s" +
                    "elects \"$600K To $800K\" value.", ((string[])(null)));
#line 61
 this.ScenarioSetup(scenarioInfo);
#line 62
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table8.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One"});
#line 63
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table8, "And ");
#line 66
 testRunner.When("I Select value as \"SixHunderedKToEightHunderedK\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 67
 testRunner.Then("Address question should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue009_Verify that Address question should be displayed when user s" +
            "elects \"$800K To $1M\" value.")]
        public virtual void PropReg_PropValue009_VerifyThatAddressQuestionShouldBeDisplayedWhenUserSelects800KTo1MValue_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue009_Verify that Address question should be displayed when user s" +
                    "elects \"$800K To $1M\" value.", ((string[])(null)));
#line 69
 this.ScenarioSetup(scenarioInfo);
#line 70
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table9.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One"});
#line 71
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table9, "And ");
#line 74
 testRunner.When("I Select value as \"EightHunderedKToOneMillion\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 75
 testRunner.Then("Address question should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue010_Verify that Address question should be displayed when user s" +
            "elects \"$1M To $1.5M\" value.")]
        public virtual void PropReg_PropValue010_VerifyThatAddressQuestionShouldBeDisplayedWhenUserSelects1MTo1_5MValue_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue010_Verify that Address question should be displayed when user s" +
                    "elects \"$1M To $1.5M\" value.", ((string[])(null)));
#line 77
 this.ScenarioSetup(scenarioInfo);
#line 78
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table10.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One"});
#line 79
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table10, "And ");
#line 82
 testRunner.When("I Select value as \"OneMillionToOneAndHalfMillion\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 83
 testRunner.Then("Address question should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue011_Verify that Address question should be displayed when user s" +
            "elects \"$1.5M To $2M\" value.")]
        public virtual void PropReg_PropValue011_VerifyThatAddressQuestionShouldBeDisplayedWhenUserSelects1_5MTo2MValue_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue011_Verify that Address question should be displayed when user s" +
                    "elects \"$1.5M To $2M\" value.", ((string[])(null)));
#line 85
 this.ScenarioSetup(scenarioInfo);
#line 86
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table11.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One"});
#line 87
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table11, "And ");
#line 90
 testRunner.When("I Select value as \"OneAndHalfMillionToTwoMillion\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 91
 testRunner.Then("Address question should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue012_Verify that Address question should be displayed when user s" +
            "elects \"$2M+\" value.")]
        public virtual void PropReg_PropValue012_VerifyThatAddressQuestionShouldBeDisplayedWhenUserSelects2MValue_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue012_Verify that Address question should be displayed when user s" +
                    "elects \"$2M+\" value.", ((string[])(null)));
#line 93
 this.ScenarioSetup(scenarioInfo);
#line 94
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table12.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One"});
#line 95
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table12, "And ");
#line 98
 testRunner.When("I Select value as \"MoreThanTwoMillion\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 99
 testRunner.Then("Address question should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue013_Verify that Address question should be displayed when user s" +
            "elects \"Less Than $200\" value.")]
        public virtual void PropReg_PropValue013_VerifyThatAddressQuestionShouldBeDisplayedWhenUserSelectsLessThan200Value_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue013_Verify that Address question should be displayed when user s" +
                    "elects \"Less Than $200\" value.", ((string[])(null)));
#line 101
 this.ScenarioSetup(scenarioInfo);
#line 102
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table13.AddRow(new string[] {
                        "Rent",
                        "House",
                        "One"});
#line 103
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table13, "And ");
#line 106
 testRunner.When("I Select value as \"LessThanTwoHundered\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 107
 testRunner.Then("Address question should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue014_Verify that Address question should be displayed when user s" +
            "elects \"$200 Than $300\" value.")]
        public virtual void PropReg_PropValue014_VerifyThatAddressQuestionShouldBeDisplayedWhenUserSelects200Than300Value_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue014_Verify that Address question should be displayed when user s" +
                    "elects \"$200 Than $300\" value.", ((string[])(null)));
#line 109
 this.ScenarioSetup(scenarioInfo);
#line 110
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table14.AddRow(new string[] {
                        "Rent",
                        "House",
                        "One"});
#line 111
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table14, "And ");
#line 114
 testRunner.When("I Select value as \"TwoHunderedToThreeHundered\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 115
 testRunner.Then("Address question should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue015_Verify that Address question should be displayed when user s" +
            "elects \"$300 Than $400\" value.")]
        public virtual void PropReg_PropValue015_VerifyThatAddressQuestionShouldBeDisplayedWhenUserSelects300Than400Value_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue015_Verify that Address question should be displayed when user s" +
                    "elects \"$300 Than $400\" value.", ((string[])(null)));
#line 117
 this.ScenarioSetup(scenarioInfo);
#line 118
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table15.AddRow(new string[] {
                        "Rent",
                        "House",
                        "One"});
#line 119
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table15, "And ");
#line 122
 testRunner.When("I Select value as \"ThreeHunderedToFourHundered\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 123
 testRunner.Then("Address question should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue016_Verify that Address question should be displayed when user s" +
            "elects \"$400 Than $500\" value.")]
        public virtual void PropReg_PropValue016_VerifyThatAddressQuestionShouldBeDisplayedWhenUserSelects400Than500Value_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue016_Verify that Address question should be displayed when user s" +
                    "elects \"$400 Than $500\" value.", ((string[])(null)));
#line 125
 this.ScenarioSetup(scenarioInfo);
#line 126
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table16.AddRow(new string[] {
                        "Rent",
                        "House",
                        "One"});
#line 127
  testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table16, "And ");
#line 130
 testRunner.When("I Select value as \"FourHunderedToFiveHundered\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 131
 testRunner.Then("Address question should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue017_Verify that Address question should be displayed when user s" +
            "elects \"$500 Than $700\" value.")]
        public virtual void PropReg_PropValue017_VerifyThatAddressQuestionShouldBeDisplayedWhenUserSelects500Than700Value_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue017_Verify that Address question should be displayed when user s" +
                    "elects \"$500 Than $700\" value.", ((string[])(null)));
#line 133
 this.ScenarioSetup(scenarioInfo);
#line 134
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table17.AddRow(new string[] {
                        "Rent",
                        "House",
                        "One"});
#line 135
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table17, "And ");
#line 138
 testRunner.When("I Select value as \"FiveHunderedToSevenHundered\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 139
 testRunner.Then("Address question should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue018_Verify that Address question should be displayed when user s" +
            "elects \"$700 Than $1000\" value.")]
        public virtual void PropReg_PropValue018_VerifyThatAddressQuestionShouldBeDisplayedWhenUserSelects700Than1000Value_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue018_Verify that Address question should be displayed when user s" +
                    "elects \"$700 Than $1000\" value.", ((string[])(null)));
#line 141
 this.ScenarioSetup(scenarioInfo);
#line 142
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table18.AddRow(new string[] {
                        "Rent",
                        "House",
                        "One"});
#line 143
   testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table18, "And ");
#line 146
 testRunner.When("I Select value as \"SevenHunderedToOneThousand\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 147
 testRunner.Then("Address question should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue019_Verify that Address question should be displayed when user s" +
            "elects \"$1000 Than $1500\" value.")]
        public virtual void PropReg_PropValue019_VerifyThatAddressQuestionShouldBeDisplayedWhenUserSelects1000Than1500Value_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue019_Verify that Address question should be displayed when user s" +
                    "elects \"$1000 Than $1500\" value.", ((string[])(null)));
#line 149
 this.ScenarioSetup(scenarioInfo);
#line 150
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table19.AddRow(new string[] {
                        "Rent",
                        "House",
                        "One"});
#line 151
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table19, "And ");
#line 154
 testRunner.When("I Select value as \"OneThousandToFifteenHundered\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 155
 testRunner.Then("Address question should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue020_Verify that Address question should be displayed when user s" +
            "elects \"$1500+\" value.")]
        public virtual void PropReg_PropValue020_VerifyThatAddressQuestionShouldBeDisplayedWhenUserSelects1500Value_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue020_Verify that Address question should be displayed when user s" +
                    "elects \"$1500+\" value.", ((string[])(null)));
#line 157
 this.ScenarioSetup(scenarioInfo);
#line 158
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table20.AddRow(new string[] {
                        "Rent",
                        "House",
                        "One"});
#line 159
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table20, "And ");
#line 162
 testRunner.When("I Select value as \"MoreThanFifteenHundered\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 163
 testRunner.Then("Address question should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue021_Verify the color of option for \"Less Than $200K\" value when " +
            "it is not selected")]
        public virtual void PropReg_PropValue021_VerifyTheColorOfOptionForLessThan200KValueWhenItIsNotSelected()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue021_Verify the color of option for \"Less Than $200K\" value when " +
                    "it is not selected", ((string[])(null)));
#line 165
 this.ScenarioSetup(scenarioInfo);
#line 166
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table21.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One"});
#line 167
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table21, "And ");
#line 170
 testRunner.Then("Color of the Less Than TwoHundered K value option should be \"#00AEFF\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue022_Verify that color of the option  for \"Less Than $200K\" value" +
            " on selection")]
        public virtual void PropReg_PropValue022_VerifyThatColorOfTheOptionForLessThan200KValueOnSelection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue022_Verify that color of the option  for \"Less Than $200K\" value" +
                    " on selection", ((string[])(null)));
#line 172
 this.ScenarioSetup(scenarioInfo);
#line 173
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table22.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One"});
#line 174
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table22, "And ");
#line 177
 testRunner.When("I Select value as \"LessThanTwoHunderedK\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 178
 testRunner.And("I move back to Property Value Selection from Address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 179
 testRunner.Then("Color of the Less Than TwoHundered K value option should be \"#16B24D\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue023_Verify the color of option for \"$200K Than $400K\" value when" +
            " it is not selected")]
        public virtual void PropReg_PropValue023_VerifyTheColorOfOptionFor200KThan400KValueWhenItIsNotSelected()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue023_Verify the color of option for \"$200K Than $400K\" value when" +
                    " it is not selected", ((string[])(null)));
#line 181
 this.ScenarioSetup(scenarioInfo);
#line 182
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table23.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One"});
#line 183
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table23, "And ");
#line 186
 testRunner.Then("Color of the TwoHunderedK To FourHunderedK value option should be \"#00AEFF\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue024_Verify that color of the option  for \"$200K Than $400K\" valu" +
            "e on selection")]
        public virtual void PropReg_PropValue024_VerifyThatColorOfTheOptionFor200KThan400KValueOnSelection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue024_Verify that color of the option  for \"$200K Than $400K\" valu" +
                    "e on selection", ((string[])(null)));
#line 188
 this.ScenarioSetup(scenarioInfo);
#line 189
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table24.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One"});
#line 190
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table24, "And ");
#line 193
 testRunner.When("I Select value as \"TwoHunderedKToFourHunderedK\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 194
 testRunner.And("I move back to Property Value Selection from Address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 195
 testRunner.Then("Color of the TwoHunderedK To FourHunderedK value option should be \"#16B24D\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue025_Verify the color of option for \"$400K Than $600K\" value when" +
            " it is not selected")]
        public virtual void PropReg_PropValue025_VerifyTheColorOfOptionFor400KThan600KValueWhenItIsNotSelected()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue025_Verify the color of option for \"$400K Than $600K\" value when" +
                    " it is not selected", ((string[])(null)));
#line 197
 this.ScenarioSetup(scenarioInfo);
#line 198
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table25.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One"});
#line 199
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table25, "And ");
#line 202
 testRunner.Then("Color of the FourHunderedK To SixHunderedK value option should be \"#00AEFF\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue026_Verify that color of the option  for \"$400K Than $600K\" valu" +
            "e on selection")]
        public virtual void PropReg_PropValue026_VerifyThatColorOfTheOptionFor400KThan600KValueOnSelection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue026_Verify that color of the option  for \"$400K Than $600K\" valu" +
                    "e on selection", ((string[])(null)));
#line 204
 this.ScenarioSetup(scenarioInfo);
#line 205
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table26.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One"});
#line 206
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table26, "And ");
#line 209
 testRunner.When("I Select value as \"FourHunderedKToSixHunderedK\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 210
 testRunner.And("I move back to Property Value Selection from Address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 211
 testRunner.Then("Color of the FourHunderedK To SixHunderedK value option should be \"#16B24D\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue027_Verify the color of option for \"$600K Than $800K\" value when" +
            " it is not selected")]
        public virtual void PropReg_PropValue027_VerifyTheColorOfOptionFor600KThan800KValueWhenItIsNotSelected()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue027_Verify the color of option for \"$600K Than $800K\" value when" +
                    " it is not selected", ((string[])(null)));
#line 213
 this.ScenarioSetup(scenarioInfo);
#line 214
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table27.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One"});
#line 215
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table27, "And ");
#line 218
 testRunner.Then("Color of the SixHunderedK To EightHunderedK value option should be \"#00AEFF\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue028_Verify that color of the option  for \"$600K Than $800K\" valu" +
            "e on selection")]
        public virtual void PropReg_PropValue028_VerifyThatColorOfTheOptionFor600KThan800KValueOnSelection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue028_Verify that color of the option  for \"$600K Than $800K\" valu" +
                    "e on selection", ((string[])(null)));
#line 220
 this.ScenarioSetup(scenarioInfo);
#line 221
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table28.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One"});
#line 222
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table28, "And ");
#line 225
 testRunner.When("I Select value as \"SixHunderedKToEightHunderedK\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 226
 testRunner.And("I move back to Property Value Selection from Address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 227
 testRunner.Then("Color of the SixHunderedK To EightHunderedK value option should be \"#16B24D\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue029_Verify the color of option for \"$800K Than $1M\" value when i" +
            "t is not selected")]
        public virtual void PropReg_PropValue029_VerifyTheColorOfOptionFor800KThan1MValueWhenItIsNotSelected()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue029_Verify the color of option for \"$800K Than $1M\" value when i" +
                    "t is not selected", ((string[])(null)));
#line 229
 this.ScenarioSetup(scenarioInfo);
#line 230
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table29.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One"});
#line 231
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table29, "And ");
#line 234
 testRunner.Then("Color of the EightHunderedK To OneMillion value option should be \"#00AEFF\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue030_Verify that color of the option  for \"$800K Than $1M\" value " +
            "on selection")]
        public virtual void PropReg_PropValue030_VerifyThatColorOfTheOptionFor800KThan1MValueOnSelection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue030_Verify that color of the option  for \"$800K Than $1M\" value " +
                    "on selection", ((string[])(null)));
#line 236
 this.ScenarioSetup(scenarioInfo);
#line 237
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table30.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One"});
#line 238
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table30, "And ");
#line 241
 testRunner.When("I Select value as \"EightHunderedKToOneMillion\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 242
 testRunner.And("I move back to Property Value Selection from Address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 243
 testRunner.Then("Color of the EightHunderedK To OneMillion value option should be \"#16B24D\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue031_Verify the color of option for \"$1M Than $1.5M\" value when i" +
            "t is not selected")]
        public virtual void PropReg_PropValue031_VerifyTheColorOfOptionFor1MThan1_5MValueWhenItIsNotSelected()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue031_Verify the color of option for \"$1M Than $1.5M\" value when i" +
                    "t is not selected", ((string[])(null)));
#line 245
 this.ScenarioSetup(scenarioInfo);
#line 246
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table31.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One"});
#line 247
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table31, "And ");
#line 250
 testRunner.Then("Color of the OneMillion To OneAndHalfMillion value option should be \"#00AEFF\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue032_Verify that color of the option  for \"$1M Than $1.5M\" value " +
            "on selection")]
        public virtual void PropReg_PropValue032_VerifyThatColorOfTheOptionFor1MThan1_5MValueOnSelection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue032_Verify that color of the option  for \"$1M Than $1.5M\" value " +
                    "on selection", ((string[])(null)));
#line 252
 this.ScenarioSetup(scenarioInfo);
#line 253
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table32.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One"});
#line 254
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table32, "And ");
#line 257
 testRunner.When("I Select value as \"OneMillionToOneAndHalfMillion\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 258
 testRunner.And("I move back to Property Value Selection from Address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 259
 testRunner.Then("Color of the OneMillion To OneAndHalfMillion value option should be \"#16B24D\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue033_Verify the color of option for \"$1.5M Than $2M\" value when i" +
            "t is not selected")]
        public virtual void PropReg_PropValue033_VerifyTheColorOfOptionFor1_5MThan2MValueWhenItIsNotSelected()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue033_Verify the color of option for \"$1.5M Than $2M\" value when i" +
                    "t is not selected", ((string[])(null)));
#line 261
    this.ScenarioSetup(scenarioInfo);
#line 262
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table33.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One"});
#line 263
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table33, "And ");
#line 266
 testRunner.Then("Color of the OneAndHalfMillion To TwoMillion value option should be \"#00AEFF\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue034_Verify that color of the option  for \"$1.5M Than $2M\" value " +
            "on selection")]
        public virtual void PropReg_PropValue034_VerifyThatColorOfTheOptionFor1_5MThan2MValueOnSelection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue034_Verify that color of the option  for \"$1.5M Than $2M\" value " +
                    "on selection", ((string[])(null)));
#line 268
 this.ScenarioSetup(scenarioInfo);
#line 269
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table34.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One"});
#line 270
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table34, "And ");
#line 273
 testRunner.When("I Select value as \"OneAndHalfMillionToTwoMillion\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 274
 testRunner.And("I move back to Property Value Selection from Address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 275
 testRunner.Then("Color of the OneAndHalfMillion To TwoMillion value option should be \"#16B24D\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue035_Verify the color of option for \"$2M+\" value when it is not s" +
            "elected")]
        public virtual void PropReg_PropValue035_VerifyTheColorOfOptionFor2MValueWhenItIsNotSelected()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue035_Verify the color of option for \"$2M+\" value when it is not s" +
                    "elected", ((string[])(null)));
#line 277
    this.ScenarioSetup(scenarioInfo);
#line 278
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table35.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One"});
#line 279
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table35, "And ");
#line 282
 testRunner.Then("Color of the MoreThanTwoMillion value option should be \"#00AEFF\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue036_Verify that color of the option  for \"$2M+\" value on selecti" +
            "on")]
        public virtual void PropReg_PropValue036_VerifyThatColorOfTheOptionFor2MValueOnSelection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue036_Verify that color of the option  for \"$2M+\" value on selecti" +
                    "on", ((string[])(null)));
#line 284
 this.ScenarioSetup(scenarioInfo);
#line 285
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table36.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One"});
#line 286
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table36, "And ");
#line 289
 testRunner.When("I Select value as \"MoreThanTwoMillion\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 290
 testRunner.And("I move back to Property Value Selection from Address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 291
 testRunner.Then("Color of the MoreThanTwoMillion value option should be \"#16B24D\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue037_Verify the color of option for \"Less Than 200\" value when it" +
            " is not selected")]
        public virtual void PropReg_PropValue037_VerifyTheColorOfOptionForLessThan200ValueWhenItIsNotSelected()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue037_Verify the color of option for \"Less Than 200\" value when it" +
                    " is not selected", ((string[])(null)));
#line 293
 this.ScenarioSetup(scenarioInfo);
#line 294
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table37.AddRow(new string[] {
                        "Rent",
                        "House",
                        "One"});
#line 295
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table37, "And ");
#line 298
 testRunner.Then("Color of the Less Than TwoHundered value option should be \"#00AEFF\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue038_Verify that color of the option  for \"Less Than 200\" value o" +
            "n selection")]
        public virtual void PropReg_PropValue038_VerifyThatColorOfTheOptionForLessThan200ValueOnSelection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue038_Verify that color of the option  for \"Less Than 200\" value o" +
                    "n selection", ((string[])(null)));
#line 300
 this.ScenarioSetup(scenarioInfo);
#line 301
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table38.AddRow(new string[] {
                        "Rent",
                        "House",
                        "One"});
#line 302
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table38, "And ");
#line 305
 testRunner.When("I Select value as \"LessThanTwoHundered\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 306
 testRunner.And("I move back to Property Value Selection from Address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 307
 testRunner.Then("Color of the Less Than TwoHundered value option should be \"#16B24D\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue039_Verify the color of option for \"200 To 300\" value when it is" +
            " not selected")]
        public virtual void PropReg_PropValue039_VerifyTheColorOfOptionFor200To300ValueWhenItIsNotSelected()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue039_Verify the color of option for \"200 To 300\" value when it is" +
                    " not selected", ((string[])(null)));
#line 309
 this.ScenarioSetup(scenarioInfo);
#line 310
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table39.AddRow(new string[] {
                        "Rent",
                        "House",
                        "One"});
#line 311
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table39, "And ");
#line 314
 testRunner.Then("Color of the TwoHundered To ThreeHundered value option should be \"#00AEFF\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue040_Verify that color of the option  for \"200 To 300\" value on s" +
            "election")]
        public virtual void PropReg_PropValue040_VerifyThatColorOfTheOptionFor200To300ValueOnSelection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue040_Verify that color of the option  for \"200 To 300\" value on s" +
                    "election", ((string[])(null)));
#line 316
 this.ScenarioSetup(scenarioInfo);
#line 317
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table40.AddRow(new string[] {
                        "Rent",
                        "House",
                        "One"});
#line 318
  testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table40, "And ");
#line 321
 testRunner.When("I Select value as \"TwoHunderedToThreeHundered\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 322
 testRunner.And("I move back to Property Value Selection from Address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 323
 testRunner.Then("Color of the TwoHundered To ThreeHundered value option should be \"#16B24D\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue041_Verify the color of option for \"300 To 400\" value when it is" +
            " not selected")]
        public virtual void PropReg_PropValue041_VerifyTheColorOfOptionFor300To400ValueWhenItIsNotSelected()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue041_Verify the color of option for \"300 To 400\" value when it is" +
                    " not selected", ((string[])(null)));
#line 325
 this.ScenarioSetup(scenarioInfo);
#line 326
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table41.AddRow(new string[] {
                        "Rent",
                        "House",
                        "One"});
#line 327
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table41, "And ");
#line 330
 testRunner.Then("Color of the ThreeHundered To FourHundered value option should be \"#00AEFF\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue042_Verify that color of the option  for \"300 To 400\" value on s" +
            "election")]
        public virtual void PropReg_PropValue042_VerifyThatColorOfTheOptionFor300To400ValueOnSelection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue042_Verify that color of the option  for \"300 To 400\" value on s" +
                    "election", ((string[])(null)));
#line 332
 this.ScenarioSetup(scenarioInfo);
#line 333
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table42.AddRow(new string[] {
                        "Rent",
                        "House",
                        "One"});
#line 334
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table42, "And ");
#line 337
 testRunner.When("I Select value as \"ThreeHunderedToFourHundered\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 338
 testRunner.And("I move back to Property Value Selection from Address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 339
 testRunner.Then("Color of the ThreeHundered To FourHundered value option should be \"#16B24D\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue043_Verify the color of option for \"400 To 500\" value when it is" +
            " not selected")]
        public virtual void PropReg_PropValue043_VerifyTheColorOfOptionFor400To500ValueWhenItIsNotSelected()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue043_Verify the color of option for \"400 To 500\" value when it is" +
                    " not selected", ((string[])(null)));
#line 341
 this.ScenarioSetup(scenarioInfo);
#line 342
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table43.AddRow(new string[] {
                        "Rent",
                        "House",
                        "One"});
#line 343
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table43, "And ");
#line 346
 testRunner.Then("Color of the FourHundered To FiveHundered value option should be \"#00AEFF\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue044_Verify that color of the option  for \"400 To 500\" value on s" +
            "election")]
        public virtual void PropReg_PropValue044_VerifyThatColorOfTheOptionFor400To500ValueOnSelection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue044_Verify that color of the option  for \"400 To 500\" value on s" +
                    "election", ((string[])(null)));
#line 348
 this.ScenarioSetup(scenarioInfo);
#line 349
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table44.AddRow(new string[] {
                        "Rent",
                        "House",
                        "One"});
#line 350
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table44, "And ");
#line 353
 testRunner.When("I Select value as \"FourHunderedToFiveHundered\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 354
 testRunner.And("I move back to Property Value Selection from Address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 355
 testRunner.Then("Color of the FourHundered To FiveHundered value option should be \"#16B24D\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue045_Verify the color of option for \"500 To 700\" value when it is" +
            " not selected")]
        public virtual void PropReg_PropValue045_VerifyTheColorOfOptionFor500To700ValueWhenItIsNotSelected()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue045_Verify the color of option for \"500 To 700\" value when it is" +
                    " not selected", ((string[])(null)));
#line 357
 this.ScenarioSetup(scenarioInfo);
#line 358
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table45.AddRow(new string[] {
                        "Rent",
                        "House",
                        "One"});
#line 359
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table45, "And ");
#line 362
 testRunner.Then("Color of the FiveHundered To SevenHundered value option should be \"#00AEFF\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue046_Verify that color of the option  for \"500 To 700\" value on s" +
            "election")]
        public virtual void PropReg_PropValue046_VerifyThatColorOfTheOptionFor500To700ValueOnSelection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue046_Verify that color of the option  for \"500 To 700\" value on s" +
                    "election", ((string[])(null)));
#line 364
 this.ScenarioSetup(scenarioInfo);
#line 365
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table46.AddRow(new string[] {
                        "Rent",
                        "House",
                        "One"});
#line 366
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table46, "And ");
#line 369
 testRunner.When("I Select value as \"FiveHunderedToSevenHundered\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 370
 testRunner.And("I move back to Property Value Selection from Address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 371
 testRunner.Then("Color of the FiveHundered To SevenHundered value option should be \"#16B24D\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue047_Verify the color of option for \"700 To 1000\" value when it i" +
            "s not selected")]
        public virtual void PropReg_PropValue047_VerifyTheColorOfOptionFor700To1000ValueWhenItIsNotSelected()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue047_Verify the color of option for \"700 To 1000\" value when it i" +
                    "s not selected", ((string[])(null)));
#line 373
 this.ScenarioSetup(scenarioInfo);
#line 374
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table47.AddRow(new string[] {
                        "Rent",
                        "House",
                        "One"});
#line 375
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table47, "And ");
#line 378
 testRunner.Then("Color of the SevenHundered To OneThousandvalue option should be \"#00AEFF\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue048_Verify that color of the option  for \"700 To 1000\" value on " +
            "selection")]
        public virtual void PropReg_PropValue048_VerifyThatColorOfTheOptionFor700To1000ValueOnSelection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue048_Verify that color of the option  for \"700 To 1000\" value on " +
                    "selection", ((string[])(null)));
#line 380
 this.ScenarioSetup(scenarioInfo);
#line 381
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table48.AddRow(new string[] {
                        "Rent",
                        "House",
                        "One"});
#line 382
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table48, "And ");
#line 385
 testRunner.When("I Select value as \"SevenHunderedToOneThousand\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 386
 testRunner.And("I move back to Property Value Selection from Address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 387
 testRunner.Then("Color of the SevenHundered To OneThousandvalue option should be \"#16B24D\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue049_Verify the color of option for \"1000 To 1500\" value when it " +
            "is not selected")]
        public virtual void PropReg_PropValue049_VerifyTheColorOfOptionFor1000To1500ValueWhenItIsNotSelected()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue049_Verify the color of option for \"1000 To 1500\" value when it " +
                    "is not selected", ((string[])(null)));
#line 389
 this.ScenarioSetup(scenarioInfo);
#line 390
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table49.AddRow(new string[] {
                        "Rent",
                        "House",
                        "One"});
#line 391
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table49, "And ");
#line 394
 testRunner.Then("Color of the OneThousand To FifteenHundered value option should be \"#00AEFF\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue050_Verify that color of the option  for \"1000 To 1500\" value on" +
            " selection")]
        public virtual void PropReg_PropValue050_VerifyThatColorOfTheOptionFor1000To1500ValueOnSelection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue050_Verify that color of the option  for \"1000 To 1500\" value on" +
                    " selection", ((string[])(null)));
#line 396
 this.ScenarioSetup(scenarioInfo);
#line 397
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table50.AddRow(new string[] {
                        "Rent",
                        "House",
                        "One"});
#line 398
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table50, "And ");
#line 401
 testRunner.When("I Select value as \"OneThousandToFifteenHundered\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 402
 testRunner.And("I move back to Property Value Selection from Address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 403
 testRunner.Then("Color of the OneThousand To FifteenHundered value option should be \"#16B24D\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue051_Verify the color of option for \"1500+\" value when it is not " +
            "selected")]
        public virtual void PropReg_PropValue051_VerifyTheColorOfOptionFor1500ValueWhenItIsNotSelected()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue051_Verify the color of option for \"1500+\" value when it is not " +
                    "selected", ((string[])(null)));
#line 405
 this.ScenarioSetup(scenarioInfo);
#line 406
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table51.AddRow(new string[] {
                        "Rent",
                        "House",
                        "One"});
#line 407
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table51, "And ");
#line 410
 testRunner.Then("Color of the MoreThanFifteenHundered value option should be \"#00AEFF\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue052_Verify that color of the option  for \"1500+\" value on select" +
            "ion")]
        public virtual void PropReg_PropValue052_VerifyThatColorOfTheOptionFor1500ValueOnSelection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue052_Verify that color of the option  for \"1500+\" value on select" +
                    "ion", ((string[])(null)));
#line 412
 this.ScenarioSetup(scenarioInfo);
#line 413
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table52.AddRow(new string[] {
                        "Rent",
                        "House",
                        "One"});
#line 414
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table52, "And ");
#line 417
 testRunner.When("I Select value as \"MoreThanFifteenHundered\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 418
 testRunner.And("I move back to Property Value Selection from Address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 419
 testRunner.Then("Color of the MoreThanFifteenHundered value option should be \"#16B24D\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue053_Verify that link for Moving forward is displayed as enabled " +
            "when user moves back to Property Value selection from Address section")]
        public virtual void PropReg_PropValue053_VerifyThatLinkForMovingForwardIsDisplayedAsEnabledWhenUserMovesBackToPropertyValueSelectionFromAddressSection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue053_Verify that link for Moving forward is displayed as enabled " +
                    "when user moves back to Property Value selection from Address section", ((string[])(null)));
#line 421
 this.ScenarioSetup(scenarioInfo);
#line 422
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table53.AddRow(new string[] {
                        "Rent",
                        "House",
                        "One"});
#line 423
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table53, "And ");
#line 426
 testRunner.When("I Select value as \"MoreThanFifteenHundered\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 427
 testRunner.And("I move back to Property Value Selection from Address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 428
 testRunner.Then("Moving forward Link is displayed as enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropValue054_Verify that Address question is displayed on clicking Forwar" +
            "d link on Property Value selection")]
        public virtual void PropReg_PropValue054_VerifyThatAddressQuestionIsDisplayedOnClickingForwardLinkOnPropertyValueSelection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropValue054_Verify that Address question is displayed on clicking Forwar" +
                    "d link on Property Value selection", ((string[])(null)));
#line 430
 this.ScenarioSetup(scenarioInfo);
#line 431
 testRunner.Given("I am on Property_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds"});
            table54.AddRow(new string[] {
                        "Rent",
                        "House",
                        "One"});
#line 432
 testRunner.And("I navigate to Property Value Section after entering details", ((string)(null)), table54, "And ");
#line 435
 testRunner.When("I Select value as \"MoreThanFifteenHundered\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 436
 testRunner.And("I move back to Property Value Selection from Address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 437
 testRunner.And("Click on Forward Link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 438
 testRunner.Then("Address question should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
