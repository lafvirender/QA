// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace LAFTests.PropertyRegistration.PropertyRegistrationSpecs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("PropertyTypeFieldsVerification")]
    public partial class PropertyTypeFieldsVerificationFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "PropertyTypeFieldsVerification.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "PropertyTypeFieldsVerification", "\tIn order to register property for Sell or Rent\r\n\tAs a User\r\n\tI want to be able t" +
                    "o proceed after selecting valid Property Type.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropType001_Verify the Question for Property type options on Registration" +
            " Page for Sell Listing.")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        public virtual void PropReg_PropType001_VerifyTheQuestionForPropertyTypeOptionsOnRegistrationPageForSellListing_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropType001_Verify the Question for Property type options on Registration" +
                    " Page for Sell Listing.", new string[] {
                        "mytag"});
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("I am on Property Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category"});
            table1.AddRow(new string[] {
                        "Sell"});
#line 9
 testRunner.And("I navigate to Property Type Selection after selection option", ((string)(null)), table1, "And ");
#line 12
 testRunner.Then("Q \"What type of property are you selling?\" should be displayed for Property Type " +
                    "options", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropType002_Verify that Property Type \"HOUSE\" should be available on Regi" +
            "stration Page.")]
        public virtual void PropReg_PropType002_VerifyThatPropertyTypeHOUSEShouldBeAvailableOnRegistrationPage_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropType002_Verify that Property Type \"HOUSE\" should be available on Regi" +
                    "stration Page.", ((string[])(null)));
#line 14
this.ScenarioSetup(scenarioInfo);
#line 15
 testRunner.Given("I am on Property Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category"});
            table2.AddRow(new string[] {
                        "Sell"});
#line 16
 testRunner.And("I navigate to Property Type Selection after selection option", ((string)(null)), table2, "And ");
#line 19
 testRunner.Then("Property Type House with Text \"HOUSE\" should be available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropType003_Verify that Property Type \"UNIT\" should be available on Regis" +
            "tration Page.")]
        public virtual void PropReg_PropType003_VerifyThatPropertyTypeUNITShouldBeAvailableOnRegistrationPage_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropType003_Verify that Property Type \"UNIT\" should be available on Regis" +
                    "tration Page.", ((string[])(null)));
#line 21
this.ScenarioSetup(scenarioInfo);
#line 22
 testRunner.Given("I am on Property Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category"});
            table3.AddRow(new string[] {
                        "Sell"});
#line 23
 testRunner.And("I navigate to Property Type Selection after selection option", ((string)(null)), table3, "And ");
#line 26
 testRunner.Then("Property Type Unit with Text \"UNIT\" should be available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropType004_Verify that Property Type \"LAND\" should be available on Regis" +
            "tration Page.")]
        public virtual void PropReg_PropType004_VerifyThatPropertyTypeLANDShouldBeAvailableOnRegistrationPage_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropType004_Verify that Property Type \"LAND\" should be available on Regis" +
                    "tration Page.", ((string[])(null)));
#line 28
this.ScenarioSetup(scenarioInfo);
#line 29
 testRunner.Given("I am on Property Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category"});
            table4.AddRow(new string[] {
                        "Sell"});
#line 30
 testRunner.And("I navigate to Property Type Selection after selection option", ((string)(null)), table4, "And ");
#line 33
 testRunner.Then("Property Type Land with Text \"LAND\" should be available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropType005_Verify that Property Type \"APARTMENT\" should be available on " +
            "Registration Page.")]
        public virtual void PropReg_PropType005_VerifyThatPropertyTypeAPARTMENTShouldBeAvailableOnRegistrationPage_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropType005_Verify that Property Type \"APARTMENT\" should be available on " +
                    "Registration Page.", ((string[])(null)));
#line 35
this.ScenarioSetup(scenarioInfo);
#line 36
 testRunner.Given("I am on Property Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category"});
            table5.AddRow(new string[] {
                        "Sell"});
#line 37
 testRunner.And("I navigate to Property Type Selection after selection option", ((string)(null)), table5, "And ");
#line 40
 testRunner.Then("Property Type Apartment with Text \"APARTMENT\" should be available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropType006_Verify that Property Type \"TOWNHOUSE\" should be available on " +
            "Registration Page.")]
        public virtual void PropReg_PropType006_VerifyThatPropertyTypeTOWNHOUSEShouldBeAvailableOnRegistrationPage_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropType006_Verify that Property Type \"TOWNHOUSE\" should be available on " +
                    "Registration Page.", ((string[])(null)));
#line 42
this.ScenarioSetup(scenarioInfo);
#line 43
 testRunner.Given("I am on Property Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category"});
            table6.AddRow(new string[] {
                        "Sell"});
#line 44
 testRunner.And("I navigate to Property Type Selection after selection option", ((string)(null)), table6, "And ");
#line 47
 testRunner.Then("Property Type Townhouse with Text \"TOWNHOUSE\" should be available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropType007_Verify that Property Type \"VILLA\" should be available on Regi" +
            "stration Page.")]
        public virtual void PropReg_PropType007_VerifyThatPropertyTypeVILLAShouldBeAvailableOnRegistrationPage_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropType007_Verify that Property Type \"VILLA\" should be available on Regi" +
                    "stration Page.", ((string[])(null)));
#line 49
this.ScenarioSetup(scenarioInfo);
#line 50
 testRunner.Given("I am on Property Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category"});
            table7.AddRow(new string[] {
                        "Sell"});
#line 51
 testRunner.And("I navigate to Property Type Selection after selection option", ((string)(null)), table7, "And ");
#line 54
 testRunner.Then("Property Type Villa with Text \"VILLA\" should be available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropType008_Verify that Property Circle in the Progress section should be" +
            " displayed as Filled.")]
        public virtual void PropReg_PropType008_VerifyThatPropertyCircleInTheProgressSectionShouldBeDisplayedAsFilled_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropType008_Verify that Property Circle in the Progress section should be" +
                    " displayed as Filled.", ((string[])(null)));
#line 56
this.ScenarioSetup(scenarioInfo);
#line 57
 testRunner.Given("I am on Property Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category"});
            table8.AddRow(new string[] {
                        "Sell"});
#line 58
 testRunner.And("I navigate to Property Type Selection after selection option", ((string)(null)), table8, "And ");
#line 61
 testRunner.Then("Property Circle in the Progress is displayed as Filled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropType009_Verify that link for Moving Forward should be disabled by def" +
            "ault")]
        public virtual void PropReg_PropType009_VerifyThatLinkForMovingForwardShouldBeDisabledByDefault()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropType009_Verify that link for Moving Forward should be disabled by def" +
                    "ault", ((string[])(null)));
#line 63
this.ScenarioSetup(scenarioInfo);
#line 64
 testRunner.Given("I am on Property Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category"});
            table9.AddRow(new string[] {
                        "Sell"});
#line 65
 testRunner.And("I navigate to Property Type Selection after selection option", ((string)(null)), table9, "And ");
#line 68
 testRunner.Then("Moving Forward Link is disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropType010_Verify that Bedroom selection question should be displayed wh" +
            "en user selects \"House\" Property Type.")]
        public virtual void PropReg_PropType010_VerifyThatBedroomSelectionQuestionShouldBeDisplayedWhenUserSelectsHousePropertyType_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropType010_Verify that Bedroom selection question should be displayed wh" +
                    "en user selects \"House\" Property Type.", ((string[])(null)));
#line 70
this.ScenarioSetup(scenarioInfo);
#line 71
 testRunner.Given("I am on Property Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category"});
            table10.AddRow(new string[] {
                        "Sell"});
#line 72
 testRunner.And("I navigate to Property Type Selection after selection option", ((string)(null)), table10, "And ");
#line 75
 testRunner.When("I Select Property Type as \"House\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 76
 testRunner.Then("Bedroom selection question should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropType011_Verify that Bedroom selection question should be displayed wh" +
            "en user selects \"Unit\" Property Type.")]
        public virtual void PropReg_PropType011_VerifyThatBedroomSelectionQuestionShouldBeDisplayedWhenUserSelectsUnitPropertyType_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropType011_Verify that Bedroom selection question should be displayed wh" +
                    "en user selects \"Unit\" Property Type.", ((string[])(null)));
#line 78
this.ScenarioSetup(scenarioInfo);
#line 79
 testRunner.Given("I am on Property Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category"});
            table11.AddRow(new string[] {
                        "Sell"});
#line 80
 testRunner.And("I navigate to Property Type Selection after selection option", ((string)(null)), table11, "And ");
#line 83
 testRunner.When("I Select Property Type as \"Unit\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 84
 testRunner.Then("Bedroom selection question should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropType012_Verify that Bedroom selection question should be displayed wh" +
            "en user selects \"Apartment\" Property Type.")]
        public virtual void PropReg_PropType012_VerifyThatBedroomSelectionQuestionShouldBeDisplayedWhenUserSelectsApartmentPropertyType_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropType012_Verify that Bedroom selection question should be displayed wh" +
                    "en user selects \"Apartment\" Property Type.", ((string[])(null)));
#line 86
this.ScenarioSetup(scenarioInfo);
#line 87
 testRunner.Given("I am on Property Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category"});
            table12.AddRow(new string[] {
                        "Sell"});
#line 88
 testRunner.And("I navigate to Property Type Selection after selection option", ((string)(null)), table12, "And ");
#line 91
 testRunner.When("I Select Property Type as \"Apartment\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 92
 testRunner.Then("Bedroom selection question should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropType013_Verify that Bedroom selection question should be displayed wh" +
            "en user selects \"Townhouse\" Property Type.")]
        public virtual void PropReg_PropType013_VerifyThatBedroomSelectionQuestionShouldBeDisplayedWhenUserSelectsTownhousePropertyType_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropType013_Verify that Bedroom selection question should be displayed wh" +
                    "en user selects \"Townhouse\" Property Type.", ((string[])(null)));
#line 94
this.ScenarioSetup(scenarioInfo);
#line 95
 testRunner.Given("I am on Property Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category"});
            table13.AddRow(new string[] {
                        "Sell"});
#line 96
 testRunner.And("I navigate to Property Type Selection after selection option", ((string)(null)), table13, "And ");
#line 99
 testRunner.When("I Select Property Type as \"Townhouse\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 100
 testRunner.Then("Bedroom selection question should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropType014_Verify that Bedroom selection question should be displayed wh" +
            "en user selects \"Villa\" Property Type.")]
        public virtual void PropReg_PropType014_VerifyThatBedroomSelectionQuestionShouldBeDisplayedWhenUserSelectsVillaPropertyType_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropType014_Verify that Bedroom selection question should be displayed wh" +
                    "en user selects \"Villa\" Property Type.", ((string[])(null)));
#line 102
this.ScenarioSetup(scenarioInfo);
#line 103
 testRunner.Given("I am on Property Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category"});
            table14.AddRow(new string[] {
                        "Sell"});
#line 104
 testRunner.And("I navigate to Property Type Selection after selection option", ((string)(null)), table14, "And ");
#line 107
 testRunner.When("I Select Property Type as \"Villa\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 108
 testRunner.Then("Bedroom selection question should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropType015_Verify that Approximate Value Selection question should be di" +
            "splayed when user selects \"Land\" Property Type.")]
        public virtual void PropReg_PropType015_VerifyThatApproximateValueSelectionQuestionShouldBeDisplayedWhenUserSelectsLandPropertyType_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropType015_Verify that Approximate Value Selection question should be di" +
                    "splayed when user selects \"Land\" Property Type.", ((string[])(null)));
#line 110
this.ScenarioSetup(scenarioInfo);
#line 111
 testRunner.Given("I am on Property Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category"});
            table15.AddRow(new string[] {
                        "Sell"});
#line 112
 testRunner.And("I navigate to Property Type Selection after selection option", ((string)(null)), table15, "And ");
#line 115
 testRunner.When("I Select Property Type as \"Land\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 116
 testRunner.Then("Approximate Value Selection question should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropType016_Verify the color of option House when it is not selected")]
        public virtual void PropReg_PropType016_VerifyTheColorOfOptionHouseWhenItIsNotSelected()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropType016_Verify the color of option House when it is not selected", ((string[])(null)));
#line 118
this.ScenarioSetup(scenarioInfo);
#line 119
 testRunner.Given("I am on Property Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category"});
            table16.AddRow(new string[] {
                        "Sell"});
#line 120
 testRunner.And("I navigate to Property Type Selection after selection option", ((string)(null)), table16, "And ");
#line 123
 testRunner.Then("Color of the House option should be \"#00AEFF\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropType017_Verify that color of the option House changes on selection.")]
        public virtual void PropReg_PropType017_VerifyThatColorOfTheOptionHouseChangesOnSelection_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropType017_Verify that color of the option House changes on selection.", ((string[])(null)));
#line 125
this.ScenarioSetup(scenarioInfo);
#line 126
 testRunner.Given("I am on Property Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category"});
            table17.AddRow(new string[] {
                        "Sell"});
#line 127
 testRunner.And("I navigate to Property Type Selection after selection option", ((string)(null)), table17, "And ");
#line 130
 testRunner.When("I Select Property Type as \"House\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 131
 testRunner.And("I move back to Property Type Selection from Bedrooms Selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 132
 testRunner.Then("Color of the House option should be \"#16B24D\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropType018_Verify that Progress line indicates selection of Property Typ" +
            "e.")]
        public virtual void PropReg_PropType018_VerifyThatProgressLineIndicatesSelectionOfPropertyType_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropType018_Verify that Progress line indicates selection of Property Typ" +
                    "e.", ((string[])(null)));
#line 134
this.ScenarioSetup(scenarioInfo);
#line 135
 testRunner.Given("I am on Property Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category"});
            table18.AddRow(new string[] {
                        "Sell"});
#line 136
 testRunner.And("I navigate to Property Type Selection after selection option", ((string)(null)), table18, "And ");
#line 139
 testRunner.When("I Select Property Type as \"House\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 140
 testRunner.And("I move back to Property Type Selection from Bedrooms Selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 141
 testRunner.Then("Progress line shows the selection of Property Type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropType019_Verify the color of option Unit when it is not selected")]
        public virtual void PropReg_PropType019_VerifyTheColorOfOptionUnitWhenItIsNotSelected()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropType019_Verify the color of option Unit when it is not selected", ((string[])(null)));
#line 143
this.ScenarioSetup(scenarioInfo);
#line 144
 testRunner.Given("I am on Property Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category"});
            table19.AddRow(new string[] {
                        "Sell"});
#line 145
 testRunner.And("I navigate to Property Type Selection after selection option", ((string)(null)), table19, "And ");
#line 148
 testRunner.Then("Color of the Unit option should be \"#00AEFF\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropType020_Verify that color of the option Unit changes on selection.")]
        public virtual void PropReg_PropType020_VerifyThatColorOfTheOptionUnitChangesOnSelection_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropType020_Verify that color of the option Unit changes on selection.", ((string[])(null)));
#line 150
this.ScenarioSetup(scenarioInfo);
#line 151
 testRunner.Given("I am on Property Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category"});
            table20.AddRow(new string[] {
                        "Sell"});
#line 152
 testRunner.And("I navigate to Property Type Selection after selection option", ((string)(null)), table20, "And ");
#line 155
 testRunner.When("I Select Property Type as \"Unit\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 156
 testRunner.And("I move back to Property Type Selection from Bedrooms Selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 157
 testRunner.Then("Color of the Unit option should be \"#16B24D\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropType021_Verify the color of option Land when it is not selected")]
        public virtual void PropReg_PropType021_VerifyTheColorOfOptionLandWhenItIsNotSelected()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropType021_Verify the color of option Land when it is not selected", ((string[])(null)));
#line 159
this.ScenarioSetup(scenarioInfo);
#line 160
 testRunner.Given("I am on Property Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category"});
            table21.AddRow(new string[] {
                        "Sell"});
#line 161
 testRunner.And("I navigate to Property Type Selection after selection option", ((string)(null)), table21, "And ");
#line 164
 testRunner.Then("Color of the Land option should be \"#00AEFF\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropType022_Verify that color of the option Land changes on selection.")]
        public virtual void PropReg_PropType022_VerifyThatColorOfTheOptionLandChangesOnSelection_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropType022_Verify that color of the option Land changes on selection.", ((string[])(null)));
#line 166
this.ScenarioSetup(scenarioInfo);
#line 167
 testRunner.Given("I am on Property Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category"});
            table22.AddRow(new string[] {
                        "Sell"});
#line 168
 testRunner.And("I navigate to Property Type Selection after selection option", ((string)(null)), table22, "And ");
#line 171
 testRunner.When("I Select Property Type as \"Land\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 172
 testRunner.And("I move back to Property Type Selection from Property Value Selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 173
 testRunner.Then("Color of the Land option should be \"#16B24D\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropType023_Verify the color of option Apartment when it is not selected")]
        public virtual void PropReg_PropType023_VerifyTheColorOfOptionApartmentWhenItIsNotSelected()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropType023_Verify the color of option Apartment when it is not selected", ((string[])(null)));
#line 175
this.ScenarioSetup(scenarioInfo);
#line 176
 testRunner.Given("I am on Property Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category"});
            table23.AddRow(new string[] {
                        "Sell"});
#line 177
 testRunner.And("I navigate to Property Type Selection after selection option", ((string)(null)), table23, "And ");
#line 180
 testRunner.Then("Color of the Apartment option should be \"#00AEFF\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropType024_Verify that color of the option Apartment changes on selectio" +
            "n.")]
        public virtual void PropReg_PropType024_VerifyThatColorOfTheOptionApartmentChangesOnSelection_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropType024_Verify that color of the option Apartment changes on selectio" +
                    "n.", ((string[])(null)));
#line 182
this.ScenarioSetup(scenarioInfo);
#line 183
 testRunner.Given("I am on Property Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category"});
            table24.AddRow(new string[] {
                        "Sell"});
#line 184
 testRunner.And("I navigate to Property Type Selection after selection option", ((string)(null)), table24, "And ");
#line 187
 testRunner.When("I Select Property Type as \"Apartment\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 188
 testRunner.And("I move back to Property Type Selection from Bedrooms Selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 189
 testRunner.Then("Color of the Apartment option should be \"#16B24D\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropType025_Verify the color of option Townhouse when it is not selected")]
        public virtual void PropReg_PropType025_VerifyTheColorOfOptionTownhouseWhenItIsNotSelected()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropType025_Verify the color of option Townhouse when it is not selected", ((string[])(null)));
#line 191
this.ScenarioSetup(scenarioInfo);
#line 192
 testRunner.Given("I am on Property Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category"});
            table25.AddRow(new string[] {
                        "Sell"});
#line 193
 testRunner.And("I navigate to Property Type Selection after selection option", ((string)(null)), table25, "And ");
#line 196
 testRunner.Then("Color of the Townhouse option should be \"#00AEFF\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropType026_Verify that color of the option Townhouse changes on selectio" +
            "n.")]
        public virtual void PropReg_PropType026_VerifyThatColorOfTheOptionTownhouseChangesOnSelection_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropType026_Verify that color of the option Townhouse changes on selectio" +
                    "n.", ((string[])(null)));
#line 198
this.ScenarioSetup(scenarioInfo);
#line 199
 testRunner.Given("I am on Property Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category"});
            table26.AddRow(new string[] {
                        "Sell"});
#line 200
 testRunner.And("I navigate to Property Type Selection after selection option", ((string)(null)), table26, "And ");
#line 203
 testRunner.When("I Select Property Type as \"Townhouse\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 204
 testRunner.And("I move back to Property Type Selection from Bedrooms Selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 205
 testRunner.Then("Color of the Townhouse option should be \"#16B24D\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropType027_Verify the color of option Villa when it is not selected")]
        public virtual void PropReg_PropType027_VerifyTheColorOfOptionVillaWhenItIsNotSelected()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropType027_Verify the color of option Villa when it is not selected", ((string[])(null)));
#line 207
this.ScenarioSetup(scenarioInfo);
#line 208
 testRunner.Given("I am on Property Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category"});
            table27.AddRow(new string[] {
                        "Sell"});
#line 209
 testRunner.And("I navigate to Property Type Selection after selection option", ((string)(null)), table27, "And ");
#line 212
 testRunner.Then("Color of the Villa option should be \"#00AEFF\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropType028_Verify that color of the option Villa changes on selection.")]
        public virtual void PropReg_PropType028_VerifyThatColorOfTheOptionVillaChangesOnSelection_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropType028_Verify that color of the option Villa changes on selection.", ((string[])(null)));
#line 214
this.ScenarioSetup(scenarioInfo);
#line 215
 testRunner.Given("I am on Property Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category"});
            table28.AddRow(new string[] {
                        "Sell"});
#line 216
 testRunner.And("I navigate to Property Type Selection after selection option", ((string)(null)), table28, "And ");
#line 219
 testRunner.When("I Select Property Type as \"Villa\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 220
 testRunner.And("I move back to Property Type Selection from Bedrooms Selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 221
 testRunner.Then("Color of the Villa option should be \"#16B24D\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropType029_Verify that link for Moving forward is displayed as enabled w" +
            "hen user moves back to Property type selection from Bedrooms selection.")]
        public virtual void PropReg_PropType029_VerifyThatLinkForMovingForwardIsDisplayedAsEnabledWhenUserMovesBackToPropertyTypeSelectionFromBedroomsSelection_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropType029_Verify that link for Moving forward is displayed as enabled w" +
                    "hen user moves back to Property type selection from Bedrooms selection.", ((string[])(null)));
#line 223
this.ScenarioSetup(scenarioInfo);
#line 224
 testRunner.Given("I am on Property Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category"});
            table29.AddRow(new string[] {
                        "Sell"});
#line 225
 testRunner.And("I navigate to Property Type Selection after selection option", ((string)(null)), table29, "And ");
#line 228
 testRunner.When("I Select Property Type as \"House\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 229
 testRunner.And("I move back to Property Type Selection from Bedrooms Selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 230
 testRunner.Then("Link for Moving forward is displayed as enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropType030_Verify that Bedroom selection question is displayed on clicki" +
            "ng Forward link on Property Type.")]
        public virtual void PropReg_PropType030_VerifyThatBedroomSelectionQuestionIsDisplayedOnClickingForwardLinkOnPropertyType_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropType030_Verify that Bedroom selection question is displayed on clicki" +
                    "ng Forward link on Property Type.", ((string[])(null)));
#line 232
this.ScenarioSetup(scenarioInfo);
#line 233
 testRunner.Given("I am on Property Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category"});
            table30.AddRow(new string[] {
                        "Sell"});
#line 234
 testRunner.And("I navigate to Property Type Selection after selection option", ((string)(null)), table30, "And ");
#line 237
 testRunner.When("I Select Property Type as \"House\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 238
 testRunner.And("I move back to Property Type Selection from Bedrooms Selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 239
 testRunner.And("I click on Forward Link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 240
 testRunner.Then("Bedroom selection question should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropType031_Verify that Property Value selection question is displayed on" +
            " clicking Forward link on Property Type when Property Type selected was Land")]
        public virtual void PropReg_PropType031_VerifyThatPropertyValueSelectionQuestionIsDisplayedOnClickingForwardLinkOnPropertyTypeWhenPropertyTypeSelectedWasLand()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropType031_Verify that Property Value selection question is displayed on" +
                    " clicking Forward link on Property Type when Property Type selected was Land", ((string[])(null)));
#line 242
this.ScenarioSetup(scenarioInfo);
#line 243
 testRunner.Given("I am on Property Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category"});
            table31.AddRow(new string[] {
                        "Sell"});
#line 244
 testRunner.And("I navigate to Property Type Selection after selection option", ((string)(null)), table31, "And ");
#line 247
 testRunner.When("I Select Property Type as \"Land\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 248
 testRunner.And("I move back to Property Type Selection from Property Value Selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 249
 testRunner.And("I click on Forward Link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 250
 testRunner.Then("Approximate Value Selection question should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_PropType032_Verify the Question for Property type options on Registration" +
            " Page for Rent Listing.")]
        public virtual void PropReg_PropType032_VerifyTheQuestionForPropertyTypeOptionsOnRegistrationPageForRentListing_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_PropType032_Verify the Question for Property type options on Registration" +
                    " Page for Rent Listing.", ((string[])(null)));
#line 252
 this.ScenarioSetup(scenarioInfo);
#line 253
 testRunner.Given("I am on Property Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category"});
            table32.AddRow(new string[] {
                        "Rent"});
#line 254
 testRunner.And("I navigate to Property Type Selection after selection option", ((string)(null)), table32, "And ");
#line 257
 testRunner.Then("Q \"What type of property are you renting?\" should be displayed for Property Type " +
                    "options", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
