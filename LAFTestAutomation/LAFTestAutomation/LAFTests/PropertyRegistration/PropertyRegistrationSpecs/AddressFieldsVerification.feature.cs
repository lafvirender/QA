// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace LAFTests.PropertyRegistration.PropertyRegistrationSpecs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("AddressFieldsVerification")]
    public partial class AddressFieldsVerificationFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "AddressFieldsVerification.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "AddressFieldsVerification", "\tIn order to register property for Sell or Rent\r\n\tAs a User\r\n\tI want to be able t" +
                    "o proceed after selecting valid values in Address Fields.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Address001_Verify the Question for Address section for a House Property T" +
            "ype with Listing Category as Sell.")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        public virtual void PropReg_Address001_VerifyTheQuestionForAddressSectionForAHousePropertyTypeWithListingCategoryAsSell_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Address001_Verify the Question for Address section for a House Property T" +
                    "ype with Listing Category as Sell.", new string[] {
                        "mytag"});
#line 7
 this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("I am on Prop_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue"});
            table1.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK"});
#line 9
 testRunner.And("I navigate to Address Section after entering details", ((string)(null)), table1, "And ");
#line 12
 testRunner.Then("Q \"What is the address of the house you are looking to sell?\" should be displayed" +
                    " for Address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Address002_Verify that Progress line indicates selection of Property Valu" +
            "e.")]
        public virtual void PropReg_Address002_VerifyThatProgressLineIndicatesSelectionOfPropertyValue_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Address002_Verify that Progress line indicates selection of Property Valu" +
                    "e.", ((string[])(null)));
#line 14
 this.ScenarioSetup(scenarioInfo);
#line 15
 testRunner.Given("I am on Prop_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue"});
            table2.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK"});
#line 16
 testRunner.And("I navigate to Address Section after entering details", ((string)(null)), table2, "And ");
#line 19
 testRunner.Then("Selection of Property Value is displayed in Progress section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Address003_Verify that option for entering the address manually should be" +
            " available.")]
        public virtual void PropReg_Address003_VerifyThatOptionForEnteringTheAddressManuallyShouldBeAvailable_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Address003_Verify that option for entering the address manually should be" +
                    " available.", ((string[])(null)));
#line 21
 this.ScenarioSetup(scenarioInfo);
#line 22
 testRunner.Given("I am on Prop_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue"});
            table3.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK"});
#line 23
 testRunner.And("I navigate to Address Section after entering details", ((string)(null)), table3, "And ");
#line 26
 testRunner.Then("Option for entering the address manually with text \"Enter your address manually\" " +
                    "should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Address004_Verify that field for searching address should be available")]
        public virtual void PropReg_Address004_VerifyThatFieldForSearchingAddressShouldBeAvailable()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Address004_Verify that field for searching address should be available", ((string[])(null)));
#line 28
 this.ScenarioSetup(scenarioInfo);
#line 29
 testRunner.Given("I am on Prop_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue"});
            table4.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK"});
#line 30
 testRunner.And("I navigate to Address Section after entering details", ((string)(null)), table4, "And ");
#line 33
 testRunner.Then("Search field should be available for searching address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Address005_Verify that Next button is available")]
        public virtual void PropReg_Address005_VerifyThatNextButtonIsAvailable()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Address005_Verify that Next button is available", ((string[])(null)));
#line 35
 this.ScenarioSetup(scenarioInfo);
#line 36
 testRunner.Given("I am on Prop_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue"});
            table5.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK"});
#line 37
 testRunner.And("I navigate to Address Section after entering details", ((string)(null)), table5, "And ");
#line 40
 testRunner.Then("Next button is available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Address006_Verify that link for Moving Forward should be disabled by defa" +
            "ult")]
        public virtual void PropReg_Address006_VerifyThatLinkForMovingForwardShouldBeDisabledByDefault()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Address006_Verify that link for Moving Forward should be disabled by defa" +
                    "ult", ((string[])(null)));
#line 42
 this.ScenarioSetup(scenarioInfo);
#line 43
 testRunner.Given("I am on Prop_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue"});
            table6.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK"});
#line 44
 testRunner.And("I navigate to Address Section after entering details", ((string)(null)), table6, "And ");
#line 47
 testRunner.Then("Link for Moving Forward should not be enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Address007_Verify that on selecting the option for entering the address m" +
            "anually, UnitNo, StreetNo, Street, Suburb, State, and PostCode field should be d" +
            "isplayed")]
        public virtual void PropReg_Address007_VerifyThatOnSelectingTheOptionForEnteringTheAddressManuallyUnitNoStreetNoStreetSuburbStateAndPostCodeFieldShouldBeDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Address007_Verify that on selecting the option for entering the address m" +
                    "anually, UnitNo, StreetNo, Street, Suburb, State, and PostCode field should be d" +
                    "isplayed", ((string[])(null)));
#line 49
 this.ScenarioSetup(scenarioInfo);
#line 50
 testRunner.Given("I am on Prop_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue"});
            table7.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK"});
#line 51
 testRunner.And("I navigate to Address Section after entering details", ((string)(null)), table7, "And ");
#line 54
 testRunner.When("I select option for entering address manually", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 55
 testRunner.Then("Fields Unit/App No., StreetNo., Street, Suburb, State and PostCode should be disp" +
                    "layed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Address008_Verify that error is displayed for empty Address Search field")]
        public virtual void PropReg_Address008_VerifyThatErrorIsDisplayedForEmptyAddressSearchField()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Address008_Verify that error is displayed for empty Address Search field", ((string[])(null)));
#line 57
 this.ScenarioSetup(scenarioInfo);
#line 58
 testRunner.Given("I am on Prop_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue"});
            table8.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK"});
#line 59
 testRunner.And("I navigate to Address Section after entering details", ((string)(null)), table8, "And ");
#line 62
 testRunner.When("I Click Next", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 63
 testRunner.Then("Error is displayed for empty Address Search field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Address009_Verify that error is displayed for empty Street No field")]
        public virtual void PropReg_Address009_VerifyThatErrorIsDisplayedForEmptyStreetNoField()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Address009_Verify that error is displayed for empty Street No field", ((string[])(null)));
#line 65
 this.ScenarioSetup(scenarioInfo);
#line 66
 testRunner.Given("I am on Prop_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue"});
            table9.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK"});
#line 67
 testRunner.And("I navigate to Address Section after entering details", ((string)(null)), table9, "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "UnitAppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode"});
            table10.AddRow(new string[] {
                        "Unit1",
                        "",
                        "Street",
                        "Suburb",
                        "VIC",
                        "3081"});
#line 70
 testRunner.When("Enter values in Address Fields as", ((string)(null)), table10, "When ");
#line 73
 testRunner.Then("Error is displayed for empty Street No field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Address010_Verify that error is displayed for empty Street field")]
        public virtual void PropReg_Address010_VerifyThatErrorIsDisplayedForEmptyStreetField()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Address010_Verify that error is displayed for empty Street field", ((string[])(null)));
#line 75
 this.ScenarioSetup(scenarioInfo);
#line 76
 testRunner.Given("I am on Prop_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue"});
            table11.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK"});
#line 77
 testRunner.And("I navigate to Address Section after entering details", ((string)(null)), table11, "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "UnitAppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode"});
            table12.AddRow(new string[] {
                        "Unit1",
                        "Street No",
                        "",
                        "Suburb",
                        "VIC",
                        "3081"});
#line 80
 testRunner.When("Enter values in Address Fields as", ((string)(null)), table12, "When ");
#line 83
 testRunner.Then("Error is displayed for empty Street field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Address011_Verify that error is displayed for empty Suburb field")]
        public virtual void PropReg_Address011_VerifyThatErrorIsDisplayedForEmptySuburbField()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Address011_Verify that error is displayed for empty Suburb field", ((string[])(null)));
#line 85
 this.ScenarioSetup(scenarioInfo);
#line 86
 testRunner.Given("I am on Prop_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue"});
            table13.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK"});
#line 87
 testRunner.And("I navigate to Address Section after entering details", ((string)(null)), table13, "And ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "UnitAppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode"});
            table14.AddRow(new string[] {
                        "Unit1",
                        "Street No",
                        "Street",
                        "",
                        "VIC",
                        "3081"});
#line 90
 testRunner.When("Enter values in Address Fields as", ((string)(null)), table14, "When ");
#line 93
 testRunner.Then("Error is displayed for empty Suburb field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Address012_Verify that error is displayed for empty State field")]
        public virtual void PropReg_Address012_VerifyThatErrorIsDisplayedForEmptyStateField()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Address012_Verify that error is displayed for empty State field", ((string[])(null)));
#line 95
 this.ScenarioSetup(scenarioInfo);
#line 96
 testRunner.Given("I am on Prop_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue"});
            table15.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK"});
#line 97
 testRunner.And("I navigate to Address Section after entering details", ((string)(null)), table15, "And ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "UnitAppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode"});
            table16.AddRow(new string[] {
                        "Unit1",
                        "Street No",
                        "Street",
                        "Suburb",
                        "",
                        "3081"});
#line 100
 testRunner.When("Enter values in Address Fields as", ((string)(null)), table16, "When ");
#line 103
 testRunner.Then("Error is displayed for empty State field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Address013_Verify that error is displayed for empty PostCode field")]
        public virtual void PropReg_Address013_VerifyThatErrorIsDisplayedForEmptyPostCodeField()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Address013_Verify that error is displayed for empty PostCode field", ((string[])(null)));
#line 105
 this.ScenarioSetup(scenarioInfo);
#line 106
 testRunner.Given("I am on Prop_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue"});
            table17.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK"});
#line 107
 testRunner.And("I navigate to Address Section after entering details", ((string)(null)), table17, "And ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "UnitAppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode"});
            table18.AddRow(new string[] {
                        "Unit1",
                        "Street No",
                        "Street",
                        "Suburb",
                        "VIC",
                        ""});
#line 110
 testRunner.When("Enter values in Address Fields as", ((string)(null)), table18, "When ");
#line 113
 testRunner.Then("Error is displayed for empty PostCode field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Address014_Verify that error is displayed for empty Unit_AppNo field for " +
            "Unit property type")]
        public virtual void PropReg_Address014_VerifyThatErrorIsDisplayedForEmptyUnit_AppNoFieldForUnitPropertyType()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Address014_Verify that error is displayed for empty Unit_AppNo field for " +
                    "Unit property type", ((string[])(null)));
#line 115
 this.ScenarioSetup(scenarioInfo);
#line 116
 testRunner.Given("I am on Prop_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue"});
            table19.AddRow(new string[] {
                        "Sell",
                        "Unit",
                        "One",
                        "LessThanTwoHunderedK"});
#line 117
 testRunner.And("I navigate to Address Section after entering details", ((string)(null)), table19, "And ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "UnitAppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode"});
            table20.AddRow(new string[] {
                        "",
                        "Street No",
                        "Street",
                        "Suburb",
                        "VIC",
                        "3028"});
#line 120
 testRunner.When("Enter values in Address Fields as", ((string)(null)), table20, "When ");
#line 123
 testRunner.Then("Error is displayed for empty Unit_AppNo field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Address015_Verify that error is displayed for empty Unit_AppNo field for " +
            "Apartment property type")]
        public virtual void PropReg_Address015_VerifyThatErrorIsDisplayedForEmptyUnit_AppNoFieldForApartmentPropertyType()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Address015_Verify that error is displayed for empty Unit_AppNo field for " +
                    "Apartment property type", ((string[])(null)));
#line 125
 this.ScenarioSetup(scenarioInfo);
#line 126
 testRunner.Given("I am on Prop_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue"});
            table21.AddRow(new string[] {
                        "Sell",
                        "Apartment",
                        "One",
                        "LessThanTwoHunderedK"});
#line 127
 testRunner.And("I navigate to Address Section after entering details", ((string)(null)), table21, "And ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Unit_AppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode"});
            table22.AddRow(new string[] {
                        "",
                        "Street No",
                        "Street",
                        "Suburb",
                        "VIC",
                        "3028"});
#line 130
 testRunner.When("Enter values in Address Fields as", ((string)(null)), table22, "When ");
#line 133
 testRunner.Then("Error is displayed for empty Unit_AppNo field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Address016_Verify that error is not displayed for empty Unit_AppNo field " +
            "for property type other than Unit or Apartment")]
        public virtual void PropReg_Address016_VerifyThatErrorIsNotDisplayedForEmptyUnit_AppNoFieldForPropertyTypeOtherThanUnitOrApartment()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Address016_Verify that error is not displayed for empty Unit_AppNo field " +
                    "for property type other than Unit or Apartment", ((string[])(null)));
#line 135
 this.ScenarioSetup(scenarioInfo);
#line 136
 testRunner.Given("I am on Prop_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue"});
            table23.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK"});
#line 137
 testRunner.And("I navigate to Address Section after entering details", ((string)(null)), table23, "And ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "UnitAppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode"});
            table24.AddRow(new string[] {
                        "",
                        "Street No",
                        "Street",
                        "Suburb",
                        "VIC",
                        "3028"});
#line 140
 testRunner.When("Enter values in Address Fields as", ((string)(null)), table24, "When ");
#line 143
 testRunner.Then("Property Description Question is Displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Address017_Verify that Progress line indicates entry of Address fields")]
        public virtual void PropReg_Address017_VerifyThatProgressLineIndicatesEntryOfAddressFields()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Address017_Verify that Progress line indicates entry of Address fields", ((string[])(null)));
#line 145
 this.ScenarioSetup(scenarioInfo);
#line 146
 testRunner.Given("I am on Prop_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue"});
            table25.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK"});
#line 147
 testRunner.And("I navigate to Address Section after entering details", ((string)(null)), table25, "And ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "UnitAppNo",
                        "StreetNo",
                        "Street",
                        "Suburb",
                        "State",
                        "PostCode"});
            table26.AddRow(new string[] {
                        "",
                        "Street No",
                        "Street",
                        "Suburb",
                        "VIC",
                        "3028"});
#line 150
 testRunner.When("Enter values in Address Fields as", ((string)(null)), table26, "When ");
#line 153
 testRunner.And("I move back to Address section from Property Description section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 154
 testRunner.Then("Progress line indicates entry of Address fields", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Address018_Verify that addresses in the address list should start with se" +
            "arched keyword")]
        public virtual void PropReg_Address018_VerifyThatAddressesInTheAddressListShouldStartWithSearchedKeyword()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Address018_Verify that addresses in the address list should start with se" +
                    "arched keyword", ((string[])(null)));
#line 156
 this.ScenarioSetup(scenarioInfo);
#line 157
 testRunner.Given("I am on Prop_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue"});
            table27.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK"});
#line 158
 testRunner.And("I navigate to Address Section after entering details", ((string)(null)), table27, "And ");
#line 161
 testRunner.When("I enter search keyword as \"A\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 162
 testRunner.Then("Addresses in the address list should start with searched keyword \"A\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Address019_Verify that correct Street No should be populated for selected" +
            " address")]
        public virtual void PropReg_Address019_VerifyThatCorrectStreetNoShouldBePopulatedForSelectedAddress()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Address019_Verify that correct Street No should be populated for selected" +
                    " address", ((string[])(null)));
#line 164
 this.ScenarioSetup(scenarioInfo);
#line 165
 testRunner.Given("I am on Prop_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue"});
            table28.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK"});
#line 166
 testRunner.And("I navigate to Address Section after entering details", ((string)(null)), table28, "And ");
#line 169
 testRunner.When("I enter search keyword as \"A\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 170
 testRunner.And("I select \"1\" Option in the populated Address List", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 171
 testRunner.Then("Correct Street No should be populated for selected address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Address020_Verify that correct Street should be populated for selected ad" +
            "dress")]
        public virtual void PropReg_Address020_VerifyThatCorrectStreetShouldBePopulatedForSelectedAddress()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Address020_Verify that correct Street should be populated for selected ad" +
                    "dress", ((string[])(null)));
#line 173
 this.ScenarioSetup(scenarioInfo);
#line 174
 testRunner.Given("I am on Prop_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue"});
            table29.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK"});
#line 175
 testRunner.And("I navigate to Address Section after entering details", ((string)(null)), table29, "And ");
#line 178
 testRunner.When("I enter search keyword as \"A\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 179
 testRunner.And("I select \"1\" Option in the populated Address List", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 180
 testRunner.Then("Correct Street should be populated for selected address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Address021_Verify that correct Suburb should be populated for selected ad" +
            "dress")]
        public virtual void PropReg_Address021_VerifyThatCorrectSuburbShouldBePopulatedForSelectedAddress()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Address021_Verify that correct Suburb should be populated for selected ad" +
                    "dress", ((string[])(null)));
#line 182
 this.ScenarioSetup(scenarioInfo);
#line 183
 testRunner.Given("I am on Prop_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue"});
            table30.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK"});
#line 184
 testRunner.And("I navigate to Address Section after entering details", ((string)(null)), table30, "And ");
#line 187
 testRunner.When("I enter search keyword as \"A\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 188
 testRunner.And("I select \"1\" Option in the populated Address List", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 189
 testRunner.Then("Correct Suburb should be populated for selected address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Address022_Verify that correct State should be populated for selected add" +
            "ress")]
        public virtual void PropReg_Address022_VerifyThatCorrectStateShouldBePopulatedForSelectedAddress()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Address022_Verify that correct State should be populated for selected add" +
                    "ress", ((string[])(null)));
#line 191
 this.ScenarioSetup(scenarioInfo);
#line 192
 testRunner.Given("I am on Prop_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue"});
            table31.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK"});
#line 193
 testRunner.And("I navigate to Address Section after entering details", ((string)(null)), table31, "And ");
#line 196
 testRunner.When("I enter search keyword as \"A\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 197
 testRunner.And("I select \"1\" Option in the populated Address List", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 198
 testRunner.Then("Correct State should be populated for selected address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Address023_Verify that correct PostCode should be populated for selected " +
            "address")]
        public virtual void PropReg_Address023_VerifyThatCorrectPostCodeShouldBePopulatedForSelectedAddress()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Address023_Verify that correct PostCode should be populated for selected " +
                    "address", ((string[])(null)));
#line 200
 this.ScenarioSetup(scenarioInfo);
#line 201
 testRunner.Given("I am on Prop_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue"});
            table32.AddRow(new string[] {
                        "Sell",
                        "House",
                        "One",
                        "LessThanTwoHunderedK"});
#line 202
 testRunner.And("I navigate to Address Section after entering details", ((string)(null)), table32, "And ");
#line 205
 testRunner.When("I enter search keyword as \"A\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 206
 testRunner.And("I select \"1\" Option in the populated Address List", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 207
 testRunner.Then("Correct PostCode should be populated for selected address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Address024_Verify the Question for Address section for a Unit Property Ty" +
            "pe with Listing Category as Sell.")]
        public virtual void PropReg_Address024_VerifyTheQuestionForAddressSectionForAUnitPropertyTypeWithListingCategoryAsSell_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Address024_Verify the Question for Address section for a Unit Property Ty" +
                    "pe with Listing Category as Sell.", ((string[])(null)));
#line 209
 this.ScenarioSetup(scenarioInfo);
#line 210
 testRunner.Given("I am on Prop_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue"});
            table33.AddRow(new string[] {
                        "Sell",
                        "Unit",
                        "One",
                        "LessThanTwoHunderedK"});
#line 211
 testRunner.And("I navigate to Address Section after entering details", ((string)(null)), table33, "And ");
#line 214
 testRunner.Then("Q \"What is the address of the unit you are looking to sell?\" should be displayed " +
                    "for Address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Address025_Verify the Question for Address section for a Land Property Ty" +
            "pe with Listing Category as Sell.")]
        public virtual void PropReg_Address025_VerifyTheQuestionForAddressSectionForALandPropertyTypeWithListingCategoryAsSell_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Address025_Verify the Question for Address section for a Land Property Ty" +
                    "pe with Listing Category as Sell.", ((string[])(null)));
#line 216
 this.ScenarioSetup(scenarioInfo);
#line 217
 testRunner.Given("I am on Prop_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue"});
            table34.AddRow(new string[] {
                        "Sell",
                        "Land",
                        "",
                        "LessThanTwoHunderedK"});
#line 218
 testRunner.And("I navigate to Address Section after entering details", ((string)(null)), table34, "And ");
#line 221
 testRunner.Then("Q \"What is the address of the land you are looking to sell?\" should be displayed " +
                    "for Address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Address026_Verify the Question for Address section for a Apartment Proper" +
            "ty Type with Listing Category as Sell.")]
        public virtual void PropReg_Address026_VerifyTheQuestionForAddressSectionForAApartmentPropertyTypeWithListingCategoryAsSell_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Address026_Verify the Question for Address section for a Apartment Proper" +
                    "ty Type with Listing Category as Sell.", ((string[])(null)));
#line 223
 this.ScenarioSetup(scenarioInfo);
#line 224
 testRunner.Given("I am on Prop_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue"});
            table35.AddRow(new string[] {
                        "Sell",
                        "Apartment",
                        "One",
                        "LessThanTwoHunderedK"});
#line 225
 testRunner.And("I navigate to Address Section after entering details", ((string)(null)), table35, "And ");
#line 228
 testRunner.Then("Q \"What is the address of the apartment you are looking to sell?\" should be displ" +
                    "ayed for Address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Address027_Verify the Question for Address section for a Townhouse Proper" +
            "ty Type with Listing Category as Sell.")]
        public virtual void PropReg_Address027_VerifyTheQuestionForAddressSectionForATownhousePropertyTypeWithListingCategoryAsSell_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Address027_Verify the Question for Address section for a Townhouse Proper" +
                    "ty Type with Listing Category as Sell.", ((string[])(null)));
#line 230
 this.ScenarioSetup(scenarioInfo);
#line 231
 testRunner.Given("I am on Prop_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue"});
            table36.AddRow(new string[] {
                        "Sell",
                        "Townhouse",
                        "One",
                        "LessThanTwoHunderedK"});
#line 232
 testRunner.And("I navigate to Address Section after entering details", ((string)(null)), table36, "And ");
#line 235
 testRunner.Then("Q \"What is the address of the townhouse you are looking to sell?\" should be displ" +
                    "ayed for Address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Address028_Verify the Question for Address section for a Villa Property T" +
            "ype with Listing Category as Sell.")]
        public virtual void PropReg_Address028_VerifyTheQuestionForAddressSectionForAVillaPropertyTypeWithListingCategoryAsSell_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Address028_Verify the Question for Address section for a Villa Property T" +
                    "ype with Listing Category as Sell.", ((string[])(null)));
#line 237
 this.ScenarioSetup(scenarioInfo);
#line 238
 testRunner.Given("I am on Prop_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue"});
            table37.AddRow(new string[] {
                        "Sell",
                        "Villa",
                        "One",
                        "LessThanTwoHunderedK"});
#line 239
 testRunner.And("I navigate to Address Section after entering details", ((string)(null)), table37, "And ");
#line 242
 testRunner.Then("Q \"What is the address of the villa you are looking to sell?\" should be displayed" +
                    " for Address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("PropReg_Address029_Verify the Question for Address section for a Property Type wi" +
            "th Listing Category as Rent.")]
        public virtual void PropReg_Address029_VerifyTheQuestionForAddressSectionForAPropertyTypeWithListingCategoryAsRent_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PropReg_Address029_Verify the Question for Address section for a Property Type wi" +
                    "th Listing Category as Rent.", ((string[])(null)));
#line 244
 this.ScenarioSetup(scenarioInfo);
#line 245
 testRunner.Given("I am on Prop_Registration Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "PropType",
                        "Beds",
                        "ApproxValue"});
            table38.AddRow(new string[] {
                        "Rent",
                        "Villa",
                        "One",
                        "LessThanTwoHundered"});
#line 246
 testRunner.And("I navigate to Address Section after entering details", ((string)(null)), table38, "And ");
#line 249
 testRunner.Then("Q \"What is the address of the villa you are looking to rent?\" should be displayed" +
                    " for Address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
